import { useState } from "react";

export interface Repository {
  id: number;
  name: string;
  url: string;
  status: "active" | "inactive";
  issues: number;
  prs: number;
  branches: number;
  lastSync: string;
}

export function useRepositorySettings() {
  const [repoUrl, setRepoUrl] = useState(
    "https://github.com/user/project-name.git"
  );
  const [accessToken, setAccessToken] = useState(
    "ghp_1234567890abcdefghijklmnopqrstuvwxyz"
  );
  const [autoCreatePR, setAutoCreatePR] = useState(true);
  const [autoGenerateDocs, setAutoGenerateDocs] = useState(true);
  const [autoAnalyzeIssues, setAutoAnalyzeIssues] = useState(true);

  const repositories: Repository[] = [
    {
      id: 1,
      name: "user/project-name",
      url: "https://github.com/user/project-name.git",
      status: "active",
      issues: 12,
      prs: 4,
      branches: 5,
      lastSync: "2023-06-15T10:42:00",
    },
    {
      id: 2,
      name: "user/another-project",
      url: "https://github.com/user/another-project.git",
      status: "inactive",
      issues: 5,
      prs: 1,
      branches: 2,
      lastSync: "2023-06-14T15:30:00",
    },
    {
      id: 3,
      name: "organization/shared-lib",
      url: "https://github.com/organization/shared-lib.git",
      status: "inactive",
      issues: 8,
      prs: 2,
      branches: 3,
      lastSync: "2023-06-13T11:20:00",
    },
  ];

  function formatDate(dateString: string) {
    const date = new Date(dateString);
    return date.toLocaleString();
  }

  return {
    repoUrl,
    setRepoUrl,
    accessToken,
    setAccessToken,
    autoCreatePR,
    setAutoCreatePR,
    autoGenerateDocs,
    setAutoGenerateDocs,
    autoAnalyzeIssues,
    setAutoAnalyzeIssues,
    repositories,
    formatDate,
  };
}