import { useState } from "react";
import type { RepositorySettings, Token } from "../types/repository-settings";

export interface UseRepositorySettingsOptions {
  initialSettings?: Partial<RepositorySettings>;
  onTokenChange?: (token: Token) => void;
  tokenSanitizer?: (token: string) => string;
}

export function useRepositorySettings(options: UseRepositorySettingsOptions = {}) {
  const {
    initialSettings = {},
    onTokenChange,
    tokenSanitizer = (token) => token, // default: no sanitization
  } = options;

  const [repoUrl, setRepoUrl] = useState(initialSettings.repoUrl ?? "");
  const [accessToken, setAccessTokenState] = useState(initialSettings.accessToken ?? "");
  const [autoCreatePR, setAutoCreatePR] = useState(initialSettings.autoCreatePR ?? false);
  const [autoGenerateDocs, setAutoGenerateDocs] = useState(initialSettings.autoGenerateDocs ?? false);

  // Token setter with optional sanitization and callback
  function setAccessToken(token: string) {
    const sanitized = tokenSanitizer(token);
    setAccessTokenState(sanitized);
    if (onTokenChange) {
      onTokenChange(sanitized);
    }
  }

  return {
    repoUrl,
    setRepoUrl,
    accessToken,
    setAccessToken,
    autoCreatePR,
    setAutoCreatePR,
    autoGenerateDocs,
    setAutoGenerateDocs,
  };
}