"use client";

import {
  Tabs,
  TabsContent,
  TabsList,
  TabsTrigger,
} from "@/components/ui/tabs";
import { AddRepositoryButton } from "@/components/add-repository-button";
import { useRepositorySettings } from "@/hooks/use-repository-settings";
import { RepositoryCard } from "@/components/repository-card";
import { RepositoryConfigForm } from "@/components/repository-config-form";
import { AccessTokenForm } from "@/components/access-token-form";

export default function RepositorySettings() {
  const {
    repoUrl,
    setRepoUrl,
    accessToken,
    setAccessToken,
    autoCreatePR,
    setAutoCreatePR,
    autoGenerateDocs,
    setAutoGenerateDocs,
    autoAnalyzeIssues,
    setAutoAnalyzeIssues,
    repositories,
    formatDate,
  } = useRepositorySettings();

  return (
    <div className="space-y-4">
      <div className="flex items-center justify-between">
        <h2 className="text-3xl font-bold tracking-tight">
          Repository Settings
        </h2>
        <AddRepositoryButton />
      </div>

      <Tabs defaultValue="repositories" className="w-full">
        <TabsList>
          <TabsTrigger value="repositories">Repositories</TabsTrigger>
          <TabsTrigger value="settings">Settings</TabsTrigger>
          <TabsTrigger value="access">Access Tokens</TabsTrigger>
        </TabsList>

        <TabsContent value="repositories" className="space-y-4">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {repositories.map((repo) => (
              <RepositoryCard
                key={repo.id}
                repo={repo}
                formatDate={formatDate}
              />
            ))}
          </div>
        </TabsContent>

        <TabsContent value="settings" className="space-y-4">
          <RepositoryConfigForm
            repoUrl={repoUrl}
            setRepoUrl={setRepoUrl}
            autoCreatePR={autoCreatePR}
            setAutoCreatePR={setAutoCreatePR}
            autoGenerateDocs={autoGenerateDocs}
            setAutoGenerateDocs={setAutoGenerateDocs}
            autoAnalyzeIssues={autoAnalyzeIssues}
            setAutoAnalyzeIssues={setAutoAnalyzeIssues}
          />
        </TabsContent>

        <TabsContent value="access" className="space-y-4">
          <AccessTokenForm
            accessToken={accessToken}
            setAccessToken={setAccessToken}
          />
        </TabsContent>
      </Tabs>
    </div>
  );
}
