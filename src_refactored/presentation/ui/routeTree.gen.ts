/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './app/__root'
import { Route as IndexRouteImport } from './app/index'
import { Route as AppLayoutRouteImport } from './app/app/_layout'
import { Route as AppUserIndexRouteImport } from './app/app/user/index'
import { Route as AppSettingsIndexRouteImport } from './app/app/settings/index'
import { Route as AppProjectsIndexRouteImport } from './app/app/projects/index'
import { Route as AppPersonasIndexRouteImport } from './app/app/personas/index'
import { Route as AppDashboardIndexRouteImport } from './app/app/dashboard/index'
import { Route as AppChatIndexRouteImport } from './app/app/chat/index'
import { Route as AppAgentsIndexRouteImport } from './app/app/agents/index'
import { Route as publicOnboardingIndexRouteImport } from './app/(public)/onboarding/index'
import { Route as AppUserLayoutRouteImport } from './app/app/user/_layout'
import { Route as AppSettingsProfileIndexRouteImport } from './app/app/settings/profile/index'
import { Route as AppSettingsLlmIndexRouteImport } from './app/app/settings/llm/index'
import { Route as AppSettingsAppearanceIndexRouteImport } from './app/app/settings/appearance/index'
import { Route as AppProjectsNewIndexRouteImport } from './app/app/projects/new/index'
import { Route as AppProjectsProjectIdIndexRouteImport } from './app/app/projects/$projectId/index'
import { Route as AppPersonasNewIndexRouteImport } from './app/app/personas/new/index'
import { Route as AppPersonasTemplateIdIndexRouteImport } from './app/app/personas/$templateId/index'
import { Route as AppAgentsNewIndexRouteImport } from './app/app/agents/new/index'
import { Route as AppAgentsAgentIdIndexRouteImport } from './app/app/agents/$agentId/index'
import { Route as AppUserDmConversationIdIndexRouteImport } from './app/app/user/dm/$conversationId/index'
import { Route as AppSettingsLlmNewIndexRouteImport } from './app/app/settings/llm/new/index'
import { Route as AppProjectsProjectIdSettingsIndexRouteImport } from './app/app/projects/$projectId/settings/index'
import { Route as AppProjectsProjectIdMembersIndexRouteImport } from './app/app/projects/$projectId/members/index'
import { Route as AppProjectsProjectIdDocsIndexRouteImport } from './app/app/projects/$projectId/docs/index'
import { Route as AppProjectsProjectIdChatIndexRouteImport } from './app/app/projects/$projectId/chat/index'
import { Route as AppPersonasTemplateIdEditIndexRouteImport } from './app/app/personas/$templateId/edit/index'
import { Route as AppAgentsAgentIdEditIndexRouteImport } from './app/app/agents/$agentId/edit/index'
import { Route as AppSettingsLlmConfigIdEditIndexRouteImport } from './app/app/settings/llm/$configId/edit/index'

const AppRouteImport = createFileRoute('/app')()
const AppUserRouteImport = createFileRoute('/app/user')()

const AppRoute = AppRouteImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppUserRoute = AppUserRouteImport.update({
  id: '/user',
  path: '/user',
  getParentRoute: () => AppRoute,
} as any)
const AppLayoutRoute = AppLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AppRoute,
} as any)
const AppUserIndexRoute = AppUserIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppUserRoute,
} as any)
const AppSettingsIndexRoute = AppSettingsIndexRouteImport.update({
  id: '/settings/',
  path: '/settings/',
  getParentRoute: () => AppRoute,
} as any)
const AppProjectsIndexRoute = AppProjectsIndexRouteImport.update({
  id: '/projects/',
  path: '/projects/',
  getParentRoute: () => AppRoute,
} as any)
const AppPersonasIndexRoute = AppPersonasIndexRouteImport.update({
  id: '/personas/',
  path: '/personas/',
  getParentRoute: () => AppRoute,
} as any)
const AppDashboardIndexRoute = AppDashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => AppRoute,
} as any)
const AppChatIndexRoute = AppChatIndexRouteImport.update({
  id: '/chat/',
  path: '/chat/',
  getParentRoute: () => AppRoute,
} as any)
const AppAgentsIndexRoute = AppAgentsIndexRouteImport.update({
  id: '/agents/',
  path: '/agents/',
  getParentRoute: () => AppRoute,
} as any)
const publicOnboardingIndexRoute = publicOnboardingIndexRouteImport.update({
  id: '/(public)/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppUserLayoutRoute = AppUserLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => AppUserRoute,
} as any)
const AppSettingsProfileIndexRoute = AppSettingsProfileIndexRouteImport.update({
  id: '/settings/profile/',
  path: '/settings/profile/',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsLlmIndexRoute = AppSettingsLlmIndexRouteImport.update({
  id: '/settings/llm/',
  path: '/settings/llm/',
  getParentRoute: () => AppRoute,
} as any)
const AppSettingsAppearanceIndexRoute =
  AppSettingsAppearanceIndexRouteImport.update({
    id: '/settings/appearance/',
    path: '/settings/appearance/',
    getParentRoute: () => AppRoute,
  } as any)
const AppProjectsNewIndexRoute = AppProjectsNewIndexRouteImport.update({
  id: '/projects/new/',
  path: '/projects/new/',
  getParentRoute: () => AppRoute,
} as any)
const AppProjectsProjectIdIndexRoute =
  AppProjectsProjectIdIndexRouteImport.update({
    id: '/projects/$projectId/',
    path: '/projects/$projectId/',
    getParentRoute: () => AppRoute,
  } as any)
const AppPersonasNewIndexRoute = AppPersonasNewIndexRouteImport.update({
  id: '/personas/new/',
  path: '/personas/new/',
  getParentRoute: () => AppRoute,
} as any)
const AppPersonasTemplateIdIndexRoute =
  AppPersonasTemplateIdIndexRouteImport.update({
    id: '/personas/$templateId/',
    path: '/personas/$templateId/',
    getParentRoute: () => AppRoute,
  } as any)
const AppAgentsNewIndexRoute = AppAgentsNewIndexRouteImport.update({
  id: '/agents/new/',
  path: '/agents/new/',
  getParentRoute: () => AppRoute,
} as any)
const AppAgentsAgentIdIndexRoute = AppAgentsAgentIdIndexRouteImport.update({
  id: '/agents/$agentId/',
  path: '/agents/$agentId/',
  getParentRoute: () => AppRoute,
} as any)
const AppUserDmConversationIdIndexRoute =
  AppUserDmConversationIdIndexRouteImport.update({
    id: '/dm/$conversationId/',
    path: '/dm/$conversationId/',
    getParentRoute: () => AppUserRoute,
  } as any)
const AppSettingsLlmNewIndexRoute = AppSettingsLlmNewIndexRouteImport.update({
  id: '/settings/llm/new/',
  path: '/settings/llm/new/',
  getParentRoute: () => AppRoute,
} as any)
const AppProjectsProjectIdSettingsIndexRoute =
  AppProjectsProjectIdSettingsIndexRouteImport.update({
    id: '/projects/$projectId/settings/',
    path: '/projects/$projectId/settings/',
    getParentRoute: () => AppRoute,
  } as any)
const AppProjectsProjectIdMembersIndexRoute =
  AppProjectsProjectIdMembersIndexRouteImport.update({
    id: '/projects/$projectId/members/',
    path: '/projects/$projectId/members/',
    getParentRoute: () => AppRoute,
  } as any)
const AppProjectsProjectIdDocsIndexRoute =
  AppProjectsProjectIdDocsIndexRouteImport.update({
    id: '/projects/$projectId/docs/',
    path: '/projects/$projectId/docs/',
    getParentRoute: () => AppRoute,
  } as any)
const AppProjectsProjectIdChatIndexRoute =
  AppProjectsProjectIdChatIndexRouteImport.update({
    id: '/projects/$projectId/chat/',
    path: '/projects/$projectId/chat/',
    getParentRoute: () => AppRoute,
  } as any)
const AppPersonasTemplateIdEditIndexRoute =
  AppPersonasTemplateIdEditIndexRouteImport.update({
    id: '/personas/$templateId/edit/',
    path: '/personas/$templateId/edit/',
    getParentRoute: () => AppRoute,
  } as any)
const AppAgentsAgentIdEditIndexRoute =
  AppAgentsAgentIdEditIndexRouteImport.update({
    id: '/agents/$agentId/edit/',
    path: '/agents/$agentId/edit/',
    getParentRoute: () => AppRoute,
  } as any)
const AppSettingsLlmConfigIdEditIndexRoute =
  AppSettingsLlmConfigIdEditIndexRouteImport.update({
    id: '/settings/llm/$configId/edit/',
    path: '/settings/llm/$configId/edit/',
    getParentRoute: () => AppRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRoute
  '/app/user': typeof AppUserLayoutRoute
  '/onboarding': typeof publicOnboardingIndexRoute
  '/app/agents': typeof AppAgentsIndexRoute
  '/app/chat': typeof AppChatIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/personas': typeof AppPersonasIndexRoute
  '/app/projects': typeof AppProjectsIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/user/': typeof AppUserIndexRoute
  '/app/agents/$agentId': typeof AppAgentsAgentIdIndexRoute
  '/app/agents/new': typeof AppAgentsNewIndexRoute
  '/app/personas/$templateId': typeof AppPersonasTemplateIdIndexRoute
  '/app/personas/new': typeof AppPersonasNewIndexRoute
  '/app/projects/$projectId': typeof AppProjectsProjectIdIndexRoute
  '/app/projects/new': typeof AppProjectsNewIndexRoute
  '/app/settings/appearance': typeof AppSettingsAppearanceIndexRoute
  '/app/settings/llm': typeof AppSettingsLlmIndexRoute
  '/app/settings/profile': typeof AppSettingsProfileIndexRoute
  '/app/agents/$agentId/edit': typeof AppAgentsAgentIdEditIndexRoute
  '/app/personas/$templateId/edit': typeof AppPersonasTemplateIdEditIndexRoute
  '/app/projects/$projectId/chat': typeof AppProjectsProjectIdChatIndexRoute
  '/app/projects/$projectId/docs': typeof AppProjectsProjectIdDocsIndexRoute
  '/app/projects/$projectId/members': typeof AppProjectsProjectIdMembersIndexRoute
  '/app/projects/$projectId/settings': typeof AppProjectsProjectIdSettingsIndexRoute
  '/app/settings/llm/new': typeof AppSettingsLlmNewIndexRoute
  '/app/user/dm/$conversationId': typeof AppUserDmConversationIdIndexRoute
  '/app/settings/llm/$configId/edit': typeof AppSettingsLlmConfigIdEditIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/app': typeof AppLayoutRoute
  '/app/user': typeof AppUserIndexRoute
  '/onboarding': typeof publicOnboardingIndexRoute
  '/app/agents': typeof AppAgentsIndexRoute
  '/app/chat': typeof AppChatIndexRoute
  '/app/dashboard': typeof AppDashboardIndexRoute
  '/app/personas': typeof AppPersonasIndexRoute
  '/app/projects': typeof AppProjectsIndexRoute
  '/app/settings': typeof AppSettingsIndexRoute
  '/app/agents/$agentId': typeof AppAgentsAgentIdIndexRoute
  '/app/agents/new': typeof AppAgentsNewIndexRoute
  '/app/personas/$templateId': typeof AppPersonasTemplateIdIndexRoute
  '/app/personas/new': typeof AppPersonasNewIndexRoute
  '/app/projects/$projectId': typeof AppProjectsProjectIdIndexRoute
  '/app/projects/new': typeof AppProjectsNewIndexRoute
  '/app/settings/appearance': typeof AppSettingsAppearanceIndexRoute
  '/app/settings/llm': typeof AppSettingsLlmIndexRoute
  '/app/settings/profile': typeof AppSettingsProfileIndexRoute
  '/app/agents/$agentId/edit': typeof AppAgentsAgentIdEditIndexRoute
  '/app/personas/$templateId/edit': typeof AppPersonasTemplateIdEditIndexRoute
  '/app/projects/$projectId/chat': typeof AppProjectsProjectIdChatIndexRoute
  '/app/projects/$projectId/docs': typeof AppProjectsProjectIdDocsIndexRoute
  '/app/projects/$projectId/members': typeof AppProjectsProjectIdMembersIndexRoute
  '/app/projects/$projectId/settings': typeof AppProjectsProjectIdSettingsIndexRoute
  '/app/settings/llm/new': typeof AppSettingsLlmNewIndexRoute
  '/app/user/dm/$conversationId': typeof AppUserDmConversationIdIndexRoute
  '/app/settings/llm/$configId/edit': typeof AppSettingsLlmConfigIdEditIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/app': typeof AppRouteWithChildren
  '/app/_layout': typeof AppLayoutRoute
  '/app/user': typeof AppUserRouteWithChildren
  '/app/user/_layout': typeof AppUserLayoutRoute
  '/(public)/onboarding/': typeof publicOnboardingIndexRoute
  '/app/agents/': typeof AppAgentsIndexRoute
  '/app/chat/': typeof AppChatIndexRoute
  '/app/dashboard/': typeof AppDashboardIndexRoute
  '/app/personas/': typeof AppPersonasIndexRoute
  '/app/projects/': typeof AppProjectsIndexRoute
  '/app/settings/': typeof AppSettingsIndexRoute
  '/app/user/': typeof AppUserIndexRoute
  '/app/agents/$agentId/': typeof AppAgentsAgentIdIndexRoute
  '/app/agents/new/': typeof AppAgentsNewIndexRoute
  '/app/personas/$templateId/': typeof AppPersonasTemplateIdIndexRoute
  '/app/personas/new/': typeof AppPersonasNewIndexRoute
  '/app/projects/$projectId/': typeof AppProjectsProjectIdIndexRoute
  '/app/projects/new/': typeof AppProjectsNewIndexRoute
  '/app/settings/appearance/': typeof AppSettingsAppearanceIndexRoute
  '/app/settings/llm/': typeof AppSettingsLlmIndexRoute
  '/app/settings/profile/': typeof AppSettingsProfileIndexRoute
  '/app/agents/$agentId/edit/': typeof AppAgentsAgentIdEditIndexRoute
  '/app/personas/$templateId/edit/': typeof AppPersonasTemplateIdEditIndexRoute
  '/app/projects/$projectId/chat/': typeof AppProjectsProjectIdChatIndexRoute
  '/app/projects/$projectId/docs/': typeof AppProjectsProjectIdDocsIndexRoute
  '/app/projects/$projectId/members/': typeof AppProjectsProjectIdMembersIndexRoute
  '/app/projects/$projectId/settings/': typeof AppProjectsProjectIdSettingsIndexRoute
  '/app/settings/llm/new/': typeof AppSettingsLlmNewIndexRoute
  '/app/user/dm/$conversationId/': typeof AppUserDmConversationIdIndexRoute
  '/app/settings/llm/$configId/edit/': typeof AppSettingsLlmConfigIdEditIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/app'
    | '/app/user'
    | '/onboarding'
    | '/app/agents'
    | '/app/chat'
    | '/app/dashboard'
    | '/app/personas'
    | '/app/projects'
    | '/app/settings'
    | '/app/user/'
    | '/app/agents/$agentId'
    | '/app/agents/new'
    | '/app/personas/$templateId'
    | '/app/personas/new'
    | '/app/projects/$projectId'
    | '/app/projects/new'
    | '/app/settings/appearance'
    | '/app/settings/llm'
    | '/app/settings/profile'
    | '/app/agents/$agentId/edit'
    | '/app/personas/$templateId/edit'
    | '/app/projects/$projectId/chat'
    | '/app/projects/$projectId/docs'
    | '/app/projects/$projectId/members'
    | '/app/projects/$projectId/settings'
    | '/app/settings/llm/new'
    | '/app/user/dm/$conversationId'
    | '/app/settings/llm/$configId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/app'
    | '/app/user'
    | '/onboarding'
    | '/app/agents'
    | '/app/chat'
    | '/app/dashboard'
    | '/app/personas'
    | '/app/projects'
    | '/app/settings'
    | '/app/agents/$agentId'
    | '/app/agents/new'
    | '/app/personas/$templateId'
    | '/app/personas/new'
    | '/app/projects/$projectId'
    | '/app/projects/new'
    | '/app/settings/appearance'
    | '/app/settings/llm'
    | '/app/settings/profile'
    | '/app/agents/$agentId/edit'
    | '/app/personas/$templateId/edit'
    | '/app/projects/$projectId/chat'
    | '/app/projects/$projectId/docs'
    | '/app/projects/$projectId/members'
    | '/app/projects/$projectId/settings'
    | '/app/settings/llm/new'
    | '/app/user/dm/$conversationId'
    | '/app/settings/llm/$configId/edit'
  id:
    | '__root__'
    | '/'
    | '/app'
    | '/app/_layout'
    | '/app/user'
    | '/app/user/_layout'
    | '/(public)/onboarding/'
    | '/app/agents/'
    | '/app/chat/'
    | '/app/dashboard/'
    | '/app/personas/'
    | '/app/projects/'
    | '/app/settings/'
    | '/app/user/'
    | '/app/agents/$agentId/'
    | '/app/agents/new/'
    | '/app/personas/$templateId/'
    | '/app/personas/new/'
    | '/app/projects/$projectId/'
    | '/app/projects/new/'
    | '/app/settings/appearance/'
    | '/app/settings/llm/'
    | '/app/settings/profile/'
    | '/app/agents/$agentId/edit/'
    | '/app/personas/$templateId/edit/'
    | '/app/projects/$projectId/chat/'
    | '/app/projects/$projectId/docs/'
    | '/app/projects/$projectId/members/'
    | '/app/projects/$projectId/settings/'
    | '/app/settings/llm/new/'
    | '/app/user/dm/$conversationId/'
    | '/app/settings/llm/$configId/edit/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AppRoute: typeof AppRouteWithChildren
  publicOnboardingIndexRoute: typeof publicOnboardingIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/app': {
      id: '/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/user': {
      id: '/app/user'
      path: '/user'
      fullPath: '/app/user'
      preLoaderRoute: typeof AppUserRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/_layout': {
      id: '/app/_layout'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof AppLayoutRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/user/': {
      id: '/app/user/'
      path: '/'
      fullPath: '/app/user/'
      preLoaderRoute: typeof AppUserIndexRouteImport
      parentRoute: typeof AppUserRoute
    }
    '/app/settings/': {
      id: '/app/settings/'
      path: '/settings'
      fullPath: '/app/settings'
      preLoaderRoute: typeof AppSettingsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/': {
      id: '/app/projects/'
      path: '/projects'
      fullPath: '/app/projects'
      preLoaderRoute: typeof AppProjectsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/personas/': {
      id: '/app/personas/'
      path: '/personas'
      fullPath: '/app/personas'
      preLoaderRoute: typeof AppPersonasIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/dashboard/': {
      id: '/app/dashboard/'
      path: '/dashboard'
      fullPath: '/app/dashboard'
      preLoaderRoute: typeof AppDashboardIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/chat/': {
      id: '/app/chat/'
      path: '/chat'
      fullPath: '/app/chat'
      preLoaderRoute: typeof AppChatIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/agents/': {
      id: '/app/agents/'
      path: '/agents'
      fullPath: '/app/agents'
      preLoaderRoute: typeof AppAgentsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/(public)/onboarding/': {
      id: '/(public)/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof publicOnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/app/user/_layout': {
      id: '/app/user/_layout'
      path: '/user'
      fullPath: '/app/user'
      preLoaderRoute: typeof AppUserLayoutRouteImport
      parentRoute: typeof AppUserRoute
    }
    '/app/settings/profile/': {
      id: '/app/settings/profile/'
      path: '/settings/profile'
      fullPath: '/app/settings/profile'
      preLoaderRoute: typeof AppSettingsProfileIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/settings/llm/': {
      id: '/app/settings/llm/'
      path: '/settings/llm'
      fullPath: '/app/settings/llm'
      preLoaderRoute: typeof AppSettingsLlmIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/settings/appearance/': {
      id: '/app/settings/appearance/'
      path: '/settings/appearance'
      fullPath: '/app/settings/appearance'
      preLoaderRoute: typeof AppSettingsAppearanceIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/new/': {
      id: '/app/projects/new/'
      path: '/projects/new'
      fullPath: '/app/projects/new'
      preLoaderRoute: typeof AppProjectsNewIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/$projectId/': {
      id: '/app/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/app/projects/$projectId'
      preLoaderRoute: typeof AppProjectsProjectIdIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/personas/new/': {
      id: '/app/personas/new/'
      path: '/personas/new'
      fullPath: '/app/personas/new'
      preLoaderRoute: typeof AppPersonasNewIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/personas/$templateId/': {
      id: '/app/personas/$templateId/'
      path: '/personas/$templateId'
      fullPath: '/app/personas/$templateId'
      preLoaderRoute: typeof AppPersonasTemplateIdIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/agents/new/': {
      id: '/app/agents/new/'
      path: '/agents/new'
      fullPath: '/app/agents/new'
      preLoaderRoute: typeof AppAgentsNewIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/agents/$agentId/': {
      id: '/app/agents/$agentId/'
      path: '/agents/$agentId'
      fullPath: '/app/agents/$agentId'
      preLoaderRoute: typeof AppAgentsAgentIdIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/user/dm/$conversationId/': {
      id: '/app/user/dm/$conversationId/'
      path: '/dm/$conversationId'
      fullPath: '/app/user/dm/$conversationId'
      preLoaderRoute: typeof AppUserDmConversationIdIndexRouteImport
      parentRoute: typeof AppUserRoute
    }
    '/app/settings/llm/new/': {
      id: '/app/settings/llm/new/'
      path: '/settings/llm/new'
      fullPath: '/app/settings/llm/new'
      preLoaderRoute: typeof AppSettingsLlmNewIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/$projectId/settings/': {
      id: '/app/projects/$projectId/settings/'
      path: '/projects/$projectId/settings'
      fullPath: '/app/projects/$projectId/settings'
      preLoaderRoute: typeof AppProjectsProjectIdSettingsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/$projectId/members/': {
      id: '/app/projects/$projectId/members/'
      path: '/projects/$projectId/members'
      fullPath: '/app/projects/$projectId/members'
      preLoaderRoute: typeof AppProjectsProjectIdMembersIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/$projectId/docs/': {
      id: '/app/projects/$projectId/docs/'
      path: '/projects/$projectId/docs'
      fullPath: '/app/projects/$projectId/docs'
      preLoaderRoute: typeof AppProjectsProjectIdDocsIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/projects/$projectId/chat/': {
      id: '/app/projects/$projectId/chat/'
      path: '/projects/$projectId/chat'
      fullPath: '/app/projects/$projectId/chat'
      preLoaderRoute: typeof AppProjectsProjectIdChatIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/personas/$templateId/edit/': {
      id: '/app/personas/$templateId/edit/'
      path: '/personas/$templateId/edit'
      fullPath: '/app/personas/$templateId/edit'
      preLoaderRoute: typeof AppPersonasTemplateIdEditIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/agents/$agentId/edit/': {
      id: '/app/agents/$agentId/edit/'
      path: '/agents/$agentId/edit'
      fullPath: '/app/agents/$agentId/edit'
      preLoaderRoute: typeof AppAgentsAgentIdEditIndexRouteImport
      parentRoute: typeof AppRoute
    }
    '/app/settings/llm/$configId/edit/': {
      id: '/app/settings/llm/$configId/edit/'
      path: '/settings/llm/$configId/edit'
      fullPath: '/app/settings/llm/$configId/edit'
      preLoaderRoute: typeof AppSettingsLlmConfigIdEditIndexRouteImport
      parentRoute: typeof AppRoute
    }
  }
}

interface AppUserRouteChildren {
  AppUserLayoutRoute: typeof AppUserLayoutRoute
  AppUserIndexRoute: typeof AppUserIndexRoute
  AppUserDmConversationIdIndexRoute: typeof AppUserDmConversationIdIndexRoute
}

const AppUserRouteChildren: AppUserRouteChildren = {
  AppUserLayoutRoute: AppUserLayoutRoute,
  AppUserIndexRoute: AppUserIndexRoute,
  AppUserDmConversationIdIndexRoute: AppUserDmConversationIdIndexRoute,
}

const AppUserRouteWithChildren =
  AppUserRoute._addFileChildren(AppUserRouteChildren)

interface AppRouteChildren {
  AppLayoutRoute: typeof AppLayoutRoute
  AppUserRoute: typeof AppUserRouteWithChildren
  AppAgentsIndexRoute: typeof AppAgentsIndexRoute
  AppChatIndexRoute: typeof AppChatIndexRoute
  AppDashboardIndexRoute: typeof AppDashboardIndexRoute
  AppPersonasIndexRoute: typeof AppPersonasIndexRoute
  AppProjectsIndexRoute: typeof AppProjectsIndexRoute
  AppSettingsIndexRoute: typeof AppSettingsIndexRoute
  AppAgentsAgentIdIndexRoute: typeof AppAgentsAgentIdIndexRoute
  AppAgentsNewIndexRoute: typeof AppAgentsNewIndexRoute
  AppPersonasTemplateIdIndexRoute: typeof AppPersonasTemplateIdIndexRoute
  AppPersonasNewIndexRoute: typeof AppPersonasNewIndexRoute
  AppProjectsProjectIdIndexRoute: typeof AppProjectsProjectIdIndexRoute
  AppProjectsNewIndexRoute: typeof AppProjectsNewIndexRoute
  AppSettingsAppearanceIndexRoute: typeof AppSettingsAppearanceIndexRoute
  AppSettingsLlmIndexRoute: typeof AppSettingsLlmIndexRoute
  AppSettingsProfileIndexRoute: typeof AppSettingsProfileIndexRoute
  AppAgentsAgentIdEditIndexRoute: typeof AppAgentsAgentIdEditIndexRoute
  AppPersonasTemplateIdEditIndexRoute: typeof AppPersonasTemplateIdEditIndexRoute
  AppProjectsProjectIdChatIndexRoute: typeof AppProjectsProjectIdChatIndexRoute
  AppProjectsProjectIdDocsIndexRoute: typeof AppProjectsProjectIdDocsIndexRoute
  AppProjectsProjectIdMembersIndexRoute: typeof AppProjectsProjectIdMembersIndexRoute
  AppProjectsProjectIdSettingsIndexRoute: typeof AppProjectsProjectIdSettingsIndexRoute
  AppSettingsLlmNewIndexRoute: typeof AppSettingsLlmNewIndexRoute
  AppSettingsLlmConfigIdEditIndexRoute: typeof AppSettingsLlmConfigIdEditIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppLayoutRoute: AppLayoutRoute,
  AppUserRoute: AppUserRouteWithChildren,
  AppAgentsIndexRoute: AppAgentsIndexRoute,
  AppChatIndexRoute: AppChatIndexRoute,
  AppDashboardIndexRoute: AppDashboardIndexRoute,
  AppPersonasIndexRoute: AppPersonasIndexRoute,
  AppProjectsIndexRoute: AppProjectsIndexRoute,
  AppSettingsIndexRoute: AppSettingsIndexRoute,
  AppAgentsAgentIdIndexRoute: AppAgentsAgentIdIndexRoute,
  AppAgentsNewIndexRoute: AppAgentsNewIndexRoute,
  AppPersonasTemplateIdIndexRoute: AppPersonasTemplateIdIndexRoute,
  AppPersonasNewIndexRoute: AppPersonasNewIndexRoute,
  AppProjectsProjectIdIndexRoute: AppProjectsProjectIdIndexRoute,
  AppProjectsNewIndexRoute: AppProjectsNewIndexRoute,
  AppSettingsAppearanceIndexRoute: AppSettingsAppearanceIndexRoute,
  AppSettingsLlmIndexRoute: AppSettingsLlmIndexRoute,
  AppSettingsProfileIndexRoute: AppSettingsProfileIndexRoute,
  AppAgentsAgentIdEditIndexRoute: AppAgentsAgentIdEditIndexRoute,
  AppPersonasTemplateIdEditIndexRoute: AppPersonasTemplateIdEditIndexRoute,
  AppProjectsProjectIdChatIndexRoute: AppProjectsProjectIdChatIndexRoute,
  AppProjectsProjectIdDocsIndexRoute: AppProjectsProjectIdDocsIndexRoute,
  AppProjectsProjectIdMembersIndexRoute: AppProjectsProjectIdMembersIndexRoute,
  AppProjectsProjectIdSettingsIndexRoute:
    AppProjectsProjectIdSettingsIndexRoute,
  AppSettingsLlmNewIndexRoute: AppSettingsLlmNewIndexRoute,
  AppSettingsLlmConfigIdEditIndexRoute: AppSettingsLlmConfigIdEditIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AppRoute: AppRouteWithChildren,
  publicOnboardingIndexRoute: publicOnboardingIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
