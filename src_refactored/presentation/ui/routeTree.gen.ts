/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './app/__root'
import { Route as IndexRouteImport } from './app/index'
import { Route as publicOnboardingIndexRouteImport } from './app/(public)/onboarding/index'
import { Route as appSettingsIndexRouteImport } from './app/(app)/settings/index'
import { Route as appProjectsIndexRouteImport } from './app/(app)/projects/index'
import { Route as appPersonasIndexRouteImport } from './app/(app)/personas/index'
import { Route as appDashboardIndexRouteImport } from './app/(app)/dashboard/index'
import { Route as appChatIndexRouteImport } from './app/(app)/chat/index'
import { Route as appAgentsIndexRouteImport } from './app/(app)/agents/index'
import { Route as appSettingsLlmIndexRouteImport } from './app/(app)/settings/llm/index'
import { Route as appProjectsNewIndexRouteImport } from './app/(app)/projects/new/index'
import { Route as appProjectsProjectIdIndexRouteImport } from './app/(app)/projects/$projectId/index'
import { Route as appPersonasNewIndexRouteImport } from './app/(app)/personas/new/index'
import { Route as appAgentsNewIndexRouteImport } from './app/(app)/agents/new/index'
import { Route as appSettingsLlmNewIndexRouteImport } from './app/(app)/settings/llm/new/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const publicOnboardingIndexRoute = publicOnboardingIndexRouteImport.update({
  id: '/(public)/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsIndexRoute = appSettingsIndexRouteImport.update({
  id: '/(app)/settings/',
  path: '/settings/',
  getParentRoute: () => rootRouteImport,
} as any)
const appProjectsIndexRoute = appProjectsIndexRouteImport.update({
  id: '/(app)/projects/',
  path: '/projects/',
  getParentRoute: () => rootRouteImport,
} as any)
const appPersonasIndexRoute = appPersonasIndexRouteImport.update({
  id: '/(app)/personas/',
  path: '/personas/',
  getParentRoute: () => rootRouteImport,
} as any)
const appDashboardIndexRoute = appDashboardIndexRouteImport.update({
  id: '/(app)/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)
const appChatIndexRoute = appChatIndexRouteImport.update({
  id: '/(app)/chat/',
  path: '/chat/',
  getParentRoute: () => rootRouteImport,
} as any)
const appAgentsIndexRoute = appAgentsIndexRouteImport.update({
  id: '/(app)/agents/',
  path: '/agents/',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsLlmIndexRoute = appSettingsLlmIndexRouteImport.update({
  id: '/(app)/settings/llm/',
  path: '/settings/llm/',
  getParentRoute: () => rootRouteImport,
} as any)
const appProjectsNewIndexRoute = appProjectsNewIndexRouteImport.update({
  id: '/(app)/projects/new/',
  path: '/projects/new/',
  getParentRoute: () => rootRouteImport,
} as any)
const appProjectsProjectIdIndexRoute =
  appProjectsProjectIdIndexRouteImport.update({
    id: '/(app)/projects/$projectId/',
    path: '/projects/$projectId/',
    getParentRoute: () => rootRouteImport,
  } as any)
const appPersonasNewIndexRoute = appPersonasNewIndexRouteImport.update({
  id: '/(app)/personas/new/',
  path: '/personas/new/',
  getParentRoute: () => rootRouteImport,
} as any)
const appAgentsNewIndexRoute = appAgentsNewIndexRouteImport.update({
  id: '/(app)/agents/new/',
  path: '/agents/new/',
  getParentRoute: () => rootRouteImport,
} as any)
const appSettingsLlmNewIndexRoute = appSettingsLlmNewIndexRouteImport.update({
  id: '/(app)/settings/llm/new/',
  path: '/settings/llm/new/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/agents': typeof appAgentsIndexRoute
  '/chat': typeof appChatIndexRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/personas': typeof appPersonasIndexRoute
  '/projects': typeof appProjectsIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/onboarding': typeof publicOnboardingIndexRoute
  '/agents/new': typeof appAgentsNewIndexRoute
  '/personas/new': typeof appPersonasNewIndexRoute
  '/projects/$projectId': typeof appProjectsProjectIdIndexRoute
  '/projects/new': typeof appProjectsNewIndexRoute
  '/settings/llm': typeof appSettingsLlmIndexRoute
  '/settings/llm/new': typeof appSettingsLlmNewIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/agents': typeof appAgentsIndexRoute
  '/chat': typeof appChatIndexRoute
  '/dashboard': typeof appDashboardIndexRoute
  '/personas': typeof appPersonasIndexRoute
  '/projects': typeof appProjectsIndexRoute
  '/settings': typeof appSettingsIndexRoute
  '/onboarding': typeof publicOnboardingIndexRoute
  '/agents/new': typeof appAgentsNewIndexRoute
  '/personas/new': typeof appPersonasNewIndexRoute
  '/projects/$projectId': typeof appProjectsProjectIdIndexRoute
  '/projects/new': typeof appProjectsNewIndexRoute
  '/settings/llm': typeof appSettingsLlmIndexRoute
  '/settings/llm/new': typeof appSettingsLlmNewIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)/agents/': typeof appAgentsIndexRoute
  '/(app)/chat/': typeof appChatIndexRoute
  '/(app)/dashboard/': typeof appDashboardIndexRoute
  '/(app)/personas/': typeof appPersonasIndexRoute
  '/(app)/projects/': typeof appProjectsIndexRoute
  '/(app)/settings/': typeof appSettingsIndexRoute
  '/(public)/onboarding/': typeof publicOnboardingIndexRoute
  '/(app)/agents/new/': typeof appAgentsNewIndexRoute
  '/(app)/personas/new/': typeof appPersonasNewIndexRoute
  '/(app)/projects/$projectId/': typeof appProjectsProjectIdIndexRoute
  '/(app)/projects/new/': typeof appProjectsNewIndexRoute
  '/(app)/settings/llm/': typeof appSettingsLlmIndexRoute
  '/(app)/settings/llm/new/': typeof appSettingsLlmNewIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/agents'
    | '/chat'
    | '/dashboard'
    | '/personas'
    | '/projects'
    | '/settings'
    | '/onboarding'
    | '/agents/new'
    | '/personas/new'
    | '/projects/$projectId'
    | '/projects/new'
    | '/settings/llm'
    | '/settings/llm/new'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/agents'
    | '/chat'
    | '/dashboard'
    | '/personas'
    | '/projects'
    | '/settings'
    | '/onboarding'
    | '/agents/new'
    | '/personas/new'
    | '/projects/$projectId'
    | '/projects/new'
    | '/settings/llm'
    | '/settings/llm/new'
  id:
    | '__root__'
    | '/'
    | '/(app)/agents/'
    | '/(app)/chat/'
    | '/(app)/dashboard/'
    | '/(app)/personas/'
    | '/(app)/projects/'
    | '/(app)/settings/'
    | '/(public)/onboarding/'
    | '/(app)/agents/new/'
    | '/(app)/personas/new/'
    | '/(app)/projects/$projectId/'
    | '/(app)/projects/new/'
    | '/(app)/settings/llm/'
    | '/(app)/settings/llm/new/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appAgentsIndexRoute: typeof appAgentsIndexRoute
  appChatIndexRoute: typeof appChatIndexRoute
  appDashboardIndexRoute: typeof appDashboardIndexRoute
  appPersonasIndexRoute: typeof appPersonasIndexRoute
  appProjectsIndexRoute: typeof appProjectsIndexRoute
  appSettingsIndexRoute: typeof appSettingsIndexRoute
  publicOnboardingIndexRoute: typeof publicOnboardingIndexRoute
  appAgentsNewIndexRoute: typeof appAgentsNewIndexRoute
  appPersonasNewIndexRoute: typeof appPersonasNewIndexRoute
  appProjectsProjectIdIndexRoute: typeof appProjectsProjectIdIndexRoute
  appProjectsNewIndexRoute: typeof appProjectsNewIndexRoute
  appSettingsLlmIndexRoute: typeof appSettingsLlmIndexRoute
  appSettingsLlmNewIndexRoute: typeof appSettingsLlmNewIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(public)/onboarding/': {
      id: '/(public)/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof publicOnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings/': {
      id: '/(app)/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof appSettingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/projects/': {
      id: '/(app)/projects/'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof appProjectsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/personas/': {
      id: '/(app)/personas/'
      path: '/personas'
      fullPath: '/personas'
      preLoaderRoute: typeof appPersonasIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/dashboard/': {
      id: '/(app)/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/chat/': {
      id: '/(app)/chat/'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof appChatIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/agents/': {
      id: '/(app)/agents/'
      path: '/agents'
      fullPath: '/agents'
      preLoaderRoute: typeof appAgentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings/llm/': {
      id: '/(app)/settings/llm/'
      path: '/settings/llm'
      fullPath: '/settings/llm'
      preLoaderRoute: typeof appSettingsLlmIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/projects/new/': {
      id: '/(app)/projects/new/'
      path: '/projects/new'
      fullPath: '/projects/new'
      preLoaderRoute: typeof appProjectsNewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/projects/$projectId/': {
      id: '/(app)/projects/$projectId/'
      path: '/projects/$projectId'
      fullPath: '/projects/$projectId'
      preLoaderRoute: typeof appProjectsProjectIdIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/personas/new/': {
      id: '/(app)/personas/new/'
      path: '/personas/new'
      fullPath: '/personas/new'
      preLoaderRoute: typeof appPersonasNewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/agents/new/': {
      id: '/(app)/agents/new/'
      path: '/agents/new'
      fullPath: '/agents/new'
      preLoaderRoute: typeof appAgentsNewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/settings/llm/new/': {
      id: '/(app)/settings/llm/new/'
      path: '/settings/llm/new'
      fullPath: '/settings/llm/new'
      preLoaderRoute: typeof appSettingsLlmNewIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appAgentsIndexRoute: appAgentsIndexRoute,
  appChatIndexRoute: appChatIndexRoute,
  appDashboardIndexRoute: appDashboardIndexRoute,
  appPersonasIndexRoute: appPersonasIndexRoute,
  appProjectsIndexRoute: appProjectsIndexRoute,
  appSettingsIndexRoute: appSettingsIndexRoute,
  publicOnboardingIndexRoute: publicOnboardingIndexRoute,
  appAgentsNewIndexRoute: appAgentsNewIndexRoute,
  appPersonasNewIndexRoute: appPersonasNewIndexRoute,
  appProjectsProjectIdIndexRoute: appProjectsProjectIdIndexRoute,
  appProjectsNewIndexRoute: appProjectsNewIndexRoute,
  appSettingsLlmIndexRoute: appSettingsLlmIndexRoute,
  appSettingsLlmNewIndexRoute: appSettingsLlmNewIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
