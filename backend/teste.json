[
  {
    "project": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend",
    "analysis": {
      "modules": [
        "@babel/parser",
        "@dagrejs/graphlib",
        "acorn",
        "bullmq",
        "chromadb",
        "chromadb-default-embed",
        "dotenv",
        "jsonwebtoken",
        "octokit",
        "openai",
        "recast",
        "redis",
        "simple-git",
        "source-map"
      ],
      "fileAnalysis": [
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts",
          "imports": [
            {
              "moduleSpecifier": "dotenv",
              "elements": [
                "dotenv"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/installation.ts",
              "elements": [
                "installationQueue",
                "installationWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/index.ts",
              "elements": [
                "connectRedis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/branchChange.ts",
              "elements": [
                "defaultBranchChangeWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "node:path",
              "namespace": "path",
              "elements": [
                "path"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "node:fs",
              "namespace": "fs",
              "elements": [
                "fs"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseRepository.ts",
              "elements": [
                "analyseRepositoryWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseFile.ts",
              "elements": [
                "analyseFileWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/chatCompletion.ts",
              "elements": [
                "chatCompletionWorker"
              ],
              "isDefault": false
            }
          ],
          "exports": [],
          "blocks": [
            {
              "hash": "4cefdb5617700ca121a6b56c57613155e5d5199863ed57ffb9ccc192e7fd4315",
              "name": "ResponseData",
              "kind": "TypeAliasDeclaration",
              "content": "type ResponseData = {\r\n  data: {\r\n    installations: {\r\n      [id: string]: {\r\n        id: number;\r\n        repository_selection: string;\r\n        created_at: Date;\r\n        updated_at: Date;\r\n      };\r\n    };\r\n    repositories: {\r\n      [id: string]: {\r\n        id: number;\r\n        name: string;\r\n        owner: string;\r\n        is_batch_api: boolean;\r\n      };\r\n    };\r\n  };\r\n};",
              "start": 13,
              "end": 32,
              "dependencies": []
            },
            {
              "hash": "d8a5cabe47f9d89f9d6b8961d9925d541e26581aba0b1be579fc4c77a22de7f7",
              "name": "main",
              "kind": "FunctionDeclaration",
              "content": "async function main() {\r\n  const workingDirectory = path.resolve(process.cwd(), \"./data/repos\");\r\n\r\n  try {\r\n    if (!fs.existsSync(workingDirectory)) {\r\n      fs.mkdirSync(workingDirectory, { recursive: true });\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  const redis = await connectRedis();\r\n  const data = (await redis.getItemsByKeyPattern(\r\n    \"user:*\"\r\n  )) as unknown as ResponseData[];\r\n\r\n  const repositories = data\r\n    .map((item: ResponseData) =>\r\n      Object.entries(item.data.repositories).map(([, repo]) => ({ ...repo }))\r\n    )\r\n    .reduce((acc, cur) => [...acc, ...cur], []);\r\n\r\n  installationWorker.run();\r\n  defaultBranchChangeWorker.run();\r\n  analyseRepositoryWorker.run();\r\n  analyseFileWorker.run();\r\n  chatCompletionWorker.run();\r\n  // generateGraphWorker.run();\r\n  // await installationQueue.removeJobScheduler(\"tst\");\r\n\r\n  setTimeout(async () => {\r\n    //remove pendentes\r\n    await installationQueue.drain();\r\n\r\n    //insere nova job\r\n    console.log(\"installation queued\");\r\n    await installationQueue.add(\r\n      \"new-installation\",\r\n      {\r\n        repositories,\r\n        type: \"installation\",\r\n      },\r\n      { removeOnComplete: true, removeOnFail: true }\r\n    );\r\n  }, 500);\r\n}",
              "start": 34,
              "end": 79,
              "dependencies": [
                {
                  "hash": "682b4b314477cf6c514c02acca13b934e46f469430f15ddd62b5fd52eedbc290",
                  "name": "workingDirectory",
                  "kind": "VariableDeclaration",
                  "start": 35,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts"
                },
                {
                  "hash": "ae72b092a1e9a7e8b74935f96a66dd5ebf36abdb948934100a4345f14ecab3ac",
                  "name": "path",
                  "kind": "VariableDeclaration",
                  "start": 186,
                  "end": 186,
                  "path": "node:path"
                },
                {
                  "hash": "73a6e6c5ffcf2379ef689010b6434d7cddec442ea9ed824cb400653046840bcf",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 41,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts"
                },
                {
                  "hash": "779b28544dd25b9ca46cb4acd541debc0d54578f99e195ff560803b90ad63357",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 45,
                  "end": 45,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts"
                },
                {
                  "hash": "377129e33d6a603cd4359a4bc249f4380f874c178aff4a73dfc1671162950da7",
                  "name": "connectRedis",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 75,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/index.ts"
                },
                {
                  "hash": "f4de3e4a8dcf6d02732f80ea144b2871b9692c405591aaba26d2c1a21378cf9d",
                  "name": "data",
                  "kind": "VariableDeclaration",
                  "start": 46,
                  "end": 48,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts"
                },
                {
                  "hash": "e1daff66aaeaad15d4008560294c91f622bb87a950bc9b0720032f0de333f84c",
                  "name": "getItemsByKeyPattern",
                  "kind": "FunctionDeclaration",
                  "start": 49,
                  "end": 69,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "4cefdb5617700ca121a6b56c57613155e5d5199863ed57ffb9ccc192e7fd4315",
                  "name": "ResponseData",
                  "kind": "TypeAliasDeclaration",
                  "start": 13,
                  "end": 32,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts"
                },
                {
                  "hash": "8771937bf8659aeced58f7dec81e1d7450625b0408af6befc262481acce0d156",
                  "name": "repositories",
                  "kind": "VariableDeclaration",
                  "start": 50,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/index.ts"
                },
                {
                  "hash": "82fd6f3fcb66662cdc15f3979960e50421b7eea1cb894358f929823c52d2eb44",
                  "name": "installationWorker",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 87,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/installation.ts"
                },
                {
                  "hash": "54e2b40963f280fc2ba4aa02801c3c67b5035b1272060bff5f3dbdc72c932d7d",
                  "name": "defaultBranchChangeWorker",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 38,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/branchChange.ts"
                },
                {
                  "hash": "d787f1fbffba33286469bd3a9c9ffadb7964e270ae523638c7bbc5521403c467",
                  "name": "analyseRepositoryWorker",
                  "kind": "VariableDeclaration",
                  "start": 23,
                  "end": 106,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseRepository.ts"
                },
                {
                  "hash": "2effbcd00670dec2203ad7538440d514785cff620859331019b1dc4ba6539b3d",
                  "name": "analyseFileWorker",
                  "kind": "VariableDeclaration",
                  "start": 46,
                  "end": 216,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseFile.ts"
                },
                {
                  "hash": "8a44753db7f87cba2b1b199dd8e94f798a8119c4bcd99f921d23c7b2634742ea",
                  "name": "chatCompletionWorker",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 129,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/chatCompletion.ts"
                },
                {
                  "hash": "a9b4ce546bdb497dcba209af0fdb40cab7146598cec0ddcd2af6ccf3f33528cc",
                  "name": "installationQueue",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 7,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/installation.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts",
          "imports": [
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "JobsOptions"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "buildAnalyseTree",
              "type": "named",
              "from": "",
              "namespace": "buildAnalyseTree"
            },
            {
              "name": "FlowJob",
              "type": "named",
              "from": "",
              "namespace": "FlowJob"
            }
          ],
          "blocks": [
            {
              "hash": "5ba23803af92e9439da6c791e8cba790f5339f3307710a705673faf768ac63f9",
              "name": "FlowJob",
              "kind": "InterfaceDeclaration",
              "content": "export interface FlowJob {\r\n  name: string;\r\n  queueName: string;\r\n  data?: any;\r\n  prefix?: string;\r\n  opts?: Omit<JobsOptions, \"parent\" | \"repeat\">;\r\n  // children?: FlowJob[];\r\n}",
              "start": 3,
              "end": 10,
              "dependencies": [
                {
                  "hash": "bb9c93c374e73ec751cce00998fc98505f8c0af42ad74e64c4071e6cdce4df97",
                  "name": "JobsOptions",
                  "kind": "TypeAliasDeclaration",
                  "start": 2,
                  "end": 24,
                  "path": "bullmq"
                }
              ]
            },
            {
              "hash": "0a35ed9425875a73d638973191e00c2f449058c20cf1bede15f1e53702f1d5cb",
              "name": "FlowJobMap",
              "kind": "TypeAliasDeclaration",
              "content": "type FlowJobMap = Map<string, FlowJob & { children?: FlowJobMap }>;",
              "start": 12,
              "end": 12,
              "dependencies": [
                {
                  "hash": "5ba23803af92e9439da6c791e8cba790f5339f3307710a705673faf768ac63f9",
                  "name": "FlowJob",
                  "kind": "InterfaceDeclaration",
                  "start": 3,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                }
              ]
            },
            {
              "hash": "1a62374ffe2a2e9e649e49a3a8c1b09c022b4fdafbfcda4537cfe18ef6b210c0",
              "name": "buildAnalyseTree",
              "kind": "FunctionDeclaration",
              "content": "export function buildAnalyseTree(\r\n  files: {\r\n    status: string;\r\n    path: string;\r\n  }[]\r\n): FlowJob & { children?: FlowJob[] } {\r\n  const root: FlowJobMap = new Map();\r\n\r\n  files.forEach(({ status, path }) => {\r\n    let currentLevel = root;\r\n\r\n    const parts = path.split(\"/\");\r\n    let currentPath: string;\r\n    parts.forEach((part) => {\r\n      if (\r\n        !currentLevel.has(part) &&\r\n        !(part.endsWith(\".ts\") || part.endsWith(\".tsx\") || part.endsWith(\".md\"))\r\n      ) {\r\n        currentPath += currentPath ? `\\\\${part}` : `${part}`; //sem \\\\ na primeira atribuição\r\n        currentLevel.set(part, {\r\n          name: `analise-${part}`,\r\n          queueName: `path-analysis`,\r\n          data: {\r\n            path: currentPath,\r\n            status,\r\n          },\r\n          opts: {\r\n            removeOnComplete: true,\r\n            removeOnFail: true,\r\n            ignoreDependencyOnFailure: true,\r\n          },\r\n          children: new Map(),\r\n        });\r\n      }\r\n\r\n      currentLevel = currentLevel.get(part)!.children!;\r\n    });\r\n  });\r\n\r\n  function mapToObject(\r\n    map: Map<any, any>\r\n  ): (FlowJob & { children?: FlowJob[] })[] {\r\n    return Array.from(map, ([name, children]) => ({\r\n      name,\r\n      queueName: children ? `node` : `leaf`,\r\n      data: {},\r\n      opts: {},\r\n      children,\r\n    }));\r\n  }\r\n\r\n  return {\r\n    name: \"node\",\r\n    queueName: \"node\",\r\n    data: {},\r\n    opts: {},\r\n    children: mapToObject(root),\r\n  };\r\n}",
              "start": 14,
              "end": 72,
              "dependencies": [
                {
                  "hash": "5ba23803af92e9439da6c791e8cba790f5339f3307710a705673faf768ac63f9",
                  "name": "FlowJob",
                  "kind": "InterfaceDeclaration",
                  "start": 3,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                },
                {
                  "hash": "83a3a4808d2efd8213d5d08b489b2fc20c6ac3f1e21fa9334e51b4dc38836d07",
                  "name": "root",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 20,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                },
                {
                  "hash": "0a35ed9425875a73d638973191e00c2f449058c20cf1bede15f1e53702f1d5cb",
                  "name": "FlowJobMap",
                  "kind": "TypeAliasDeclaration",
                  "start": 12,
                  "end": 12,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                },
                {
                  "hash": "af48f16c19bfab090812560551cda9ecca5ec2599e070876d3854703fb4e3165",
                  "name": "currentLevel",
                  "kind": "VariableDeclaration",
                  "start": 23,
                  "end": 23,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                },
                {
                  "hash": "801e812cc9aa7a789451056fa5bad3aea87fd570c1c7f4afdb91ee3bcc118829",
                  "name": "parts",
                  "kind": "VariableDeclaration",
                  "start": 25,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                },
                {
                  "hash": "cba9891d0ea6956c44dfad5082e3ec9d8bb9a22e79108a197cde998b9d4765d3",
                  "name": "currentPath",
                  "kind": "VariableDeclaration",
                  "start": 26,
                  "end": 26,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                },
                {
                  "hash": "1121e7160b9546bfa7254dbb24f2535d2e3a762f89bf4ab2e0b6421faf1d8c8f",
                  "name": "mapToObject",
                  "kind": "FunctionDeclaration",
                  "start": 53,
                  "end": 63,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/buildAnalyseTree.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts",
          "imports": [],
          "exports": [
            {
              "name": "tokenize",
              "type": "named",
              "from": "",
              "namespace": "tokenize"
            },
            {
              "name": "groupTokens",
              "type": "named",
              "from": "",
              "namespace": "groupTokens"
            },
            {
              "name": "selectTokens",
              "type": "named",
              "from": "",
              "namespace": "selectTokens"
            },
            {
              "name": "capitalize",
              "type": "named",
              "from": "",
              "namespace": "capitalize"
            },
            {
              "name": "generateModuleName",
              "type": "named",
              "from": "",
              "namespace": "generateModuleName"
            }
          ],
          "blocks": [
            {
              "hash": "a9372feda803f4ddd00f21df1d6b6946eb846d34b4203069cc861653859b6559",
              "name": "stopWords",
              "kind": "VariableStatement",
              "content": "const stopWords = [\r\n  \"get\",\r\n  \"fetch\",\r\n  \"create\",\r\n  \"set\",\r\n  \"verify\",\r\n  \"post\",\r\n  \"delete\",\r\n  \"put\",\r\n  \"jwt\",\r\n  \"map\",\r\n  \"by\",\r\n  \"generate\",\r\n  \"key\",\r\n  \"build\",\r\n  \"a\",\r\n  \"as\",\r\n  \"for\",\r\n];",
              "start": 2,
              "end": 20,
              "dependencies": []
            },
            {
              "hash": "e1e84bac01d1e027cac2ec35b83e44d8d426f3af4c15bf79c108306f72014bfe",
              "name": "tokenize",
              "kind": "FunctionDeclaration",
              "content": "export function tokenize(identifier: string) {\r\n  return identifier\r\n    .split(/(?=[A-Z][a-z])|(?<=[a-z])(?=[A-Z])|[_\\-\\s]/)\r\n    .map((word) => word.toLowerCase())\r\n    .filter((word) => !stopWords.includes(word)); // Filtra palavras comuns\r\n}",
              "start": 23,
              "end": 28,
              "dependencies": []
            },
            {
              "hash": "6adf408b506e3b5718c7efbb55d11cff0a8b5c87a1235208f51aa91b7d885a53",
              "name": "groupTokens",
              "kind": "FunctionDeclaration",
              "content": "export function groupTokens(identifiers: string[]): {\r\n  [token: string]: number;\r\n} {\r\n  const tokenFrequency = {};\r\n\r\n  identifiers.forEach((id) => {\r\n    const tokens = tokenize(id);\r\n    tokens.forEach((token) => {\r\n      if (!tokenFrequency[token]) {\r\n        tokenFrequency[token] = 0;\r\n      }\r\n      tokenFrequency[token]++;\r\n    });\r\n  });\r\n\r\n  return tokenFrequency;\r\n}",
              "start": 31,
              "end": 47,
              "dependencies": [
                {
                  "hash": "fba037f2042c5fb334cc82535462738ae4695ae598a5f80d91e5ad00323235a2",
                  "name": "tokenFrequency",
                  "kind": "VariableDeclaration",
                  "start": 34,
                  "end": 34,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                },
                {
                  "hash": "8ca2dccc1ef970e4cf8eaa4c936bea37c1ba9621cb9c5ea1c35ce1363fce9398",
                  "name": "tokens",
                  "kind": "VariableDeclaration",
                  "start": 37,
                  "end": 37,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                },
                {
                  "hash": "e1e84bac01d1e027cac2ec35b83e44d8d426f3af4c15bf79c108306f72014bfe",
                  "name": "tokenize",
                  "kind": "FunctionDeclaration",
                  "start": 23,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                }
              ]
            },
            {
              "hash": "2876c7be1b067eb94a037dc80430583e3d951dd8debf19cff155558387b23237",
              "name": "selectTokens",
              "kind": "FunctionDeclaration",
              "content": "export function selectTokens(\r\n  tokenFrequency: { [token: string]: number },\r\n  minFrequency = 1\r\n) {\r\n  return Object.entries(tokenFrequency)\r\n    .filter(([, freq]) => freq >= minFrequency)\r\n    .sort((a, b) => b[1] - a[1]) // Ordena pelos tokens mais frequentes\r\n    .map(([token]) => capitalize(token))\r\n    .slice(0, 3);\r\n}",
              "start": 50,
              "end": 59,
              "dependencies": [
                {
                  "hash": "67030e21720df13aa1cbb645e8030acda92a7c4f55d3dfb8b26258d027664d62",
                  "name": "capitalize",
                  "kind": "FunctionDeclaration",
                  "start": 62,
                  "end": 64,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                }
              ]
            },
            {
              "hash": "67030e21720df13aa1cbb645e8030acda92a7c4f55d3dfb8b26258d027664d62",
              "name": "capitalize",
              "kind": "FunctionDeclaration",
              "content": "export function capitalize(word) {\r\n  return word.charAt(0).toUpperCase() + word.slice(1);\r\n}",
              "start": 62,
              "end": 64,
              "dependencies": []
            },
            {
              "hash": "5905edd8c9ed2d9598fda876374ab956f87d4e7853b23fa8d9990d09a270592a",
              "name": "generateModuleName",
              "kind": "FunctionDeclaration",
              "content": "export function generateModuleName(identifiers: string[]) {\r\n  const tokenFrequency = groupTokens(identifiers);\r\n  const selectedTokens = selectTokens(tokenFrequency);\r\n\r\n  return (selectedTokens.join(\"\") || \"Unknown\") + \"Module\";\r\n}",
              "start": 67,
              "end": 72,
              "dependencies": [
                {
                  "hash": "d3bb4930009e9a1a52fac24837fb884a9ff12a22f2971a9ed73fc88aa16b4aa3",
                  "name": "tokenFrequency",
                  "kind": "VariableDeclaration",
                  "start": 68,
                  "end": 68,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                },
                {
                  "hash": "6adf408b506e3b5718c7efbb55d11cff0a8b5c87a1235208f51aa91b7d885a53",
                  "name": "groupTokens",
                  "kind": "FunctionDeclaration",
                  "start": 31,
                  "end": 47,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                },
                {
                  "hash": "e99a2ded3de0bd82b0c5770dcdd2046bce29ab00017c898b746744b76f5e16f6",
                  "name": "selectedTokens",
                  "kind": "VariableDeclaration",
                  "start": 69,
                  "end": 69,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                },
                {
                  "hash": "2876c7be1b067eb94a037dc80430583e3d951dd8debf19cff155558387b23237",
                  "name": "selectTokens",
                  "kind": "FunctionDeclaration",
                  "start": 50,
                  "end": 59,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts",
          "imports": [
            {
              "moduleSpecifier": "source-map",
              "elements": [
                "SourceMapConsumer"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "recast",
              "elements": [
                "print",
                "parse",
                "visit",
                "types"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "generateSourceMap",
              "type": "named",
              "from": "",
              "namespace": "generateSourceMap"
            },
            {
              "name": "generateRepositorySourceMap",
              "type": "named",
              "from": "",
              "namespace": "generateRepositorySourceMap"
            }
          ],
          "blocks": [
            {
              "hash": "271775165241f458cb5dcaae8acf02606bd3561d9cc4f95a06ff8a771006ba8b",
              "name": "generateSourceMap",
              "kind": "FunctionDeclaration",
              "content": "export async function generateSourceMap(code: string, fileName: string) {\r\n  const ast = parse(code, {\r\n    sourceFileName: fileName,\r\n    parser: await import(\"recast/parsers/typescript\"),\r\n  });\r\n  const sourceMap = print(ast, {\r\n    sourceMapName: `${fileName.split(\".\")[0]}.min.js`,\r\n  });\r\n\r\n  const imports = new Map<string, string[]>();\r\n  visit(ast, {\r\n    visitImportDeclaration(path) {\r\n      const pathImported = path.node.source.value?.toString() || \"\";\r\n      // Obtém os nomes importados\r\n      const specifiers =\r\n        path.node.specifiers\r\n          ?.map((specifier) => {\r\n            if (types.namedTypes.ImportSpecifier.check(specifier)) {\r\n              return specifier.imported.name.toString() || \"\"; // Para importações nomeadas\r\n            } else if (\r\n              types.namedTypes.ImportDefaultSpecifier.check(specifier)\r\n            ) {\r\n              return specifier.local?.name.toString() || \"\"; // Para a importação padrão\r\n            }\r\n            return \"\";\r\n          })\r\n          .filter(Boolean) || []; // Filtra valores nulos\r\n\r\n      const old = imports.get(pathImported) || [];\r\n      imports.set(pathImported, [...old, ...specifiers]);\r\n\r\n      return this.traverse(path);\r\n    },\r\n  });\r\n\r\n  return {\r\n    sourceMap: sourceMap.map,\r\n    imports: Object.entries(imports)\r\n      .map(([path, imports]) => ({\r\n        path,\r\n        imports,\r\n      }))\r\n      .reduce((acc, cur) => ({ ...acc, [cur.path]: cur.imports }), {}),\r\n  };\r\n}",
              "start": 4,
              "end": 48,
              "dependencies": [
                {
                  "hash": "af204fc2234b1b62aafb1c90c30d4112754987761f9d91f93395e1badf7cafb4",
                  "name": "ast",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 8,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts"
                },
                {
                  "hash": "9c0b68ac02bc67978f1d25c9fb247b264cda80c406a2c19b3aef022603c4b7fb",
                  "name": "parse",
                  "kind": "FunctionDeclaration",
                  "start": 2,
                  "end": 2,
                  "path": "recast"
                },
                {
                  "hash": "7d28b110064f6db7956a7066dde04212a6c6b800903cf5019fae1464bb050e44",
                  "name": "sourceMap",
                  "kind": "VariableDeclaration",
                  "start": 9,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts"
                },
                {
                  "hash": "85f7833336fe3df217313be50f03d66b2a69ef542f7429cef366ca10d1754313",
                  "name": "print",
                  "kind": "FunctionDeclaration",
                  "start": 36,
                  "end": 36,
                  "path": "recast"
                },
                {
                  "hash": "66c241b390a94d81e08ae93a022a44c5cfcf55bae2cabd4b2adb021112a6a07e",
                  "name": "imports",
                  "kind": "VariableDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts"
                },
                {
                  "hash": "fbbd3fda7ef35312ffd766af292a440edf0e2a2b5e91ec61a5c8466ec9d15e4f",
                  "name": "visit",
                  "kind": "VariableDeclaration",
                  "start": 28,
                  "end": 28,
                  "path": "recast"
                },
                {
                  "hash": "a43acffc10fe828b46cdde1bc38e85e903cf2774871d587b71c361de917779eb",
                  "name": "pathImported",
                  "kind": "VariableDeclaration",
                  "start": 16,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts"
                },
                {
                  "hash": "29ffff8e4ae0ad36281a7ed30ff8c72b905e97cb77a5b49f8ea637c6a75fd567",
                  "name": "specifiers",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 30,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts"
                },
                {
                  "hash": "41cfae5bdee3052b3f742ee3a84b707d7b3c7937ec786eba734eb3f9945e9dd1",
                  "name": "ImportSpecifier",
                  "kind": "InterfaceDeclaration",
                  "start": 406,
                  "end": 409,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/ast-types/lib/gen/namedTypes.d.ts"
                },
                {
                  "hash": "c8059eeb642ae1ad7a6105cba3e7e00f458c7f64c94921da56d8c617fa4d8264",
                  "name": "ImportSpecifier",
                  "kind": "VariableDeclaration",
                  "start": 1521,
                  "end": 1521,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/ast-types/lib/gen/namedTypes.d.ts"
                },
                {
                  "hash": "10b5780dd45bf1cf4683b70938509c5ea6cdfb6c1c0e2daf02f5630f9ae4a210",
                  "name": "ImportDefaultSpecifier",
                  "kind": "InterfaceDeclaration",
                  "start": 410,
                  "end": 412,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/ast-types/lib/gen/namedTypes.d.ts"
                },
                {
                  "hash": "f3bff1e2f8aa76e772311570d0f900da34235058d47d6f4d11161160d6bfafbb",
                  "name": "ImportDefaultSpecifier",
                  "kind": "VariableDeclaration",
                  "start": 1522,
                  "end": 1522,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/ast-types/lib/gen/namedTypes.d.ts"
                },
                {
                  "hash": "6a910868e5bf87cf51ba90f38a047e8b7716a7b0174de28c5c4991424168b490",
                  "name": "old",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 32,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateRepositorySourceMap.ts"
                }
              ]
            },
            {
              "hash": "e10b906f8233430e7706a536d537290d6419b6358ec5236bab30d5c39e77e818",
              "name": "generateRepositorySourceMap",
              "kind": "FunctionDeclaration",
              "content": "export function generateRepositorySourceMap() {}",
              "start": 50,
              "end": 50,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseFile.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts",
              "elements": [
                "BlockInfo"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/index.ts",
              "elements": [
                "createQueue",
                "createWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "chromadb",
              "elements": [
                "DefaultEmbeddingFunction",
                "AddRecordsParams",
                "Embedding",
                "IncludeEnum",
                "Metadata",
                "Embeddings"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "crypto",
              "elements": [
                "randomUUID"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/chroma/createChroma.ts",
              "elements": [
                "createChroma"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "node:path",
              "namespace": "path",
              "elements": [
                "path"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "DelayedError",
                "WaitingChildrenError"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/chatCompletion.ts",
              "elements": [
                "chatCompletionQueue"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "AnalyseFileWorkerData",
              "type": "named",
              "from": "",
              "namespace": "AnalyseFileWorkerData"
            },
            {
              "name": "analyseFileQueue",
              "type": "named",
              "from": "",
              "namespace": "analyseFileQueue"
            },
            {
              "name": "analyseFileWorker",
              "type": "named",
              "from": "",
              "namespace": "analyseFileWorker"
            }
          ],
          "blocks": [
            {
              "hash": "53fca6ac59784dd340462c080ead8b815c668d079c8b10af2b248d83c67d4302",
              "name": "chromaClient",
              "kind": "VariableStatement",
              "content": "const chromaClient = createChroma();",
              "start": 18,
              "end": 18,
              "dependencies": []
            },
            {
              "hash": "68b36cf97efe2b226f50a1660bd4c6abb3b66e70c787bc9fe3afeb10d9f582c7",
              "name": "Doc",
              "kind": "TypeAliasDeclaration",
              "content": "type Doc = {\r\n  id: string;\r\n  document: string | null;\r\n  embedding: Embedding | undefined;\r\n  metadata: Metadata | null;\r\n};",
              "start": 20,
              "end": 25,
              "dependencies": [
                {
                  "hash": "4445507ea666299ccec0f0cd4dacecdac588e096f5ede64fa5dba19bd6f2b1ff",
                  "name": "Embedding",
                  "kind": "TypeAliasDeclaration",
                  "start": 32,
                  "end": 32,
                  "path": "chromadb"
                },
                {
                  "hash": "36bb02de4b170e84bab04d44c99874e8ec2c48195be6be40bea4afaed245d7bd",
                  "name": "Metadata",
                  "kind": "TypeAliasDeclaration",
                  "start": 34,
                  "end": 34,
                  "path": "chromadb"
                }
              ]
            },
            {
              "hash": "0a4ed244b7c0ff88bc59d00f75d60c48be2e407efd44814b975d70cb922a27bd",
              "name": "AnalyseFileWorkerData",
              "kind": "TypeAliasDeclaration",
              "content": "export type AnalyseFileWorkerData = {\r\n  commitHash: string;\r\n  status: string;\r\n  filePath: string;\r\n  fileAnalysis: {\r\n    imports: {\r\n      name: string;\r\n      path: string;\r\n    }[];\r\n    exports: string[];\r\n    blocks: BlockInfo[];\r\n  };\r\n  documents?: Doc[];\r\n  step?: \"validating\" | \"in_progress\" | \"finalizing\" | \"completed\";\r\n};",
              "start": 27,
              "end": 41,
              "dependencies": [
                {
                  "hash": "8e88bbacc0ab38b76fa86442289c8a963109f3342cfff65f5092d90d5bd83982",
                  "name": "BlockInfo",
                  "kind": "TypeAliasDeclaration",
                  "start": 1,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts"
                },
                {
                  "hash": "68b36cf97efe2b226f50a1660bd4c6abb3b66e70c787bc9fe3afeb10d9f582c7",
                  "name": "Doc",
                  "kind": "TypeAliasDeclaration",
                  "start": 20,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseFile.ts"
                }
              ]
            },
            {
              "hash": "4f14b42fa06089e361d6c473e0732aa069da29ce45492c4a7dc17b8bf05b8049",
              "name": "analyseFileQueue",
              "kind": "VariableStatement",
              "content": "export const analyseFileQueue =\r\n  createQueue<AnalyseFileWorkerData>(\"analyse-file\");",
              "start": 43,
              "end": 44,
              "dependencies": []
            },
            {
              "hash": "3cd888f50788e7aae79ddd7f1f19146ce8e16870bc70de932de8c7a6f297dae0",
              "name": "analyseFileWorker",
              "kind": "VariableStatement",
              "content": "export const analyseFileWorker = createWorker<AnalyseFileWorkerData>(\r\n  \"analyse-file\",\r\n  async (job, token) => {\r\n    const {\r\n      commitHash,\r\n      status,\r\n      filePath,\r\n      fileAnalysis,\r\n      documents = [],\r\n      step = \"validating\",\r\n    } = job.data;\r\n    const { blocks } = fileAnalysis;\r\n\r\n    if (status === \"D\") return; // se arquivo foi deleteado ignora-o\r\n\r\n    // await chromaClient.deleteCollection({ name: \"blocks\" });\r\n    const collection = await chromaClient.getOrCreateCollection({\r\n      name: \"blocks\",\r\n      embeddingFunction: new DefaultEmbeddingFunction(),\r\n    });\r\n\r\n    switch (step) {\r\n      case \"validating\": {\r\n        console.log(job.name, \"starting with data\", job.data);\r\n        const data = await Promise.all(\r\n          blocks.map(async (block) => {\r\n            return collection.get({\r\n              include: [\r\n                \"embeddings\",\r\n                \"documents\",\r\n                \"metadatas\",\r\n              ] as IncludeEnum[],\r\n              where: {\r\n                blockHash: block.blockHash,\r\n              },\r\n            });\r\n          })\r\n        );\r\n\r\n        const docs = data\r\n          .filter((block) => block.ids.length >= 1)\r\n          .map((block) => ({\r\n            id: block.ids[0],\r\n            document: block.documents[0],\r\n            embedding: block.embeddings?.[0],\r\n            metadata: block.metadatas[0],\r\n          }));\r\n\r\n        console.log(job.name, \" existing data \", docs.length);\r\n\r\n        const undocumentedBlock = blocks.filter(\r\n          (block) =>\r\n            !docs.some((doc) => doc.metadata?.blockHash === block.blockHash)\r\n        );\r\n\r\n        console.log(job.name, \" newdata data \", undocumentedBlock.length);\r\n\r\n        if (undocumentedBlock.length > 0) {\r\n          await chatCompletionQueue.add(\r\n            path.basename(filePath),\r\n            {\r\n              messages: undocumentedBlock.map((block) => ({\r\n                id: block.blockHash,\r\n                content: block.source,\r\n                type: \"analyse\",\r\n              })),\r\n            },\r\n            {\r\n              parent: {\r\n                id: job.id!,\r\n                queue: job.queueQualifiedName,\r\n              },\r\n            }\r\n          );\r\n        }\r\n\r\n        await job.updateData({\r\n          ...job.data,\r\n          step: \"in_progress\",\r\n          documents: [...documents, ...docs],\r\n        });\r\n\r\n        await job.moveToDelayed(Date.now() + 10, token);\r\n        throw new DelayedError();\r\n      }\r\n      case \"in_progress\": {\r\n        console.log(job.name, \" waiting children\");\r\n        const shouldWait = await job.moveToWaitingChildren(token!);\r\n        if (shouldWait) throw new WaitingChildrenError();\r\n\r\n        const childrenResult = await job.getChildrenValues();\r\n        const promptResults:\r\n          | { id: string; result: string; usage: number }[]\r\n          | undefined = Object.entries(childrenResult).map(\r\n          ([, result]) => result\r\n        )[0];\r\n\r\n        try {\r\n          //add undocumentedBlock\r\n          if (promptResults?.length) {\r\n            console.log(\r\n              job.name,\r\n              \" add new \",\r\n              promptResults.length,\r\n              \" blocks into chroma\"\r\n            );\r\n            const doc = promptResults.reduce(\r\n              (acc, cur) => ({\r\n                ids: [...(acc.ids || []), randomUUID()],\r\n                documents: [...(acc.documents || []), cur.result || \"\"],\r\n                metadatas: [\r\n                  ...(Array.isArray(acc.metadatas) ? acc.metadatas : []),\r\n                  {\r\n                    blockHash: cur.id,\r\n                    commitHash,\r\n                  },\r\n                ],\r\n              }),\r\n              {} as AddRecordsParams\r\n            );\r\n            await collection.add(doc);\r\n          }\r\n\r\n          //replicate documentedDoc\r\n          if (documents.length) {\r\n            console.log(\r\n              job.name,\r\n              \" replicate \",\r\n              documents.filter((doc) => doc.metadata?.commitHash !== commitHash)\r\n                .length,\r\n              \" blocks into chroma\"\r\n            );\r\n            const doc = documents\r\n              .filter((doc) => doc.metadata?.commitHash !== commitHash)\r\n              .reduce(\r\n                (acc, cur) => ({\r\n                  ids: [...(acc.ids || []), randomUUID()],\r\n                  documents: [...(acc.documents || []), cur.document || \"\"],\r\n                  embeddings: [\r\n                    ...(Array.isArray(acc.embeddings) ? acc.embeddings : []),\r\n                    cur.embedding || [],\r\n                  ] as Embeddings,\r\n                  metadata: [\r\n                    ...(Array.isArray(acc.metadatas) ? acc.metadatas : []),\r\n                    {\r\n                      ...cur.metadata,\r\n                      commitHash,\r\n                    },\r\n                  ],\r\n                }),\r\n                {} as AddRecordsParams\r\n              );\r\n            await collection.add(doc);\r\n          }\r\n        } catch (error) {\r\n          console.error({ error });\r\n        }\r\n\r\n        await job.updateData({\r\n          ...job.data,\r\n          step: \"completed\",\r\n        });\r\n        await job.moveToDelayed(Date.now() + 10, token);\r\n        throw new DelayedError();\r\n      }\r\n      default:\r\n        console.log(\"analiseFile completed!\");\r\n        break;\r\n    }\r\n  }\r\n);",
              "start": 46,
              "end": 216,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseRepository.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/index.ts",
              "elements": [
                "createQueue",
                "createWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "node:path",
              "namespace": "path",
              "elements": [
                "path"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/simple-git/index.ts",
              "elements": [
                "createSimpleGit"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "DelayedError",
                "WaitingChildrenError"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts",
              "elements": [
                "createTypescriptAnalyser"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseFile.ts",
              "elements": [
                "analyseFileQueue"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "analyseRepositoryQueue",
              "type": "named",
              "from": "",
              "namespace": "analyseRepositoryQueue"
            },
            {
              "name": "analyseRepositoryWorker",
              "type": "named",
              "from": "",
              "namespace": "analyseRepositoryWorker"
            }
          ],
          "blocks": [
            {
              "hash": "39a65bde0b19f2a44a3a69c0e3c43d2cc6e34378bdf1fafa3381d8ea2bee1dfb",
              "name": "AnalyseRepositoryWorkerData",
              "kind": "TypeAliasDeclaration",
              "content": "type AnalyseRepositoryWorkerData = {\r\n  commitHash: string;\r\n  previousCommitHash?: string;\r\n  owner: string;\r\n  name: string;\r\n  step?: \"initial\" | \"description-collect\" | \"wait-children\" | \"completed\";\r\n  child?: {\r\n    id: string;\r\n    queue: string;\r\n  };\r\n};",
              "start": 8,
              "end": 18,
              "dependencies": []
            },
            {
              "hash": "8e8bb076d4ad6f148329595067d9e0aa650243d2d4bd4a5b1301bad11e8de38b",
              "name": "analyseRepositoryQueue",
              "kind": "VariableStatement",
              "content": "export const analyseRepositoryQueue =\r\n  createQueue<AnalyseRepositoryWorkerData>(\"analyse-repository\");",
              "start": 20,
              "end": 21,
              "dependencies": []
            },
            {
              "hash": "75e69ed38dd20e291039e9f2d7382101c23d8ae43f7e67f42e674d8f9800907a",
              "name": "analyseRepositoryWorker",
              "kind": "VariableStatement",
              "content": "export const analyseRepositoryWorker =\r\n  createWorker<AnalyseRepositoryWorkerData>(\r\n    \"analyse-repository\",\r\n    async (job, token) => {\r\n      const { commitHash, previousCommitHash } = job.data;\r\n      if (!commitHash) return;\r\n\r\n      const workingDirectory = path.resolve(\r\n        process.cwd(),\r\n        \"./data/repos\",\r\n        commitHash\r\n      );\r\n\r\n      const git = await createSimpleGit({});\r\n\r\n      switch (job.data.step || \"initial\") {\r\n        case \"initial\": {\r\n          console.log(job.name, \" starting with data \", job.data);\r\n          const { tsFiles } = await git.getFilesDiff(\r\n            commitHash,\r\n            previousCommitHash || git.firstCommit\r\n          );\r\n\r\n          console.log(job.name, \" analysing \", tsFiles.length, \" files\");\r\n          const blocks = tsFiles.map((data) => {\r\n            const analyse = {\r\n              ...data,\r\n              analyse: createTypescriptAnalyser(\r\n                workingDirectory,\r\n                data.filePath\r\n              ).analyze(),\r\n            };\r\n            return analyse;\r\n          });\r\n          console.log(\r\n            job.name,\r\n            \" extracted \",\r\n            blocks.reduce((acc, file) => acc + file.analyse.blocks.length, 0),\r\n            \" blocks\"\r\n          );\r\n\r\n          //cria jobs filhas para criação das descrições com a IA e aguarda conclusão\r\n          await analyseFileQueue.addBulk(\r\n            blocks.map((block) => {\r\n              return {\r\n                name: `${path.basename(block.filePath)}`,\r\n                data: {\r\n                  commitHash,\r\n                  previousCommitHash: previousCommitHash || git.firstCommit,\r\n                  fileAnalysis: { ...block.analyse },\r\n                  filePath: block.filePath,\r\n                  status: block.status,\r\n                },\r\n                opts: {\r\n                  parent: {\r\n                    id: job.id!,\r\n                    queue: job.queueQualifiedName,\r\n                  },\r\n                },\r\n              };\r\n            })\r\n          );\r\n\r\n          await job.updateData({ ...job.data, step: \"description-collect\" });\r\n          await job.moveToDelayed(Date.now() + 10, token);\r\n          throw new DelayedError();\r\n        }\r\n        case \"description-collect\": {\r\n          console.log(job.name, \"wait children\");\r\n          const shoudWait = await job.moveToWaitingChildren(token!);\r\n          if (shoudWait) throw new WaitingChildrenError();\r\n          await job.updateData({ ...job.data, step: \"completed\" });\r\n\r\n          console.log(\"descrições coletadas\");\r\n          await job.moveToDelayed(Date.now() + 10, token!);\r\n          throw new DelayedError();\r\n        }\r\n        default:\r\n          console.log(job.name, \"analyseRepository completed!\");\r\n          break;\r\n      }\r\n      return;\r\n    }\r\n  );",
              "start": 23,
              "end": 106,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/branchChange.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/simple-git/index.ts",
              "elements": [
                "createSimpleGit"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/index.ts",
              "elements": [
                "createQueue",
                "createWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/index.ts",
              "elements": [
                "connectRedis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseRepository.ts",
              "elements": [
                "analyseRepositoryQueue"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "BranchChangeWorkerData",
              "type": "named",
              "from": "",
              "namespace": "BranchChangeWorkerData"
            },
            {
              "name": "defaultBranchChangeQueue",
              "type": "named",
              "from": "",
              "namespace": "defaultBranchChangeQueue"
            },
            {
              "name": "defaultBranchChangeWorker",
              "type": "named",
              "from": "",
              "namespace": "defaultBranchChangeWorker"
            }
          ],
          "blocks": [
            {
              "hash": "11c58281f5dc9b07e45996db28bc6eabeccf970d864300f391a78df3d8031c07",
              "name": "BranchChangeWorkerData",
              "kind": "TypeAliasDeclaration",
              "content": "export type BranchChangeWorkerData = {\r\n  repo: {\r\n    name: string;\r\n    owner: string;\r\n  };\r\n};",
              "start": 6,
              "end": 11,
              "dependencies": []
            },
            {
              "hash": "21d04f4ef2c1aed164c041c1df4f9be3deb83ae43ba9cf8ea330151fc8fce9a3",
              "name": "defaultBranchChangeQueue",
              "kind": "VariableStatement",
              "content": "export const defaultBranchChangeQueue =\r\n  createQueue<BranchChangeWorkerData>(\"branch-change\");",
              "start": 13,
              "end": 14,
              "dependencies": []
            },
            {
              "hash": "fdbadb60dc1f46e6f04d1aae3880b74d215d6ce31c8721fd1c094fd6e98c56c8",
              "name": "defaultBranchChangeWorker",
              "kind": "VariableStatement",
              "content": "export const defaultBranchChangeWorker = createWorker<BranchChangeWorkerData>(\r\n  \"branch-change\",\r\n  async (job) => {\r\n    try {\r\n      const { name, owner } = job.data.repo;\r\n\r\n      const redis = await connectRedis();\r\n      const lastCommitHash = await redis.getLastVersion(owner, name);\r\n\r\n      const git = await createSimpleGit({});\r\n      const commitHash = await git.pull(lastCommitHash);\r\n\r\n      await analyseRepositoryQueue.add(\"branch-updated\", {\r\n        name,\r\n        owner,\r\n        commitHash,\r\n        previousCommitHash: lastCommitHash,\r\n      });\r\n    } catch (error) {\r\n      console.error({ error });\r\n      // throw error;\r\n    }\r\n  }\r\n);",
              "start": 15,
              "end": 38,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/chatCompletion.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/index.ts",
              "elements": [
                "createQueue",
                "createWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/index.ts",
              "elements": [
                "OpenAIClient"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/types.ts",
              "elements": [
                "BatchProcessResponse"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "DelayedError"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "openai/resources",
              "elements": [
                "ChatCompletionCreateParams"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ChatCompletionWorkerData",
              "type": "named",
              "from": "",
              "namespace": "ChatCompletionWorkerData"
            },
            {
              "name": "ChatCompletionWorkerResult",
              "type": "named",
              "from": "",
              "namespace": "ChatCompletionWorkerResult"
            },
            {
              "name": "chatCompletionQueue",
              "type": "named",
              "from": "",
              "namespace": "chatCompletionQueue"
            },
            {
              "name": "chatCompletionWorker",
              "type": "named",
              "from": "",
              "namespace": "chatCompletionWorker"
            }
          ],
          "blocks": [
            {
              "hash": "7d2dff19e2c341538847a93e29adf0c3496b80da42a6f51f4261f7ab00d80a71",
              "name": "MAX_ATTEMPT",
              "kind": "VariableStatement",
              "content": "const MAX_ATTEMPT = 10;",
              "start": 7,
              "end": 7,
              "dependencies": []
            },
            {
              "hash": "72f53056bcd2fd68130a0889b33d803da7478ce772c305efc88fb63494e13441",
              "name": "INITIAL_DELAY",
              "kind": "VariableStatement",
              "content": "const INITIAL_DELAY = 60 * 1000;",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "5ae7372dd28af3c496bf732db9c20ba8a29dc78234911d0979d35ae28228d33a",
              "name": "BACKOFF_FACTOR",
              "kind": "VariableStatement",
              "content": "const BACKOFF_FACTOR = 2;",
              "start": 9,
              "end": 9,
              "dependencies": []
            },
            {
              "hash": "8e91c2a7d9bd7e56c61c245074d84a51b23c613e24484c21513a35a6434c1ac4",
              "name": "MAX_DELAY",
              "kind": "VariableStatement",
              "content": "const MAX_DELAY = 2 * 60 * 60 * 1000;",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "b66d80719079259b02b101a14aa35d57089d54dd6a41c128cbe2c9b4acd61ae6",
              "name": "openai",
              "kind": "VariableStatement",
              "content": "const openai = new OpenAIClient();",
              "start": 11,
              "end": 11,
              "dependencies": []
            },
            {
              "hash": "f2f34b3d9e5b89bcba219a2d8a871a1623e36b90a621fec771a00c5d86e8ad32",
              "name": "ChatCompletionWorkerData",
              "kind": "TypeAliasDeclaration",
              "content": "export type ChatCompletionWorkerData = {\r\n  messages: {\r\n    id: string;\r\n    content: string;\r\n    type: \"analyse\";\r\n  }[];\r\n  is_batch?: boolean;\r\n  progress?: {\r\n    step?: \"validating\" | \"in_progress\" | \"finalizing\" | \"completed\";\r\n    prompts?: {\r\n      id: string;\r\n      prompt: ChatCompletionCreateParams;\r\n    }[];\r\n    response?: ChatCompletionWorkerResult[];\r\n    batch_id?: string;\r\n    batch_file_id?: string;\r\n    attempt?: number;\r\n  };\r\n};",
              "start": 13,
              "end": 31,
              "dependencies": [
                {
                  "hash": "978f0b387ff950f3d98f87a6913bbf5a82daf446fb8141c48e169f24f6577bb9",
                  "name": "ChatCompletionCreateParams",
                  "kind": "TypeAliasDeclaration",
                  "start": 715,
                  "end": 715,
                  "path": "openai/resources"
                },
                {
                  "hash": "76b0adb8da497d0b72f20e2f2463eac581549570a332061d290c3f3aeaa51b6b",
                  "name": "ChatCompletionWorkerResult",
                  "kind": "TypeAliasDeclaration",
                  "start": 33,
                  "end": 37,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/chatCompletion.ts"
                }
              ]
            },
            {
              "hash": "76b0adb8da497d0b72f20e2f2463eac581549570a332061d290c3f3aeaa51b6b",
              "name": "ChatCompletionWorkerResult",
              "kind": "TypeAliasDeclaration",
              "content": "export type ChatCompletionWorkerResult = {\r\n  id: string;\r\n  result: string;\r\n  usage: number;\r\n};",
              "start": 33,
              "end": 37,
              "dependencies": []
            },
            {
              "hash": "90b6cc624b55032d47aeb6baf0075eb5a9738319e61c24b8fdf840ca1bbd8ffd",
              "name": "chatCompletionQueue",
              "kind": "VariableStatement",
              "content": "export const chatCompletionQueue = createQueue<\r\n  ChatCompletionWorkerData,\r\n  ChatCompletionWorkerResult[]\r\n>(\"chat-completion\");",
              "start": 39,
              "end": 42,
              "dependencies": []
            },
            {
              "hash": "95d58d06c06ac5669366e2c9e3abf2ead6630b29540a3d46077255fa55a5d4b9",
              "name": "chatCompletionWorker",
              "kind": "VariableStatement",
              "content": "export const chatCompletionWorker = createWorker<\r\n  ChatCompletionWorkerData,\r\n  ChatCompletionWorkerResult[]\r\n>(\"chat-completion\", async (job, token) => {\r\n  const { messages = [] } = job.data;\r\n  const {\r\n    step = \"validating\",\r\n    attempt = 0,\r\n    batch_id,\r\n  } = job.data.progress || {};\r\n\r\n  if (attempt >= MAX_ATTEMPT)\r\n    throw new Error(\"Numero maximo de tentativas atingida.\");\r\n\r\n  switch (step) {\r\n    case \"validating\": {\r\n      const prompts = messages.map((msg) => ({\r\n        id: msg.id,\r\n        prompt: openai.preparePrompt({\r\n          message: msg.content,\r\n          type: msg.type,\r\n        }),\r\n      }));\r\n\r\n      const batchPrompts = prompts.map((prompt) =>\r\n        openai.prepareBatch({\r\n          custom_id: prompt.id,\r\n          body: prompt.prompt,\r\n        })\r\n      );\r\n      const batchFile = await openai.createFile(\r\n        batchPrompts.map((p) => JSON.stringify(p)).join(\"\\n\")\r\n      );\r\n      const batch = await openai.createBatch(batchFile.id);\r\n\r\n      await job.updateData({\r\n        ...job.data,\r\n        progress: {\r\n          ...job.data.progress,\r\n          step: \"in_progress\",\r\n          batch_id: batch.id,\r\n        },\r\n      });\r\n\r\n      await job.moveToDelayed(Date.now() + 10, token);\r\n      throw new DelayedError();\r\n    }\r\n    case \"in_progress\": {\r\n      let delay = 100;\r\n      try {\r\n        const response: BatchProcessResponse[] = await openai.retrieveBatch(\r\n          batch_id!\r\n        );\r\n        await job.updateData({\r\n          ...job.data,\r\n          progress: {\r\n            ...job.data.progress,\r\n            response: response.map((resp) => ({\r\n              id: resp.custom_id,\r\n              result: resp.response.body.choices[0].message.content,\r\n              usage: resp.response.body.usage.total_tokens,\r\n            })),\r\n            step: \"completed\",\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.error({ error });\r\n        await job.updateData({\r\n          ...job.data,\r\n          progress: { ...job.data.progress, attempt: attempt + 1 },\r\n        });\r\n        delay = Math.min(\r\n          INITIAL_DELAY * Math.pow(BACKOFF_FACTOR, attempt),\r\n          MAX_DELAY\r\n        );\r\n      }\r\n\r\n      console.log(\"chatCompletion delay\", delay);\r\n      await job.moveToDelayed(Date.now() + delay, token);\r\n      throw new DelayedError();\r\n    }\r\n    default:\r\n      console.log(\"chatCompletion completed!\");\r\n      return job.data.progress?.response || [];\r\n  }\r\n});",
              "start": 44,
              "end": 129,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/installation.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/simple-git/index.ts",
              "elements": [
                "createSimpleGit"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/index.ts",
              "elements": [
                "createQueue",
                "createWorker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/index.ts",
              "elements": [
                "generateJWT"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/workers/analyseRepository.ts",
              "elements": [
                "analyseRepositoryQueue"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "DelayedError",
                "WaitingChildrenError"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "installationQueue",
              "type": "named",
              "from": "",
              "namespace": "installationQueue"
            },
            {
              "name": "InstallationWorkerData",
              "type": "named",
              "from": "",
              "namespace": "InstallationWorkerData"
            },
            {
              "name": "installationWorker",
              "type": "named",
              "from": "",
              "namespace": "installationWorker"
            }
          ],
          "blocks": [
            {
              "hash": "9583d20628aeeb13b674ac7d3164402014c7e40702c39c9b8f96d4134b5bbd8b",
              "name": "installationQueue",
              "kind": "VariableStatement",
              "content": "export const installationQueue = createQueue(\"installation\");",
              "start": 7,
              "end": 7,
              "dependencies": []
            },
            {
              "hash": "0be38925723e55647b18b8440a6fb58c1ea573f2506a05440730d0806c0737d4",
              "name": "InstallationWorkerData",
              "kind": "TypeAliasDeclaration",
              "content": "export type InstallationWorkerData = {\r\n  type: \"installation\" | \"uninstallation\";\r\n  step?: \"validating\" | \"in_progress\" | \"finalizing\" | \"completed\";\r\n  repositories: {\r\n    name: string;\r\n    owner: string;\r\n  }[];\r\n};",
              "start": 9,
              "end": 16,
              "dependencies": []
            },
            {
              "hash": "b309951a03e2a684de8d9cd7c1b9a060d809fa76549165fa5830aa42de058f3c",
              "name": "installationWorker",
              "kind": "VariableStatement",
              "content": "export const installationWorker = createWorker<InstallationWorkerData>(\r\n  \"installation\",\r\n  async (job, token) => {\r\n    try {\r\n      const { repositories, type, step = \"validating\" } = job.data;\r\n\r\n      switch (type) {\r\n        case \"installation\": {\r\n          switch (step) {\r\n            case \"validating\": {\r\n              console.log(job.name, \" start with data \", job.data);\r\n              const git = await createSimpleGit({});\r\n              const installationToken = generateJWT();\r\n\r\n              for (const repo of repositories) {\r\n                const repoUrl = `https://x-access-token:${installationToken}@github.com/${repo.owner}/${repo.name}.git`;\r\n\r\n                const commitHash = await git.clone(repoUrl);\r\n\r\n                console.log(job.name, \" repo \", repo, \" cloned\");\r\n                await analyseRepositoryQueue.add(\r\n                  \"repo-cloned\",\r\n                  {\r\n                    commitHash: commitHash,\r\n                    name: repo.name,\r\n                    owner: repo.owner,\r\n                  },\r\n                  {\r\n                    parent: {\r\n                      id: job.id!,\r\n                      queue: job.queueQualifiedName,\r\n                    },\r\n                  }\r\n                );\r\n              }\r\n\r\n              await job.updateData({ ...job.data, step: \"in_progress\" });\r\n              await job.moveToDelayed(Date.now() + 10, token);\r\n              throw new DelayedError();\r\n            }\r\n            case \"in_progress\": {\r\n              console.log(job.name, \"wait children\");\r\n              const shouldWait = await job.moveToWaitingChildren(token!);\r\n              if (shouldWait) throw new WaitingChildrenError();\r\n\r\n              await job.updateData({ ...job.data, step: \"completed\" });\r\n              await job.moveToDelayed(Date.now() + 10, token);\r\n              throw new DelayedError();\r\n            }\r\n            default: {\r\n              console.log(job.name, \" installation completed\");\r\n              break;\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n        case \"uninstallation\": {\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error({ error });\r\n      throw error;\r\n    }\r\n  }\r\n);",
              "start": 18,
              "end": 87,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts",
          "imports": [
            {
              "moduleSpecifier": "@dagrejs/graphlib",
              "elements": [
                "graphlib"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts",
              "elements": [
                "BlockInfo",
                "FileAnalysis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts",
              "elements": [
                "generateModuleName"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "DependencyGraphBuilder",
              "type": "named",
              "from": "",
              "namespace": "DependencyGraphBuilder"
            },
            {
              "name": "createDependencyGraph",
              "type": "named",
              "from": "",
              "namespace": "createDependencyGraph"
            }
          ],
          "blocks": [
            {
              "hash": "71c888968ad28f5f5570ba1cc61a469c8f971f45665c629bf0b476f817e70f19",
              "name": "DependencyGraphBuilder",
              "kind": "ClassDeclaration",
              "content": "export class DependencyGraphBuilder {\r\n  private graph: graphlib.Graph;\r\n  private fileAnalyses: FileAnalysis[];\r\n\r\n  constructor() {\r\n    this.graph = new graphlib.Graph({ directed: true });\r\n    this.fileAnalyses = [];\r\n  }\r\n\r\n  public addFileAnalysis(analysis: FileAnalysis): void {\r\n    this.fileAnalyses.push(analysis);\r\n  }\r\n\r\n  public buildGraph(): graphlib.Graph {\r\n    // Adicionar todos os blocos como nós\r\n    this.fileAnalyses.forEach((analysis) => {\r\n      analysis.blocks.forEach((block) => {\r\n        const filePath = analysis.filePath\r\n          .replace(\".ts\", \"\")\r\n          .replace(\".tsx\", \"\");\r\n        const nodeId = `${filePath}:${block.name}`;\r\n        this.graph.setNode(nodeId, {\r\n          ...block,\r\n          id: nodeId,\r\n        });\r\n      });\r\n    });\r\n\r\n    // Adicionar as arestas baseadas nas dependências\r\n    this.fileAnalyses.forEach((analysis) => {\r\n      analysis.blocks.forEach((block) => {\r\n        const filePath = analysis.filePath\r\n          .replace(\".ts\", \"\")\r\n          .replace(\".tsx\", \"\");\r\n        const sourceNodeId = `${filePath}:${block.name}`;\r\n\r\n        // Processar cada dependência do bloco\r\n        Object.entries(block.externalDependencies).forEach(\r\n          ([depName, depInfo]) => {\r\n            const targetNodeId =\r\n              depInfo.type === \"import\"\r\n                ? `${depInfo.filePath}:${depName}`\r\n                : `${analysis.filePath.replace(\".ts\", \"\").replace(\".tsx\", \"\")}:${depName}`;\r\n\r\n            if (targetNodeId && this.graph.hasNode(`${targetNodeId}`)) {\r\n              this.graph.setEdge(sourceNodeId, targetNodeId, {\r\n                type: depInfo.type,\r\n              });\r\n            }\r\n          }\r\n        );\r\n      });\r\n    });\r\n\r\n    return this.graph;\r\n  }\r\n\r\n  public findComponents(): string[][] {\r\n    return graphlib.alg.components(this.graph);\r\n  }\r\n\r\n  public getModules(): Map<string, { filePath: string; name: string }[]> {\r\n    const components = this.findComponents();\r\n    const modules = new Map<string, { filePath: string; name: string }[]>();\r\n\r\n    components.forEach((component) => {\r\n      const moduleName = generateModuleName(\r\n        component.map((c) => c.split(\":\")[2])\r\n      );\r\n\r\n      modules.set(\r\n        moduleName,\r\n        component.map((nodeId) => {\r\n          const node: BlockInfo = this.graph.node(nodeId);\r\n          let filePath = \"\";\r\n          if (node) {\r\n            const [file] = this.fileAnalyses.filter((analyse) =>\r\n              analyse.blocks.some((block) => block.name === node.name)\r\n            );\r\n            filePath = file.filePath;\r\n          }\r\n\r\n          return {\r\n            filePath,\r\n            name: node?.name,\r\n          };\r\n        })\r\n      );\r\n    });\r\n\r\n    return modules;\r\n  }\r\n\r\n  public getGraphInfo(): {\r\n    nodes: number;\r\n    edges: number;\r\n    components: number;\r\n    moduleInfo: Array<{\r\n      name: string;\r\n      blocks: number;\r\n      files: string[];\r\n    }>;\r\n  } {\r\n    const modules = this.getModules();\r\n    const moduleInfo = Array.from(modules.entries()).map(([name, blocks]) => ({\r\n      name,\r\n      blocks: blocks.length,\r\n      files: [...new Set(blocks.map((block) => block.filePath))],\r\n    }));\r\n\r\n    return {\r\n      nodes: this.graph.nodes().length,\r\n      edges: this.graph.edges().length,\r\n      components: this.findComponents().length,\r\n      moduleInfo,\r\n    };\r\n  }\r\n}",
              "start": 5,
              "end": 122,
              "dependencies": [
                {
                  "hash": "fa9eed0ba83e6ed8a27a3c89ce24c74b239d33e042c44c2c0a262969acfd3f56",
                  "name": "Graph",
                  "kind": "ClassDeclaration",
                  "start": 20,
                  "end": 424,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/@dagrejs/graphlib/index.d.ts"
                },
                {
                  "hash": "6ee1a88ca39f8fb65d02f243e7fc2a16aa63b639e2c5253d56f1baa51db55a4d",
                  "name": "FileAnalysis",
                  "kind": "TypeAliasDeclaration",
                  "start": 17,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts"
                },
                {
                  "hash": "654dd3737cf30fafe448ce0cfc2cd2484790a002dafc439842aae10b68bc2346",
                  "name": "filePath",
                  "kind": "VariableDeclaration",
                  "start": 22,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "16cfc127150ff1c43318b6775cd47f5ac342ab11fa017c9c01ae43f9b0329216",
                  "name": "nodeId",
                  "kind": "VariableDeclaration",
                  "start": 25,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "7a96c133fc63490587bdafd70514fed0bb22366a99a5037fe0813cdbed530d86",
                  "name": "sourceNodeId",
                  "kind": "VariableDeclaration",
                  "start": 39,
                  "end": 39,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "f78804dbf09d5fed25011fb5d5c9dba5597f97c02768c4a2487e4bf45e1bd8d6",
                  "name": "targetNodeId",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 47,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "8d1c5278e51ae38c4ed35d64c64d1fa7d7e5a154313313aa640da441ed7ca9fe",
                  "name": "components",
                  "kind": "FunctionDeclaration",
                  "start": 466,
                  "end": 466,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/@dagrejs/graphlib/index.d.ts"
                },
                {
                  "hash": "d25f6927094b42fd679ecdca49a8d20b420475d68239b9131618e07910568fd7",
                  "name": "components",
                  "kind": "VariableDeclaration",
                  "start": 67,
                  "end": 67,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "a2cf846cb1c057e6b4b22820ff2bfcdc8f087edc345692c7a355813357cf6bd9",
                  "name": "modules",
                  "kind": "VariableDeclaration",
                  "start": 68,
                  "end": 68,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "6cf5e2bd6d19548036ab12d6a6293cf2f4febe1bc5bd236bb8f930c82598172e",
                  "name": "moduleName",
                  "kind": "VariableDeclaration",
                  "start": 71,
                  "end": 73,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "5905edd8c9ed2d9598fda876374ab956f87d4e7853b23fa8d9990d09a270592a",
                  "name": "generateModuleName",
                  "kind": "FunctionDeclaration",
                  "start": 67,
                  "end": 72,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/utils/generateModuleName.ts"
                },
                {
                  "hash": "c378945d9c4c520f6cbb28d25c3b0d15ab9a7af652678b2f25137af1d463964d",
                  "name": "node",
                  "kind": "VariableDeclaration",
                  "start": 78,
                  "end": 78,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "8e88bbacc0ab38b76fa86442289c8a963109f3342cfff65f5092d90d5bd83982",
                  "name": "BlockInfo",
                  "kind": "TypeAliasDeclaration",
                  "start": 1,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts"
                },
                {
                  "hash": "6c8e68fdc40da543a0fd30b8c63e63235ce1940d127cf8f6eae0e24333224e36",
                  "name": "filePath",
                  "kind": "VariableDeclaration",
                  "start": 79,
                  "end": 79,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "7b2a9b053c2b444c166406c8f9b8eb3748897eefe1efdb0b0b7c4fa4a59a129a",
                  "name": "modules",
                  "kind": "VariableDeclaration",
                  "start": 108,
                  "end": 108,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                },
                {
                  "hash": "1772c38239d4c607c7edb874e7ac6c49f992844bd7d8293b23bb048a1f971329",
                  "name": "moduleInfo",
                  "kind": "VariableDeclaration",
                  "start": 109,
                  "end": 113,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/dependencyGraphBuilder.ts"
                }
              ]
            },
            {
              "hash": "59d8f35345e6de4f44315f26bf334b479b1c5a177a738172ae442affbb890978",
              "name": "createDependencyGraph",
              "kind": "VariableStatement",
              "content": "export const createDependencyGraph = () => new DependencyGraphBuilder();",
              "start": 124,
              "end": 124,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts",
          "imports": [],
          "exports": [
            {
              "name": "BlockInfo",
              "type": "named",
              "from": "",
              "namespace": "BlockInfo"
            },
            {
              "name": "FileAnalysis",
              "type": "named",
              "from": "",
              "namespace": "FileAnalysis"
            }
          ],
          "blocks": [
            {
              "hash": "8e88bbacc0ab38b76fa86442289c8a963109f3342cfff65f5092d90d5bd83982",
              "name": "BlockInfo",
              "kind": "TypeAliasDeclaration",
              "content": "export type BlockInfo = {\r\n  kind: string;\r\n  name: string;\r\n  source: string;\r\n  blockHash: string;\r\n  externalDependencies: Record<\r\n    string,\r\n    {\r\n      filePath: string;\r\n      type: \"import\" | \"local\";\r\n    }\r\n  >;\r\n  start: number;\r\n  end: number;\r\n};",
              "start": 1,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "6ee1a88ca39f8fb65d02f243e7fc2a16aa63b639e2c5253d56f1baa51db55a4d",
              "name": "FileAnalysis",
              "kind": "TypeAliasDeclaration",
              "content": "export type FileAnalysis = {\r\n  filePath: string;\r\n  imports: {\r\n    name: string;\r\n    path: string;\r\n  }[];\r\n  exports: string[];\r\n  blocks: BlockInfo[];\r\n};",
              "start": 17,
              "end": 25,
              "dependencies": [
                {
                  "hash": "8e88bbacc0ab38b76fa86442289c8a963109f3342cfff65f5092d90d5bd83982",
                  "name": "BlockInfo",
                  "kind": "TypeAliasDeclaration",
                  "start": 1,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts",
          "imports": [
            {
              "moduleSpecifier": "typescript",
              "namespace": "ts",
              "elements": [
                "ts"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts",
              "elements": [
                "BlockInfo",
                "FileAnalysis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "node:path",
              "namespace": "path",
              "elements": [
                "path"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "node:crypto",
              "elements": [
                "createHash"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "createTypescriptAnalyser",
              "type": "named",
              "from": "",
              "namespace": "createTypescriptAnalyser"
            }
          ],
          "blocks": [
            {
              "hash": "c3f300d46c447cdf5308da6848b399ba87595c804770f3183b79fcfd970b24e7",
              "name": "TypescriptAnalyzer",
              "kind": "ClassDeclaration",
              "content": "class TypescriptAnalyzer {\r\n  private pathLocation: string;\r\n  private sourceFile: ts.SourceFile;\r\n  private checker: ts.TypeChecker;\r\n\r\n  constructor(workingDirectory: string, filePath: string) {\r\n    this.pathLocation = path.resolve(workingDirectory, filePath);\r\n    const program = ts.createProgram([this.pathLocation], {});\r\n    this.checker = program.getTypeChecker();\r\n    this.sourceFile = program.getSourceFile(this.pathLocation)!;\r\n  }\r\n\r\n  private analyzeImports(analysis: FileAnalysis): void {\r\n    ts.forEachChild(this.sourceFile, (node) => {\r\n      if (ts.isImportDeclaration(node)) {\r\n        const importPath = (node.moduleSpecifier as ts.StringLiteral).text;\r\n        if (node.importClause) {\r\n          if (node.importClause.name) {\r\n            analysis.imports.push({\r\n              name: node.importClause.name.text,\r\n              path: path.join(path.dirname(this.pathLocation), importPath),\r\n            });\r\n          }\r\n          if (node.importClause.namedBindings) {\r\n            if (ts.isNamedImports(node.importClause.namedBindings)) {\r\n              node.importClause.namedBindings.elements.forEach((element) => {\r\n                analysis.imports.push({\r\n                  name: element.name.text,\r\n                  path: path.join(path.dirname(this.pathLocation), importPath),\r\n                });\r\n              });\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private analyzeExport(\r\n    node: ts.ExportDeclaration,\r\n    analysis: FileAnalysis\r\n  ): void {\r\n    if (node.exportClause && ts.isNamedExports(node.exportClause)) {\r\n      node.exportClause.elements.forEach((element) => {\r\n        analysis.exports.push(element.name.text);\r\n      });\r\n    }\r\n  }\r\n\r\n  private analyzeBlock(node: ts.Node, analysis: FileAnalysis): void {\r\n    const blockInfo: BlockInfo = {\r\n      kind: ts.SyntaxKind[node.kind],\r\n      name: this.getDeclarationName(node),\r\n      source: node.getText(),\r\n      blockHash: createHash(\"SHA512\")\r\n        .update(node.getText(), \"utf-8\")\r\n        .digest(\"hex\"),\r\n      externalDependencies: {},\r\n      start: node.getStart(),\r\n      end: node.getEnd(),\r\n    };\r\n\r\n    // Encontrar dependências externas\r\n    this.findExternalDependencies(node, blockInfo, analysis.imports);\r\n\r\n    analysis.blocks.push(blockInfo);\r\n  }\r\n\r\n  private findExternalDependencies(\r\n    node: ts.Node,\r\n    blockInfo: BlockInfo,\r\n    imports?: {\r\n      name: string;\r\n      path: string;\r\n    }[]\r\n  ): void {\r\n    const visitNode = (node: ts.Node) => {\r\n      if (ts.isPropertyAccessExpression(node)) {\r\n        let current: ts.Node = node;\r\n        while (ts.isPropertyAccessExpression(current)) {\r\n          current = current.expression;\r\n        }\r\n\r\n        if (ts.isIdentifier(current)) {\r\n          const symbol = this.checker.getSymbolAtLocation(current);\r\n          if (symbol) {\r\n            const declaration = symbol.declarations?.[0];\r\n            if (declaration && !this.isInsideBlock(declaration, blockInfo)) {\r\n              const from: \"local\" | \"import\" = imports?.some(\r\n                ({ name }) => name === current.text\r\n              )\r\n                ? \"import\"\r\n                : \"local\";\r\n              let filePath = this.pathLocation;\r\n              if (from === \"import\") {\r\n                filePath =\r\n                  imports?.find((i) => i.name === current.text)?.path || \"\";\r\n              }\r\n              blockInfo.externalDependencies[current.text] = {\r\n                filePath,\r\n                type: from,\r\n              };\r\n            }\r\n          }\r\n        }\r\n      } else if (\r\n        ts.isIdentifier(node) &&\r\n        !ts.isPropertyAccessExpression(node.parent)\r\n      ) {\r\n        const symbol = this.checker.getSymbolAtLocation(node);\r\n        if (symbol) {\r\n          const declaration = symbol.declarations?.[0];\r\n          if (declaration && !this.isInsideBlock(declaration, blockInfo)) {\r\n            const from: \"local\" | \"import\" = imports?.some(\r\n              ({ name }) => name === node.text\r\n            )\r\n              ? \"import\"\r\n              : \"local\";\r\n            let filePath = this.pathLocation;\r\n            if (from === \"import\") {\r\n              filePath = imports?.find((i) => i.name === node.text)?.path || \"\";\r\n            }\r\n            blockInfo.externalDependencies[node.text] = {\r\n              filePath,\r\n              type: from,\r\n            };\r\n          }\r\n        }\r\n      }\r\n\r\n      ts.forEachChild(node, visitNode);\r\n    };\r\n\r\n    visitNode(node);\r\n  }\r\n\r\n  private isInsideBlock(node: ts.Node, blockInfo: BlockInfo): boolean {\r\n    const pos = node.getStart();\r\n    return pos >= blockInfo.start && pos <= blockInfo.end;\r\n  }\r\n\r\n  private isTopLevelDeclaration(node: ts.Node): boolean {\r\n    return (\r\n      ts.isFunctionDeclaration(node) ||\r\n      ts.isClassDeclaration(node) ||\r\n      ts.isInterfaceDeclaration(node) ||\r\n      ts.isTypeAliasDeclaration(node) ||\r\n      ts.isVariableStatement(node)\r\n    );\r\n  }\r\n\r\n  private getDeclarationName(node: ts.Node): string {\r\n    if (\r\n      ts.isFunctionDeclaration(node) ||\r\n      ts.isClassDeclaration(node) ||\r\n      ts.isInterfaceDeclaration(node) ||\r\n      ts.isTypeAliasDeclaration(node)\r\n    ) {\r\n      return node.name?.text || \"anonymous\";\r\n    } else if (ts.isVariableStatement(node)) {\r\n      return node.declarationList.declarations[0].name.getText();\r\n    }\r\n    return \"unknown\";\r\n  }\r\n\r\n  public analyze(): FileAnalysis {\r\n    const analysis: FileAnalysis = {\r\n      filePath: this.pathLocation,\r\n      imports: [],\r\n      exports: [],\r\n      blocks: [],\r\n    };\r\n\r\n    // Analisar imports\r\n    this.analyzeImports(analysis);\r\n\r\n    // Analisar exports e blocos principais\r\n    ts.forEachChild(this.sourceFile, (node) => {\r\n      if (ts.isExportDeclaration(node)) {\r\n        this.analyzeExport(node, analysis);\r\n      } else if (this.isTopLevelDeclaration(node)) {\r\n        this.analyzeBlock(node, analysis);\r\n      }\r\n    });\r\n\r\n    return analysis;\r\n  }\r\n}",
              "start": 6,
              "end": 193,
              "dependencies": [
                {
                  "hash": "ae72b092a1e9a7e8b74935f96a66dd5ebf36abdb948934100a4345f14ecab3ac",
                  "name": "path",
                  "kind": "VariableDeclaration",
                  "start": 186,
                  "end": 186,
                  "path": "node:path"
                },
                {
                  "hash": "9b2c28a437f798f36b7b1697c4d2d6310d5dd3b0f4642dff68bcd45c324f3bba",
                  "name": "program",
                  "kind": "VariableDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "6ee1a88ca39f8fb65d02f243e7fc2a16aa63b639e2c5253d56f1baa51db55a4d",
                  "name": "FileAnalysis",
                  "kind": "TypeAliasDeclaration",
                  "start": 17,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts"
                },
                {
                  "hash": "fa76ca6ddc5dd5ec2ac6bb434cd4ddf2c2f3fc6d253c9d46cfe619742577fca1",
                  "name": "importPath",
                  "kind": "VariableDeclaration",
                  "start": 21,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "107212ccceccc470b482f0cdc969887716d63f6269fad48ed221a5d3d22a8326",
                  "name": "blockInfo",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 66,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "8e88bbacc0ab38b76fa86442289c8a963109f3342cfff65f5092d90d5bd83982",
                  "name": "BlockInfo",
                  "kind": "TypeAliasDeclaration",
                  "start": 1,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/types.ts"
                },
                {
                  "hash": "eab8476819ef8f6ed8c881bd373464e1cb1471887735088898aaa086fb73de8a",
                  "name": "createHash",
                  "kind": "FunctionDeclaration",
                  "start": 231,
                  "end": 231,
                  "path": "node:crypto"
                },
                {
                  "hash": "dd98916d4c4cac1e21f953f3669673800cbe5f7573d1ff0b91af69833bde15de",
                  "name": "visitNode",
                  "kind": "VariableDeclaration",
                  "start": 82,
                  "end": 137,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "44fc120c0b78b69914f15662f0e9e383c82e8a6ff924b85e5a7c1863877d2b5a",
                  "name": "current",
                  "kind": "VariableDeclaration",
                  "start": 84,
                  "end": 84,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "a7a9981cc6f1725604ccd12da3135522b92cf4e5fe5391a981cb1cd84f1fbfd0",
                  "name": "symbol",
                  "kind": "VariableDeclaration",
                  "start": 90,
                  "end": 90,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "3cb12a0d792cdb51687da1e54ba2b03cfc8a13576b49658b79055e2ca904e857",
                  "name": "declaration",
                  "kind": "VariableDeclaration",
                  "start": 92,
                  "end": 92,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "206887da96c6980f5a33ef89fdd75cda32f17b5f70c51f6bbe29d96c0b5f2bca",
                  "name": "from",
                  "kind": "VariableDeclaration",
                  "start": 94,
                  "end": 98,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "e100a96b7541fc68f135409db5f82c9b592f146ed5c0430894aa57caaee8a21b",
                  "name": "filePath",
                  "kind": "VariableDeclaration",
                  "start": 99,
                  "end": 99,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "170aeba246bb20b92877538b290941d58cc1f396b78b28d585377db1fb5cdbe3",
                  "name": "symbol",
                  "kind": "VariableDeclaration",
                  "start": 115,
                  "end": 115,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "51c7094b2e23360afe6a25b49198296f7e5959c1e2e0fdf5285472402f5b8b97",
                  "name": "from",
                  "kind": "VariableDeclaration",
                  "start": 119,
                  "end": 123,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "9fa643049b5ebb9d4e6daf1ce56c1d27b18e452eece8446719d7ef93d4b1df47",
                  "name": "pos",
                  "kind": "VariableDeclaration",
                  "start": 143,
                  "end": 143,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                },
                {
                  "hash": "fa887c7d86a571fb6140665f5b30ed8cd7be61e9b21b907d5a05433c973d8c3e",
                  "name": "analysis",
                  "kind": "VariableDeclaration",
                  "start": 172,
                  "end": 177,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/anyliser/typescryptAnalyser.ts"
                }
              ]
            },
            {
              "hash": "9380259ccdfd5c4981c18479a772f8b894e9ac8f8176d9d5fc1a4e30c282b3c4",
              "name": "createTypescriptAnalyser",
              "kind": "VariableStatement",
              "content": "export const createTypescriptAnalyser = (\r\n  workingDirectory: string,\r\n  filePath: string\r\n) => new TypescriptAnalyzer(workingDirectory, filePath);",
              "start": 195,
              "end": 198,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/config.ts",
          "imports": [
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "ConnectionOptions"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "connection",
              "type": "named",
              "from": "",
              "namespace": "connection"
            }
          ],
          "blocks": [
            {
              "hash": "fbed2eaa73d7a1706e0220844eb256f90a9b5670a474b51277ef551bb7d01a29",
              "name": "connection",
              "kind": "VariableStatement",
              "content": "export const connection: ConnectionOptions = {\r\n  host: \"localhost\",\r\n  port: 6379,\r\n};",
              "start": 3,
              "end": 6,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/createQueue.ts",
          "imports": [
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "Queue"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/config.ts",
              "elements": [
                "connection"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "createQueue",
              "type": "named",
              "from": "",
              "namespace": "createQueue"
            }
          ],
          "blocks": [
            {
              "hash": "1cbe9e00b0b4c2ea735d886a42a942b6ec8d60628d311721fa5b45399ec792aa",
              "name": "createQueue",
              "kind": "VariableStatement",
              "content": "export const createQueue = <WorkerData, WorkerReturn = unknown>(\r\n  name: string\r\n) => {\r\n  const queue = new Queue<WorkerData, WorkerReturn>(name, {\r\n    connection,\r\n    defaultJobOptions: {\r\n      removeOnComplete: true,\r\n      removeOnFail: true,\r\n    },\r\n  });\r\n  queue.on(\"error\", (error) => {\r\n    console.log(error);\r\n  });\r\n\r\n  return queue;\r\n};",
              "start": 4,
              "end": 19,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/createWorker.ts",
          "imports": [
            {
              "moduleSpecifier": "bullmq",
              "elements": [
                "Worker",
                "Processor"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/config.ts",
              "elements": [
                "connection"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "createWorker",
              "type": "named",
              "from": "",
              "namespace": "createWorker"
            }
          ],
          "blocks": [
            {
              "hash": "c92d7b2b10a0285a5df2fb31c97369d6f7c81da7ef3106bd33e77ee4a39245fb",
              "name": "createWorker",
              "kind": "VariableStatement",
              "content": "export const createWorker = <WorkerData, WorkerReturn = unknown>(\r\n  queue: string,\r\n  processor: Processor<WorkerData, WorkerReturn>\r\n) => {\r\n  const worker = new Worker<WorkerData, WorkerReturn>(queue, processor, {\r\n    connection,\r\n    lockDuration: 1000 * 60 * 5,\r\n    autorun: false,\r\n  });\r\n\r\n  worker.on(\"error\", (error) => {\r\n    console.error(error);\r\n  });\r\n\r\n  return worker;\r\n};",
              "start": 4,
              "end": 19,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/index.ts",
          "imports": [],
          "exports": [
            {
              "name": "createQueue",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/createQueue.ts",
              "namespace": "createQueue"
            },
            {
              "name": "createWorker",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/bullmq/createWorker.ts",
              "namespace": "createWorker"
            }
          ],
          "blocks": []
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/chroma/createChroma.ts",
          "imports": [
            {
              "moduleSpecifier": "chromadb",
              "elements": [
                "ChromaClient"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "createChroma",
              "type": "named",
              "from": "",
              "namespace": "createChroma"
            }
          ],
          "blocks": [
            {
              "hash": "e1984ff688d96aa22c0859739aa9ca4e3254700fddf58d3d15a185a627f053a5",
              "name": "createChroma",
              "kind": "VariableStatement",
              "content": "export const createChroma = () => {\r\n  const client = new ChromaClient({\r\n    auth: {\r\n      provider: \"basic\",\r\n      credentials: \"admin:admin\",\r\n    },\r\n  });\r\n  client.heartbeat();\r\n  return client;\r\n};",
              "start": 3,
              "end": 12,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/chroma/index.ts",
          "imports": [],
          "exports": [],
          "blocks": []
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/generateJWT.ts",
          "imports": [
            {
              "moduleSpecifier": "jsonwebtoken",
              "namespace": "jwt",
              "elements": [
                "jwt"
              ],
              "isDefault": true
            }
          ],
          "exports": [
            {
              "name": "generateJWT",
              "type": "named",
              "from": "",
              "namespace": "generateJWT"
            }
          ],
          "blocks": [
            {
              "hash": "b26c6575c4ea1f5e9ea9f24290236384d27bd469fe92adb5ca80ee3aeaaa5940",
              "name": "generateJWT",
              "kind": "FunctionDeclaration",
              "content": "export function generateJWT() {\r\n  try {\r\n    const payload = {\r\n      iat: Math.floor(Date.now() / 1000),\r\n      exp: Math.floor(Date.now() / 1000) + 60,\r\n      iss: process.env.AUTH_GITHUB_ID,\r\n    };\r\n\r\n    return jwt.sign(payload, process.env.AUTH_GITHUB_PRIVATE_KEY!, {\r\n      algorithm: \"RS256\",\r\n    });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return \"\";\r\n  }\r\n}",
              "start": 3,
              "end": 18,
              "dependencies": [
                {
                  "hash": "3de234b0da2865decc290896a88091f07b35a961c6e2e4a6f1a537cea5117316",
                  "name": "payload",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 9,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/generateJWT.ts"
                },
                {
                  "hash": "52c147d7acc30b2322fd668ed8fd9ea824385e843fe7167f85554d9f115333d7",
                  "name": "sign",
                  "kind": "FunctionDeclaration",
                  "start": 172,
                  "end": 176,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/@types/jsonwebtoken/index.d.ts"
                },
                {
                  "hash": "17d1e9cc92e6af3c97053d5fe8cb6a5cc9d9ca82ef733f353e4e23683a31ba10",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 14,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/generateJWT.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/getOctoKit.ts",
          "imports": [],
          "exports": [
            {
              "name": "getOctoKit",
              "type": "named",
              "from": "",
              "namespace": "getOctoKit"
            }
          ],
          "blocks": [
            {
              "hash": "fa0a0bc5c46eb3b68257b670f905d33180bd88bf6fac705b5f80de1d93b5e086",
              "name": "getOctoKit",
              "kind": "FunctionDeclaration",
              "content": "export async function getOctoKit(jwtToken: string) {\r\n  const octo = await import(\"octokit\");\r\n\r\n  const octokit = new octo.Octokit({\r\n    auth: jwtToken,\r\n  });\r\n\r\n  return octokit;\r\n}",
              "start": 1,
              "end": 9,
              "dependencies": [
                {
                  "hash": "051fe34614e5e5d53ff41bf8b3de64e44243351f500c1585a170a65abcb70018",
                  "name": "octo",
                  "kind": "VariableDeclaration",
                  "start": 2,
                  "end": 2,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/getOctoKit.ts"
                },
                {
                  "hash": "22ca33013316f17d5d9a8787fa9c26ca9612f5d125de9452dd8839d09fe6e6dd",
                  "name": "octokit",
                  "kind": "VariableDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/getOctoKit.ts"
                },
                {
                  "hash": "eb0ec8b9f016e4b12c6e5503466563afc064d6216e8a30fe017ced704588051c",
                  "name": "Octokit",
                  "kind": "VariableDeclaration",
                  "start": 4,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/octokit/dist-types/octokit.d.ts"
                },
                {
                  "hash": "0aebadb4c561b38603b97965f454a78355452d6b1584c71a8079bc2f2baeedd7",
                  "name": "Octokit",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/octokit/dist-types/octokit.d.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/index.ts",
          "imports": [],
          "exports": [
            {
              "name": "generateJWT",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/generateJWT.ts",
              "namespace": "generateJWT"
            },
            {
              "name": "getOctoKit",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/github/getOctoKit.ts",
              "namespace": "getOctoKit"
            }
          ],
          "blocks": []
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/createOpenAI.ts",
          "imports": [
            {
              "moduleSpecifier": "openai",
              "namespace": "OpenAI",
              "elements": [
                "OpenAI"
              ],
              "isDefault": true
            }
          ],
          "exports": [
            {
              "name": "createOpenAI",
              "type": "named",
              "from": "",
              "namespace": "createOpenAI"
            }
          ],
          "blocks": [
            {
              "hash": "76ee02fe9b5edc57b13d84042c68152f3d8f0a01c6d9775e54a00bcee9db57ea",
              "name": "createOpenAI",
              "kind": "VariableStatement",
              "content": "export const createOpenAI = () => {\r\n  return new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\r\n};",
              "start": 3,
              "end": 5,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/index.ts",
          "imports": [],
          "exports": [
            {
              "name": "createOpenAI",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/createOpenAI.ts",
              "namespace": "createOpenAI"
            },
            {
              "name": "OpenAIClient",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts",
              "namespace": "OpenAIClient"
            },
            {
              "name": "PromptTypes",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts",
              "namespace": "PromptTypes"
            }
          ],
          "blocks": []
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts",
          "imports": [
            {
              "moduleSpecifier": "openai",
              "namespace": "OpenAI",
              "elements": [
                "OpenAI"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/createOpenAI.ts",
              "elements": [
                "createOpenAI"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/types.ts",
              "elements": [
                "BatchProcessResponse",
                "ChatCompletionResponse"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "stream",
              "elements": [
                "Readable"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "openai/streaming",
              "elements": [
                "Stream"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "PromptTypes",
              "type": "named",
              "from": "",
              "namespace": "PromptTypes"
            },
            {
              "name": "OpenAIClient",
              "type": "named",
              "from": "",
              "namespace": "OpenAIClient"
            }
          ],
          "blocks": [
            {
              "hash": "d2bb1fd092e11479036e90860b590e1289de4a8c9b5797c8621938da69958010",
              "name": "PROMPTS",
              "kind": "VariableStatement",
              "content": "const PROMPTS = {\r\n  analyse: {\r\n    system: {\r\n      role: \"system\",\r\n      content:\r\n        \"You are an assistant specialized in summarizing code. Given a block of code, provide a high-level description using only relevant keywords and concepts, avoiding step-by-step explanations. Keep the description under 250 characters.\",\r\n    },\r\n    user: {\r\n      role: \"user\",\r\n      content: \"\",\r\n    },\r\n  },\r\n} as const;",
              "start": 7,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "60e124fd651ba1b8741f43fd7d71f51c1445835b0dc63070531ec1e3c36ad7f1",
              "name": "PromptTypes",
              "kind": "TypeAliasDeclaration",
              "content": "export type PromptTypes = keyof typeof PROMPTS;",
              "start": 21,
              "end": 21,
              "dependencies": [
                {
                  "hash": "87b49a0695ce06a4cb64ac57055c29a958c3da0e63053b35f28f4a5d78343e35",
                  "name": "PROMPTS",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                }
              ]
            },
            {
              "hash": "f7a0c7e46f089319b5f02f85c6fc209566d30b925a3522b74239561a1ca7a9ce",
              "name": "OpenAIClient",
              "kind": "ClassDeclaration",
              "content": "export class OpenAIClient {\r\n  private connection: OpenAI;\r\n  constructor() {\r\n    this.connection = createOpenAI();\r\n  }\r\n\r\n  preparePrompt({\r\n    message,\r\n    model = \"gpt-3.5-turbo\",\r\n    type = \"analyse\",\r\n    max_tokens = 250,\r\n    creativity = 0.5,\r\n  }: {\r\n    message: string;\r\n    type?: PromptTypes;\r\n    model?: string;\r\n    max_tokens?: number;\r\n    creativity?: number;\r\n  }): OpenAI.ChatCompletionCreateParams {\r\n    const temperature = 0.1 + creativity * (1.0 - 0.1);\r\n    const top_p = 1.0 - creativity * (1.0 - 0.1);\r\n\r\n    return {\r\n      max_completion_tokens: max_tokens,\r\n      temperature,\r\n      top_p,\r\n      n: 1,\r\n      model,\r\n      messages: [\r\n        PROMPTS[type].system,\r\n        {\r\n          role: PROMPTS[type].user.role,\r\n          content: `${PROMPTS[type].user.content} ${message}`,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  prepareBatch({\r\n    custom_id,\r\n    body,\r\n  }: {\r\n    custom_id: string;\r\n    body: OpenAI.ChatCompletionCreateParams;\r\n  }): {\r\n    custom_id: string;\r\n    method: \"POST\";\r\n    url: \"/v1/chat/completions\";\r\n    body: OpenAI.ChatCompletionCreateParams;\r\n  } {\r\n    return {\r\n      custom_id,\r\n      method: \"POST\",\r\n      url: \"/v1/chat/completions\",\r\n      body,\r\n    };\r\n  }\r\n\r\n  async chatCompletionStream(prompt: OpenAI.ChatCompletionCreateParams) {\r\n    const request = this.connection.chat.completions.create(prompt, {\r\n      stream: true,\r\n    });\r\n    const transformStream = new TransformStream({\r\n      transform(\r\n        chunk: OpenAI.Chat.Completions.ChatCompletionChunk,\r\n        controller\r\n      ) {\r\n        const transformedChunk = {\r\n          choices: chunk.choices.map((choice) => ({ ...choice.delta })),\r\n          usage: chunk.usage?.total_tokens || 0,\r\n        };\r\n        controller.enqueue(transformedChunk);\r\n      },\r\n    });\r\n\r\n    const completion =\r\n      (await request) as Stream<OpenAI.Chat.Completions.ChatCompletionChunk>;\r\n    const transformedStream = completion\r\n      .toReadableStream()\r\n      .pipeThrough(transformStream);\r\n    return Stream.fromReadableStream<ChatCompletionResponse>(\r\n      transformedStream,\r\n      completion.controller\r\n    );\r\n  }\r\n\r\n  async chatCompletion(\r\n    prompt: OpenAI.ChatCompletionCreateParams\r\n  ): Promise<ChatCompletionResponse> {\r\n    const request = this.connection.chat.completions.create(prompt, {\r\n      stream: false,\r\n    });\r\n    const completion =\r\n      (await request) as OpenAI.Chat.Completions.ChatCompletion;\r\n    return {\r\n      choices: completion.choices.map((choice) => ({\r\n        content: choice.message.content,\r\n        refusal: choice.message.refusal,\r\n        role: choice.message.role,\r\n        tool_calls: choice.message.tool_calls,\r\n      })),\r\n      usage: completion.usage?.total_tokens || 0,\r\n    };\r\n  }\r\n\r\n  async deleteFile(fileId: string) {\r\n    await this.connection.files.del(fileId);\r\n  }\r\n\r\n  async createFile(data: string) {\r\n    const file = await this.connection.files.create({\r\n      file: await toFile(Readable.from(data)),\r\n      purpose: \"batch\",\r\n    });\r\n    return file;\r\n  }\r\n\r\n  async createBatch(fileId: string) {\r\n    const batch = await this.connection.batches.create({\r\n      input_file_id: fileId,\r\n      endpoint: \"/v1/chat/completions\",\r\n      completion_window: \"24h\",\r\n    });\r\n    return batch;\r\n  }\r\n\r\n  async retrieveBatch(batchId: string) {\r\n    const batch = await this.connection.batches.retrieve(batchId);\r\n    if (\r\n      batch.status === \"failed\" ||\r\n      batch.status === \"cancelled\" ||\r\n      batch.status === \"expired\"\r\n    )\r\n      throw new Error(`Batch ${batch.status}`);\r\n    if (\r\n      batch.status === \"cancelling\" ||\r\n      batch.status === \"finalizing\" ||\r\n      batch.status === \"validating\" ||\r\n      batch.status === \"in_progress\"\r\n    )\r\n      throw new Error(`Batch ${batch.status}`);\r\n    return await this.retrieveBatchProcess(batch.output_file_id!);\r\n  }\r\n\r\n  private async retrieveBatchProcess(fileId: string) {\r\n    const fileResponse = await this.connection.files.content(fileId);\r\n    const fileContents = await fileResponse.text();\r\n    const lines: BatchProcessResponse[] = fileContents\r\n      .split(\"\\n\")\r\n      .filter((line) => line.trim())\r\n      .map((line) => {\r\n        return JSON.parse(line);\r\n      });\r\n    return lines;\r\n  }\r\n}",
              "start": 23,
              "end": 178,
              "dependencies": [
                {
                  "hash": "7aad1092ab56cc37e30f5ca19f7c6c1ad91d5b98d6246d4dbc9cdf7201a9b18b",
                  "name": "OpenAI",
                  "kind": "ClassDeclaration",
                  "start": 92,
                  "end": 146,
                  "path": "openai"
                },
                {
                  "hash": "461f54c944fcf03fbfcab2fe3e32e5c341f80946925e15975601cb870c14d526",
                  "name": "createOpenAI",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 5,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/createOpenAI.ts"
                },
                {
                  "hash": "60e124fd651ba1b8741f43fd7d71f51c1445835b0dc63070531ec1e3c36ad7f1",
                  "name": "PromptTypes",
                  "kind": "TypeAliasDeclaration",
                  "start": 21,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "978f0b387ff950f3d98f87a6913bbf5a82daf446fb8141c48e169f24f6577bb9",
                  "name": "ChatCompletionCreateParams",
                  "kind": "TypeAliasDeclaration",
                  "start": 715,
                  "end": 715,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/completions.d.ts"
                },
                {
                  "hash": "e60830a1ab877cdd559747fb96b4be4161ff836ed81bc473230546ffa625ec78",
                  "name": "temperature",
                  "kind": "VariableDeclaration",
                  "start": 42,
                  "end": 42,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "c38722aa5552288c4b4625935439cfffda4b8af47c342c9ae147f5f00f1774b8",
                  "name": "top_p",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 43,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "87b49a0695ce06a4cb64ac57055c29a958c3da0e63053b35f28f4a5d78343e35",
                  "name": "PROMPTS",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "8d009ce74f0e9245f533d20516b6452f7d047e96d56ee44690febe1e5dc3458e",
                  "name": "request",
                  "kind": "VariableDeclaration",
                  "start": 82,
                  "end": 84,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "3d9020cb42b3eccbf60338301b57e0dcb84c49165b4e7e75b79f8b6649fa935d",
                  "name": "transformStream",
                  "kind": "VariableDeclaration",
                  "start": 85,
                  "end": 96,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "7bda5eddd7d04a62548137747a9f41cd9696444a951513ecb143d0c114264d6f",
                  "name": "Chat",
                  "kind": "ClassDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/chat.d.ts"
                },
                {
                  "hash": "0a598314995b4bdcbb542a36f1282ec4302ad29724e143826cbc83090767db74",
                  "name": "Completions",
                  "kind": "ClassDeclaration",
                  "start": 9,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/completions.d.ts"
                },
                {
                  "hash": "81ff98c67b6a712ceda407a60b423329e4a59168570a90c29264b358935b2eb2",
                  "name": "ChatCompletionChunk",
                  "kind": "InterfaceDeclaration",
                  "start": 212,
                  "end": 254,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/completions.d.ts"
                },
                {
                  "hash": "1a01ffd3653f7344ee983d156851be87276129cb6f8c694e1e02aa85c6ddb27e",
                  "name": "transformedChunk",
                  "kind": "VariableDeclaration",
                  "start": 90,
                  "end": 93,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "8b446dc97196f6ed43ea935d3df5f08d135c73d8972bdcdd3463c35ac9cc8f67",
                  "name": "completion",
                  "kind": "VariableDeclaration",
                  "start": 98,
                  "end": 99,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "b4007ab6f209cd5519011014bb29c23d0256c91008b878a47b97d1ce9fc0d84a",
                  "name": "Stream",
                  "kind": "ClassDeclaration",
                  "start": 8,
                  "end": 30,
                  "path": "openai/streaming"
                },
                {
                  "hash": "6abf955b3a41b3c4716efda9d90dc36131930085b2285043d54748160ca62dc5",
                  "name": "transformedStream",
                  "kind": "VariableDeclaration",
                  "start": 100,
                  "end": 102,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "f9e6913f50eade35a5a80c0cbd653b4f7a480a8d9ad897396309bc610a59e6a7",
                  "name": "ChatCompletionResponse",
                  "kind": "TypeAliasDeclaration",
                  "start": 45,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/types.ts"
                },
                {
                  "hash": "b0255b00ae21833a17ddd7cc23a794a4ecc884af10704ddde1f530c202105565",
                  "name": "request",
                  "kind": "VariableDeclaration",
                  "start": 112,
                  "end": 114,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "c383c6d90cf131d49b1978e0f36da53b01f7281e96e15e4c8c42981d134ab8aa",
                  "name": "completion",
                  "kind": "VariableDeclaration",
                  "start": 115,
                  "end": 116,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "8e2e2093b3f1fe25311e7b73d71c443ca44907f797089f4d7d4798948cf03427",
                  "name": "ChatCompletion",
                  "kind": "InterfaceDeclaration",
                  "start": 24,
                  "end": 62,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/completions.d.ts"
                },
                {
                  "hash": "8c57e718c6b469eada7cb2e7138973eec46aa15d417be4b2ccad27999537b59e",
                  "name": "file",
                  "kind": "VariableDeclaration",
                  "start": 133,
                  "end": 136,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "cab226a724d7ede172a5cc84083c4949b18859bc45ef147e2e31e4d3c5667176",
                  "name": "toFile",
                  "kind": "FunctionDeclaration",
                  "start": 66,
                  "end": 66,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/uploads.d.ts"
                },
                {
                  "hash": "3373eb388aed41385549eef8bb435aef5fca16f48aae41f36790d8234d5dffd1",
                  "name": "Readable",
                  "kind": "ClassDeclaration",
                  "start": 969,
                  "end": 985,
                  "path": "stream"
                },
                {
                  "hash": "0de2c52112e2977978e855b7c7cf9b2e8dded4bced93fdb914b94da114d3a049",
                  "name": "batch",
                  "kind": "VariableDeclaration",
                  "start": 141,
                  "end": 145,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "16d1c1748a5f9cefbb1fe8f73ee9049cb1266bcfbf14e0a3d3f7d9f9f5e965e7",
                  "name": "batch",
                  "kind": "VariableDeclaration",
                  "start": 150,
                  "end": 150,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "0bbf5fd133f13d369f5fccb822705a5a90345a7a1a4b6b3f83e3ae682f22e810",
                  "name": "fileResponse",
                  "kind": "VariableDeclaration",
                  "start": 168,
                  "end": 168,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "c50d845071d36718e188015f771350ac94b35f03b78272070c3cb183aeb85e43",
                  "name": "fileContents",
                  "kind": "VariableDeclaration",
                  "start": 169,
                  "end": 169,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "05166cf5154ab79584416fff09952d681b13b17ec32208ffd0eeea9d26a62f25",
                  "name": "lines",
                  "kind": "VariableDeclaration",
                  "start": 170,
                  "end": 175,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/OpenAIClient.ts"
                },
                {
                  "hash": "2025e3714044bf49d382e84d18ee65f6039b22ef33f7f81071fd8896372d8fbc",
                  "name": "BatchProcessResponse",
                  "kind": "TypeAliasDeclaration",
                  "start": 3,
                  "end": 43,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/types.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/openai/types.ts",
          "imports": [
            {
              "moduleSpecifier": "openai",
              "namespace": "OpenAI",
              "elements": [
                "OpenAI"
              ],
              "isDefault": true
            }
          ],
          "exports": [
            {
              "name": "BatchProcessResponse",
              "type": "named",
              "from": "",
              "namespace": "BatchProcessResponse"
            },
            {
              "name": "ChatCompletionResponse",
              "type": "named",
              "from": "",
              "namespace": "ChatCompletionResponse"
            }
          ],
          "blocks": [
            {
              "hash": "2025e3714044bf49d382e84d18ee65f6039b22ef33f7f81071fd8896372d8fbc",
              "name": "BatchProcessResponse",
              "kind": "TypeAliasDeclaration",
              "content": "export type BatchProcessResponse = {\r\n  id: string;\r\n  custom_id: string;\r\n  response: {\r\n    status_code: number;\r\n    request_id: string;\r\n    body: {\r\n      id: string;\r\n      object: string;\r\n      created: number;\r\n      model: string;\r\n      choices: {\r\n        index: number;\r\n        message: {\r\n          role: \"assistant\";\r\n          content: string;\r\n          refusal: any;\r\n        };\r\n        logprobs: any;\r\n        finish_reason: \"stop\";\r\n      }[];\r\n      usage: {\r\n        prompt_tokens: number;\r\n        completion_tokens: number;\r\n        total_tokens: number;\r\n        prompt_tokens_details: {\r\n          cached_tokens: number;\r\n          audio_tokens: number;\r\n        };\r\n        completion_tokens_details: {\r\n          reasoning_tokens: number;\r\n          audio_tokens: number;\r\n          accepted_prediction_tokens: number;\r\n          rejected_prediction_tokens: number;\r\n        };\r\n      };\r\n      system_fingerprint: any;\r\n    };\r\n  };\r\n  error: any;\r\n};",
              "start": 3,
              "end": 43,
              "dependencies": []
            },
            {
              "hash": "f9e6913f50eade35a5a80c0cbd653b4f7a480a8d9ad897396309bc610a59e6a7",
              "name": "ChatCompletionResponse",
              "kind": "TypeAliasDeclaration",
              "content": "export type ChatCompletionResponse = {\r\n  choices: {\r\n    content?: string | null;\r\n    refusal?: string | null;\r\n    role?: \"system\" | \"user\" | \"assistant\" | \"tool\";\r\n    tool_calls?: OpenAI.Chat.Completions.ChatCompletionMessageToolCall[];\r\n  }[];\r\n  usage: number;\r\n};",
              "start": 45,
              "end": 53,
              "dependencies": [
                {
                  "hash": "7aad1092ab56cc37e30f5ca19f7c6c1ad91d5b98d6246d4dbc9cdf7201a9b18b",
                  "name": "OpenAI",
                  "kind": "ClassDeclaration",
                  "start": 92,
                  "end": 146,
                  "path": "openai"
                },
                {
                  "hash": "7bda5eddd7d04a62548137747a9f41cd9696444a951513ecb143d0c114264d6f",
                  "name": "Chat",
                  "kind": "ClassDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/chat.d.ts"
                },
                {
                  "hash": "0a598314995b4bdcbb542a36f1282ec4302ad29724e143826cbc83090767db74",
                  "name": "Completions",
                  "kind": "ClassDeclaration",
                  "start": 9,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/completions.d.ts"
                },
                {
                  "hash": "a0ea3858d99d19c4bfce2e0797610d535da74e006ffd36672514d9d873dbbd07",
                  "name": "ChatCompletionMessageToolCall",
                  "kind": "InterfaceDeclaration",
                  "start": 517,
                  "end": 530,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/openai/resources/chat/completions.d.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts",
          "imports": [
            {
              "moduleSpecifier": "redis",
              "elements": [
                "createClient"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "connectRedis",
              "type": "named",
              "from": "",
              "namespace": "connectRedis"
            }
          ],
          "blocks": [
            {
              "hash": "101a84a4bd0a0fbe510f1c97d2dc76232611057ebf280469af7c9e85af30e938",
              "name": "redis",
              "kind": "VariableStatement",
              "content": "let redis: ReturnType<typeof createClient>;",
              "start": 3,
              "end": 3,
              "dependencies": []
            },
            {
              "hash": "377129e33d6a603cd4359a4bc249f4380f874c178aff4a73dfc1671162950da7",
              "name": "connectRedis",
              "kind": "FunctionDeclaration",
              "content": "export async function connectRedis() {\r\n  if (!redis) {\r\n    redis = createClient({\r\n      url: \"redis://localhost:6379\",\r\n      socket: {\r\n        connectTimeout: 10000,\r\n      },\r\n    });\r\n    redis.on(\"ready\", () => {\r\n      console.log(\"Redis client connected and ready\");\r\n    });\r\n    redis.on(\"error\", (err) => {\r\n      console.error(\"Redis error:\", err);\r\n    });\r\n\r\n    // Mantém a conexão viva com ping periódico\r\n    setInterval(() => {\r\n      redis?.ping();\r\n    }, 10000); // Pinga a cada 10 segundos\r\n    await redis.connect();\r\n  }\r\n\r\n  async function getLastVersion(owner: string, repo: string) {\r\n    const versions = (await redis.json.get(`version:${owner}:${repo}`, {\r\n      path: \"$\",\r\n    })) as {\r\n      [commitHash: string]: {\r\n        timestamp: number;\r\n        status?: \"analysing\" | \"analysed\";\r\n      };\r\n    };\r\n\r\n    const [lastestVersion] = Object.entries(versions)\r\n      .filter(([, value]) => value.status === \"analysed\")\r\n      .map(([hash, value]) => ({\r\n        hash,\r\n        timestamp: value.timestamp,\r\n      }))\r\n      .sort((a, b) => a.timestamp - b.timestamp)\r\n      .reverse();\r\n\r\n    return lastestVersion.hash;\r\n  }\r\n\r\n  async function getItemsByKeyPattern<T>(pattern: string) {\r\n    const data: T[] = [];\r\n    let cursor = 0;\r\n\r\n    do {\r\n      const result = await redis.scan(cursor, {\r\n        MATCH: pattern,\r\n        COUNT: 1000,\r\n      });\r\n\r\n      cursor = result.cursor;\r\n      const keys = result.keys;\r\n\r\n      for (const key of keys) {\r\n        const response = await redis.json.get(key);\r\n        data.push({ key, data: response } as T);\r\n      }\r\n    } while (cursor !== 0);\r\n\r\n    return data;\r\n  }\r\n\r\n  return {\r\n    getLastVersion,\r\n    getItemsByKeyPattern,\r\n  };\r\n}",
              "start": 5,
              "end": 75,
              "dependencies": [
                {
                  "hash": "54dc0b48fa4bed41c54c0f1db84b72eca83f8cad77f0d6ae397b16d22b30101f",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 3,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "cdb74107a2dec4306e76af438652008cd3118f9b7981988b6c47eaba25a5a96b",
                  "name": "createClient",
                  "kind": "FunctionDeclaration",
                  "start": 300,
                  "end": 300,
                  "path": "redis"
                },
                {
                  "hash": "ed75e61b1682ab4c4aa3e4b2e85f520f155910e3570c962f9596e32b9ce32d8b",
                  "name": "getLastVersion",
                  "kind": "FunctionDeclaration",
                  "start": 27,
                  "end": 47,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "7923a49bc4861a4a0fb0732a13fca0d2ab0c38c15b987343181a9d4e65c716bb",
                  "name": "versions",
                  "kind": "VariableDeclaration",
                  "start": 28,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "e1daff66aaeaad15d4008560294c91f622bb87a950bc9b0720032f0de333f84c",
                  "name": "getItemsByKeyPattern",
                  "kind": "FunctionDeclaration",
                  "start": 49,
                  "end": 69,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "cf512d7505a8cd56dda4cc53a99a7a7df2242f799a9c8ca03bbd846deb63be83",
                  "name": "data",
                  "kind": "VariableDeclaration",
                  "start": 50,
                  "end": 50,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "dd5696b8894870c4aa54c58d40c7969c8d5a610d91c81ae081d8bdb552adad1a",
                  "name": "cursor",
                  "kind": "VariableDeclaration",
                  "start": 51,
                  "end": 51,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "277a5657e7ba95a6ebe2d150497c1a128cd6bafe2362c87f923c5bfb718d01cc",
                  "name": "result",
                  "kind": "VariableDeclaration",
                  "start": 54,
                  "end": 57,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "d6d16006b12567ba276689f03bee1ed60f6c479fc9b30e8bd27e09f7873a13bf",
                  "name": "keys",
                  "kind": "VariableDeclaration",
                  "start": 60,
                  "end": 60,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "96e82fa753722e37ef29f60591ebb2f28e876fc9add41c43c160c77dcd9d67ae",
                  "name": "key",
                  "kind": "VariableDeclaration",
                  "start": 62,
                  "end": 62,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                },
                {
                  "hash": "71ac9a4f88d5d8bb2a8067e138b02c05da06377d9f418d0309b10960e7c71be3",
                  "name": "response",
                  "kind": "VariableDeclaration",
                  "start": 63,
                  "end": 63,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/index.ts",
          "imports": [],
          "exports": [
            {
              "name": "connectRedis",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/redis/connectRedis.ts",
              "namespace": "connectRedis"
            }
          ],
          "blocks": []
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/backend/src/services/simple-git/index.ts",
          "imports": [
            {
              "moduleSpecifier": "node:path",
              "namespace": "path",
              "elements": [
                "path"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "node:fs",
              "namespace": "fs",
              "elements": [
                "fs"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "simple-git",
              "elements": [
                "simpleGit",
                "CleanOptions",
                "SimpleGitOptions"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "node:crypto",
              "elements": [
                "randomUUID"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "createSimpleGit",
              "type": "named",
              "from": "",
              "namespace": "createSimpleGit"
            }
          ],
          "blocks": [
            {
              "hash": "89c374143786e4b469786e46327763f23077c370c281b24efa524bba41b4bf91",
              "name": "options",
              "kind": "VariableStatement",
              "content": "const options: Partial<SimpleGitOptions> = {\r\n  binary: \"git\",\r\n  maxConcurrentProcesses: 6,\r\n  trimmed: false,\r\n};",
              "start": 6,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "a86eee6bdac544a558ca4b7996150dacb16467efce2a2e334db2b5a1edfbe7c3",
              "name": "createSimpleGit",
              "kind": "VariableStatement",
              "content": "export const createSimpleGit = async ({\r\n  basePath = path.resolve(process.cwd(), \"./data/repos\"),\r\n}: {\r\n  basePath?: string;\r\n}) => {\r\n  const sg = simpleGit({ ...options });\r\n  await sg.clean(CleanOptions.FORCE);\r\n\r\n  async function getFilesDiff(commitHash: string, previousCommitHash: string) {\r\n    await sg.cwd(path.resolve(basePath, commitHash));\r\n\r\n    const diffSummary = await sg.diff([\r\n      \"--name-status\",\r\n      \"-M\",\r\n      `${previousCommitHash}..${commitHash}`,\r\n    ]);\r\n\r\n    const lines = diffSummary.split(\"\\n\");\r\n\r\n    const modifiedFiles: {\r\n      filePath: string;\r\n      status: \"A\" | \"I\" | \"R\" | \"M\";\r\n    }[] = lines\r\n      .map((line) => {\r\n        const [status, filePath] = line.split(\"\\t\");\r\n        return {\r\n          status,\r\n          filePath,\r\n        } as {\r\n          filePath: string;\r\n          status: \"A\" | \"I\" | \"R\" | \"M\";\r\n        };\r\n      })\r\n      .filter(({ filePath }) => Boolean(filePath));\r\n\r\n    const tsFiles = modifiedFiles.filter(({ filePath }) => {\r\n      return filePath.endsWith(\".ts\") || filePath.endsWith(\".tsx\");\r\n    });\r\n\r\n    const docFiles = modifiedFiles.filter(\r\n      ({ filePath }) => filePath.endsWith(\".md\") || filePath.endsWith(\".mdx\")\r\n    );\r\n\r\n    return { tsFiles, docFiles };\r\n  }\r\n\r\n  async function clone(url: string) {\r\n    try {\r\n      const repositoriePath = path.resolve(basePath, randomUUID());\r\n\r\n      if (fs.existsSync(repositoriePath))\r\n        fs.rmSync(repositoriePath, { force: true, recursive: true });\r\n\r\n      await sg.clone(url, repositoriePath);\r\n\r\n      await sg.cwd(repositoriePath);\r\n      const { latest } = await sg.log();\r\n\r\n      const newPath = path.resolve(basePath, latest!.hash);\r\n\r\n      if (fs.existsSync(newPath)) {\r\n        fs.rmSync(newPath, { force: true, recursive: true });\r\n      }\r\n      fs.renameSync(repositoriePath, newPath);\r\n\r\n      return latest!.hash;\r\n    } catch (error) {\r\n      console.error({ message: \"simple-git\", error });\r\n      return \"\";\r\n    }\r\n  }\r\n\r\n  async function pull(hash: string) {\r\n    const from = path.resolve(basePath, hash);\r\n    const to = path.resolve(basePath, randomUUID());\r\n\r\n    fs.cpSync(from, to, { recursive: true });\r\n\r\n    await sg.cwd(to);\r\n    await sg.pull();\r\n\r\n    const lastCommitHash = (await sg.log()).latest!.hash;\r\n    if (fs.existsSync(path.resolve(basePath, lastCommitHash))) {\r\n      fs.rmSync(to, { force: true, recursive: true });\r\n    } else {\r\n      fs.renameSync(to, path.resolve(basePath, lastCommitHash));\r\n    }\r\n\r\n    return lastCommitHash;\r\n  }\r\n\r\n  return {\r\n    getFilesDiff,\r\n    clone,\r\n    firstCommit: await sg.firstCommit(),\r\n    core: sg,\r\n    pull,\r\n  };\r\n};",
              "start": 12,
              "end": 110,
              "dependencies": []
            }
          ]
        }
      ]
    }
  },
  {
    "project": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend",
    "analysis": {
      "modules": [
        "@hookform/resolvers",
        "@radix-ui/react-accordion",
        "@radix-ui/react-alert-dialog",
        "@radix-ui/react-aspect-ratio",
        "@radix-ui/react-avatar",
        "@radix-ui/react-checkbox",
        "@radix-ui/react-collapsible",
        "@radix-ui/react-context-menu",
        "@radix-ui/react-dialog",
        "@radix-ui/react-dropdown-menu",
        "@radix-ui/react-hover-card",
        "@radix-ui/react-icons",
        "@radix-ui/react-label",
        "@radix-ui/react-menubar",
        "@radix-ui/react-navigation-menu",
        "@radix-ui/react-popover",
        "@radix-ui/react-progress",
        "@radix-ui/react-radio-group",
        "@radix-ui/react-scroll-area",
        "@radix-ui/react-select",
        "@radix-ui/react-separator",
        "@radix-ui/react-slider",
        "@radix-ui/react-slot",
        "@radix-ui/react-switch",
        "@radix-ui/react-tabs",
        "@radix-ui/react-toast",
        "@radix-ui/react-toggle",
        "@radix-ui/react-toggle-group",
        "@radix-ui/react-tooltip",
        "class-variance-authority",
        "clsx",
        "cmdk",
        "date-fns",
        "embla-carousel-react",
        "input-otp",
        "jsonwebtoken",
        "lucide-react",
        "next",
        "next-auth",
        "next-themes",
        "octokit",
        "react",
        "react-day-picker",
        "react-dom",
        "react-hook-form",
        "react-icons",
        "react-resizable-panels",
        "recharts",
        "redis",
        "sonner",
        "tailwind-merge",
        "tailwindcss-animate",
        "use-debounce",
        "vaul",
        "zod"
      ],
      "fileAnalysis": [
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/tailwind.config.ts",
          "imports": [
            {
              "moduleSpecifier": "tailwindcss",
              "elements": [
                "Config"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "default",
              "type": "default",
              "from": "",
              "namespace": "config"
            }
          ],
          "blocks": [
            {
              "hash": "fe0003093611fb1a85ef2f2740f1b9f2e8de935b0f2fa8d8a08d49d5933e388d",
              "name": "config",
              "kind": "VariableStatement",
              "content": "const config: Config = {\r\n    darkMode: [\"class\"],\r\n    content: [\r\n    \"./src/pages/**/*.{js,ts,jsx,tsx,mdx}\",\r\n    \"./src/components/**/*.{js,ts,jsx,tsx,mdx}\",\r\n    \"./src/app/**/*.{js,ts,jsx,tsx,mdx}\",\r\n  ],\r\n  theme: {\r\n  \textend: {\r\n  \t\tcolors: {\r\n  \t\t\tbackground: 'hsl(var(--background))',\r\n  \t\t\tforeground: 'hsl(var(--foreground))',\r\n  \t\t\tcard: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--card))',\r\n  \t\t\t\tforeground: 'hsl(var(--card-foreground))'\r\n  \t\t\t},\r\n  \t\t\tpopover: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--popover))',\r\n  \t\t\t\tforeground: 'hsl(var(--popover-foreground))'\r\n  \t\t\t},\r\n  \t\t\tprimary: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--primary))',\r\n  \t\t\t\tforeground: 'hsl(var(--primary-foreground))'\r\n  \t\t\t},\r\n  \t\t\tsecondary: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--secondary))',\r\n  \t\t\t\tforeground: 'hsl(var(--secondary-foreground))'\r\n  \t\t\t},\r\n  \t\t\tmuted: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--muted))',\r\n  \t\t\t\tforeground: 'hsl(var(--muted-foreground))'\r\n  \t\t\t},\r\n  \t\t\taccent: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--accent))',\r\n  \t\t\t\tforeground: 'hsl(var(--accent-foreground))'\r\n  \t\t\t},\r\n  \t\t\tdestructive: {\r\n  \t\t\t\tDEFAULT: 'hsl(var(--destructive))',\r\n  \t\t\t\tforeground: 'hsl(var(--destructive-foreground))'\r\n  \t\t\t},\r\n  \t\t\tborder: 'hsl(var(--border))',\r\n  \t\t\tinput: 'hsl(var(--input))',\r\n  \t\t\tring: 'hsl(var(--ring))',\r\n  \t\t\tchart: {\r\n  \t\t\t\t'1': 'hsl(var(--chart-1))',\r\n  \t\t\t\t'2': 'hsl(var(--chart-2))',\r\n  \t\t\t\t'3': 'hsl(var(--chart-3))',\r\n  \t\t\t\t'4': 'hsl(var(--chart-4))',\r\n  \t\t\t\t'5': 'hsl(var(--chart-5))'\r\n  \t\t\t}\r\n  \t\t},\r\n  \t\tborderRadius: {\r\n  \t\t\tlg: 'var(--radius)',\r\n  \t\t\tmd: 'calc(var(--radius) - 2px)',\r\n  \t\t\tsm: 'calc(var(--radius) - 4px)'\r\n  \t\t},\r\n  \t\tkeyframes: {\r\n  \t\t\t'accordion-down': {\r\n  \t\t\t\tfrom: {\r\n  \t\t\t\t\theight: '0'\r\n  \t\t\t\t},\r\n  \t\t\t\tto: {\r\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\r\n  \t\t\t\t}\r\n  \t\t\t},\r\n  \t\t\t'accordion-up': {\r\n  \t\t\t\tfrom: {\r\n  \t\t\t\t\theight: 'var(--radix-accordion-content-height)'\r\n  \t\t\t\t},\r\n  \t\t\t\tto: {\r\n  \t\t\t\t\theight: '0'\r\n  \t\t\t\t}\r\n  \t\t\t}\r\n  \t\t},\r\n  \t\tanimation: {\r\n  \t\t\t'accordion-down': 'accordion-down 0.2s ease-out',\r\n  \t\t\t'accordion-up': 'accordion-up 0.2s ease-out'\r\n  \t\t}\r\n  \t}\r\n  },\r\n  plugins: [require(\"tailwindcss-animate\")],\r\n};",
              "start": 3,
              "end": 84,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/middleware.ts",
          "imports": [],
          "exports": [
            {
              "name": "middleware",
              "type": "named",
              "from": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "namespace": "auth"
            }
          ],
          "blocks": []
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts",
          "imports": [
            {
              "moduleSpecifier": "next/server",
              "elements": [
                "NextRequest"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "node:crypto",
              "namespace": "crypto",
              "elements": [
                "crypto"
              ],
              "isDefault": true
            }
          ],
          "exports": [
            {
              "name": "encrypt",
              "type": "named",
              "from": "",
              "namespace": "encrypt"
            },
            {
              "name": "decrypt",
              "type": "named",
              "from": "",
              "namespace": "decrypt"
            },
            {
              "name": "validateSignature",
              "type": "named",
              "from": "",
              "namespace": "validateSignature"
            }
          ],
          "blocks": [
            {
              "hash": "41520605c685c1b847790b76816353953a688a741ca7f1dafd6ad1157648c4a2",
              "name": "GITHUB_SECRET",
              "kind": "VariableStatement",
              "content": "const GITHUB_SECRET = process.env.GITHUB_WEBHOOK_SECRET;",
              "start": 6,
              "end": 6,
              "dependencies": []
            },
            {
              "hash": "ac072f117d5ea9da1048d5fc4142bae5847fae697edaa2ac1b78b6f4ad655049",
              "name": "ENCRYPTION_KEY",
              "kind": "VariableStatement",
              "content": "const ENCRYPTION_KEY = process.env.GITHUB_WEBHOOK_SECRET!;",
              "start": 7,
              "end": 7,
              "dependencies": []
            },
            {
              "hash": "5bef13b574bacfb4124cf94c6a2b787049900d37e5b2c7e6f10d15becc39349f",
              "name": "IV_LENGTH",
              "kind": "VariableStatement",
              "content": "const IV_LENGTH = 16;",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "a8458ce25171bd51cb267db9870cc501e7c3d1b219fae43740bc0ddbdc762a45",
              "name": "encrypt",
              "kind": "FunctionDeclaration",
              "content": "export async function encrypt(text: string) {\r\n  const iv = crypto.randomBytes(IV_LENGTH);\r\n  const cipher = crypto.createCipheriv(\r\n    \"aes-256-cbc\",\r\n    Buffer.from(ENCRYPTION_KEY, \"hex\"),\r\n    iv\r\n  );\r\n  const encrypted = Buffer.concat([cipher.update(text), cipher.final()]);\r\n\r\n  return iv.toString(\"hex\") + \":\" + encrypted.toString(\"hex\");\r\n}",
              "start": 10,
              "end": 20,
              "dependencies": [
                {
                  "hash": "03d9c57168a559fd341612d3f2f50668062dc97ac6fe0336a2dd4116531592eb",
                  "name": "iv",
                  "kind": "VariableDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "c753643c942d21339defaf313d7a098af18a6052e39c681b404ae9b1f0bff013",
                  "name": "IV_LENGTH",
                  "kind": "VariableDeclaration",
                  "start": 8,
                  "end": 8,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "0834f8903c84f8db4bed25dc712841c0dc84d3862e374aa752b7017df81ee3cd",
                  "name": "cipher",
                  "kind": "VariableDeclaration",
                  "start": 12,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "8f32bc75a178426a4199d57796c140f7c802ef2daf40b1f8e496b7112a9349fc",
                  "name": "ENCRYPTION_KEY",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 7,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "5c9ea3e5d05ed5bb85f6e171a7db6220756e1750e81b4511b80e0742bd482f3e",
                  "name": "encrypted",
                  "kind": "VariableDeclaration",
                  "start": 17,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            },
            {
              "hash": "01f344783744ec0a2a92f0a0265504c8ed913371d8ba103d47aae2f0f0421f35",
              "name": "decrypt",
              "kind": "FunctionDeclaration",
              "content": "export async function decrypt(text: string) {\r\n  const textParts = text.split(\":\");\r\n  const msgIv = textParts.shift() || \"\";\r\n  const iv = Buffer.from(msgIv, \"hex\");\r\n  const encryptedText = Buffer.from(textParts.join(\":\"), \"hex\");\r\n  const decipher = crypto.createDecipheriv(\r\n    \"aes-256-cbc\",\r\n    Buffer.from(ENCRYPTION_KEY, \"hex\"),\r\n    iv\r\n  );\r\n  const decrypted = Buffer.concat([\r\n    decipher.update(encryptedText),\r\n    decipher.final(),\r\n  ]);\r\n  return decrypted.toString();\r\n}",
              "start": 22,
              "end": 37,
              "dependencies": [
                {
                  "hash": "6842adb7a9f25f2252a66aeab36d5f71a113f97292fd864cd9bf9e4b6ff6c514",
                  "name": "textParts",
                  "kind": "VariableDeclaration",
                  "start": 23,
                  "end": 23,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "401a4cd1fdedbfd9bf922e7e437b442a31ccbf7772bc9a83b9e8540584427684",
                  "name": "msgIv",
                  "kind": "VariableDeclaration",
                  "start": 24,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "01a3af5687bb9f2cc241c93fa18e32d6a4a3fec61b236608b4afd5e9fb0be257",
                  "name": "iv",
                  "kind": "VariableDeclaration",
                  "start": 25,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "7e77b7ade3ea78e2af1fcc3a643e78fea45d6b53934eef877f5f0950738cc1d7",
                  "name": "encryptedText",
                  "kind": "VariableDeclaration",
                  "start": 26,
                  "end": 26,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "d6863eceb1b06b3430ab049e1b64832693eb46520d864d6043e6345f1e1a3421",
                  "name": "decipher",
                  "kind": "VariableDeclaration",
                  "start": 27,
                  "end": 31,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "8f32bc75a178426a4199d57796c140f7c802ef2daf40b1f8e496b7112a9349fc",
                  "name": "ENCRYPTION_KEY",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 7,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "03dcb82cbca104a28645f690ac10de65a99d3c201992a42d49845df3b5d5ae08",
                  "name": "decrypted",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            },
            {
              "hash": "0ec7fa5d7f13df9a5c987f6f005cd225e08f0a0c288e9e8e12d5d1e9d9040fff",
              "name": "validateSignature",
              "kind": "FunctionDeclaration",
              "content": "export async function validateSignature(req: NextRequest, payload: string) {\r\n  const signature = req.headers.get(\"x-hub-signature-256\")!;\r\n  const hmac = crypto.createHmac(\"sha256\", GITHUB_SECRET!);\r\n  const digest = \"sha256=\" + hmac.update(payload).digest(\"hex\");\r\n  return crypto.timingSafeEqual(Buffer.from(signature), Buffer.from(digest));\r\n}",
              "start": 40,
              "end": 45,
              "dependencies": [
                {
                  "hash": "c242bc40523d01324291c5aa26480c408c3d0e5bccbb224cdce4b366e1aec490",
                  "name": "signature",
                  "kind": "VariableDeclaration",
                  "start": 41,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "4709343baca143a7a6628aa57c83b5eba4d3f7b4ca20e0003c11e681b5829719",
                  "name": "hmac",
                  "kind": "VariableDeclaration",
                  "start": 42,
                  "end": 42,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "e7feacbb44f118a3d404d6a30ab4a31f10c3242d9b1348fc54ad44e71527d104",
                  "name": "GITHUB_SECRET",
                  "kind": "VariableDeclaration",
                  "start": 6,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "0742d9319d3f226b2f656675ff674060c38db18f0e08adf0b13977fffc01526d",
                  "name": "digest",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 43,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts",
          "imports": [
            {
              "moduleSpecifier": "octokit",
              "elements": [
                "Octokit"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "jsonwebtoken",
              "namespace": "jwt",
              "elements": [
                "jwt"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/schemas.ts",
              "elements": [
                "Installation"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "generateJWT",
              "type": "named",
              "from": "",
              "namespace": "generateJWT"
            },
            {
              "name": "getListOrgsForUser",
              "type": "named",
              "from": "",
              "namespace": "getListOrgsForUser"
            },
            {
              "name": "getUserReposForInstallation",
              "type": "named",
              "from": "",
              "namespace": "getUserReposForInstallation"
            },
            {
              "name": "getAppInstallations",
              "type": "named",
              "from": "",
              "namespace": "getAppInstallations"
            },
            {
              "name": "getRepository",
              "type": "named",
              "from": "",
              "namespace": "getRepository"
            },
            {
              "name": "getUserInstalledRepos",
              "type": "named",
              "from": "",
              "namespace": "getUserInstalledRepos"
            }
          ],
          "blocks": [
            {
              "hash": "3054295dc1451908df416ff0db0e9496426a26c5afa4040f1a611783ed173ef3",
              "name": "generateJWT",
              "kind": "FunctionDeclaration",
              "content": "export async function generateJWT() {\r\n  const payload = {\r\n    iat: Math.floor(Date.now() / 1000),\r\n    exp: Math.floor(Date.now() / 1000) + 60,\r\n    iss: process.env.AUTH_GITHUB_ID,\r\n  };\r\n\r\n  return jwt.sign(payload, process.env.AUTH_GITHUB_PRIVATE_KEY!, {\r\n    algorithm: \"RS256\",\r\n  });\r\n}",
              "start": 9,
              "end": 19,
              "dependencies": [
                {
                  "hash": "fe26416403cca5a13ab803bb789f45e3369cf52f5a3aff713bc400b23944a9a2",
                  "name": "payload",
                  "kind": "VariableDeclaration",
                  "start": 10,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "52c147d7acc30b2322fd668ed8fd9ea824385e843fe7167f85554d9f115333d7",
                  "name": "sign",
                  "kind": "FunctionDeclaration",
                  "start": 172,
                  "end": 176,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/node_modules/@types/jsonwebtoken/index.d.ts"
                }
              ]
            },
            {
              "hash": "f888f3e38c43a94eabf269cf83a161ef434bd6bdac7c21c5b565ee99f02c55b9",
              "name": "getListOrgsForUser",
              "kind": "FunctionDeclaration",
              "content": "export async function getListOrgsForUser(access_token: string) {\r\n  if (!access_token) return [];\r\n  try {\r\n    const octokit = new Octokit({\r\n      auth: access_token,\r\n    });\r\n    const orgs = await octokit.rest.orgs.listForAuthenticatedUser();\r\n\r\n    return orgs.data.map((orgs) => ({\r\n      id: orgs.id,\r\n      name: orgs.login,\r\n      url: orgs.url,\r\n    }));\r\n  } catch (error) {\r\n    console.error(\"getListOrgsForUser\", error);\r\n    return [];\r\n  }\r\n}",
              "start": 21,
              "end": 38,
              "dependencies": [
                {
                  "hash": "c3f4bcaa934dc628727defef2f70ca7dff755271fe32cf4563169e4218d53d7c",
                  "name": "octokit",
                  "kind": "VariableDeclaration",
                  "start": 24,
                  "end": 26,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "eb0ec8b9f016e4b12c6e5503466563afc064d6216e8a30fe017ced704588051c",
                  "name": "Octokit",
                  "kind": "VariableDeclaration",
                  "start": 4,
                  "end": 10,
                  "path": "octokit"
                },
                {
                  "hash": "0aebadb4c561b38603b97965f454a78355452d6b1584c71a8079bc2f2baeedd7",
                  "name": "Octokit",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "octokit"
                },
                {
                  "hash": "ff08d2af51254118486c01bb12ae8d107c640632aa5704c643f59a0055b83630",
                  "name": "orgs",
                  "kind": "VariableDeclaration",
                  "start": 27,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "b0a54fcf1e2928d3ee50f5b733348892f0842938f4243613fb9daf34d434c355",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 34,
                  "end": 34,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                }
              ]
            },
            {
              "hash": "d3ddd2d46ba900b2664468951defe532c0ed143787deccb234e75bb54010a271",
              "name": "getUserReposForInstallation",
              "kind": "FunctionDeclaration",
              "content": "export async function getUserReposForInstallation(\r\n  access_token: string,\r\n  installation_id: number\r\n) {\r\n  try {\r\n    const octokit = new Octokit({\r\n      auth: access_token,\r\n    });\r\n\r\n    const repos =\r\n      await octokit.rest.apps.listInstallationReposForAuthenticatedUser({\r\n        installation_id,\r\n      });\r\n\r\n    return repos.data.repositories\r\n      .map((repo) => ({\r\n        id: repo.id,\r\n        name: repo.name,\r\n        description: repo.description,\r\n        owner: repo.owner.login,\r\n        created_at: repo.created_at,\r\n        updated_at: repo.updated_at,\r\n      }))\r\n      .sort((first, second) => {\r\n        const first_date = new Date(first.updated_at || \"\");\r\n        const second_date = new Date(second.updated_at || \"\");\r\n        return second_date.getTime() - first_date.getTime();\r\n      });\r\n  } catch (error) {\r\n    console.error(error);\r\n    return [];\r\n  }\r\n}",
              "start": 58,
              "end": 90,
              "dependencies": [
                {
                  "hash": "c3f4bcaa934dc628727defef2f70ca7dff755271fe32cf4563169e4218d53d7c",
                  "name": "octokit",
                  "kind": "VariableDeclaration",
                  "start": 63,
                  "end": 65,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "eb0ec8b9f016e4b12c6e5503466563afc064d6216e8a30fe017ced704588051c",
                  "name": "Octokit",
                  "kind": "VariableDeclaration",
                  "start": 4,
                  "end": 10,
                  "path": "octokit"
                },
                {
                  "hash": "0aebadb4c561b38603b97965f454a78355452d6b1584c71a8079bc2f2baeedd7",
                  "name": "Octokit",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "octokit"
                },
                {
                  "hash": "3b77f6ec24bcf5569b4e608cb1493f2b60a3fb3ae0a46f4396d581fab5b63ee2",
                  "name": "repos",
                  "kind": "VariableDeclaration",
                  "start": 67,
                  "end": 70,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "1d5913d58dc7cb81b5296caddb97797c6e15c47bc4ded14a6303fc76fbedafda",
                  "name": "first_date",
                  "kind": "VariableDeclaration",
                  "start": 82,
                  "end": 82,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "5f35b26ad7079d705ed62a47f71a35a4a38185bab39a8db70553376f973d07ef",
                  "name": "second_date",
                  "kind": "VariableDeclaration",
                  "start": 83,
                  "end": 83,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "b0a54fcf1e2928d3ee50f5b733348892f0842938f4243613fb9daf34d434c355",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 86,
                  "end": 86,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                }
              ]
            },
            {
              "hash": "b40251a577fb43ce8ab1134a4c952b3eb9a47bd6a10ef508fdead3c15f1373c6",
              "name": "getAppInstallations",
              "kind": "FunctionDeclaration",
              "content": "export async function getAppInstallations() {\r\n  const jwtToken = await generateJWT();\r\n\r\n  const octokit = new Octokit({\r\n    auth: jwtToken,\r\n  });\r\n\r\n  const installs = await octokit.rest.apps.listInstallations();\r\n\r\n  return installs.data.map((install) => ({\r\n    id: install.id,\r\n    owner: install.account?.login,\r\n    owner_id: install.account?.id,\r\n    type: install.account?.type,\r\n    installation_type: install.repository_selection,\r\n  }));\r\n}",
              "start": 106,
              "end": 122,
              "dependencies": [
                {
                  "hash": "6bc291e225ab201c7b007e80a0329a8307963674a946d70915bae80bf5592249",
                  "name": "jwtToken",
                  "kind": "VariableDeclaration",
                  "start": 107,
                  "end": 107,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "3054295dc1451908df416ff0db0e9496426a26c5afa4040f1a611783ed173ef3",
                  "name": "generateJWT",
                  "kind": "FunctionDeclaration",
                  "start": 9,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "312997799072004dee05db64718cc42b868050dc02903d48c7212df54e48e4c9",
                  "name": "octokit",
                  "kind": "VariableDeclaration",
                  "start": 109,
                  "end": 111,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "eb0ec8b9f016e4b12c6e5503466563afc064d6216e8a30fe017ced704588051c",
                  "name": "Octokit",
                  "kind": "VariableDeclaration",
                  "start": 4,
                  "end": 10,
                  "path": "octokit"
                },
                {
                  "hash": "0aebadb4c561b38603b97965f454a78355452d6b1584c71a8079bc2f2baeedd7",
                  "name": "Octokit",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "octokit"
                },
                {
                  "hash": "fe0c3af15f2324593c61832050af23ac86a91b7df549e6595da0f0ca880d702e",
                  "name": "installs",
                  "kind": "VariableDeclaration",
                  "start": 113,
                  "end": 113,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                }
              ]
            },
            {
              "hash": "ed4a82a899c1e53499e6509d8da632eb6b35f516c183efdaa5862dd2cfdf176e",
              "name": "getRepository",
              "kind": "FunctionDeclaration",
              "content": "export async function getRepository(\r\n  access_token: string,\r\n  owner: string,\r\n  repo: string\r\n) {\r\n  const octokit = new Octokit({\r\n    auth: access_token,\r\n  });\r\n\r\n  const fetched = await octokit.rest.repos.get({\r\n    owner,\r\n    repo,\r\n  });\r\n\r\n  return {\r\n    id: fetched.data.id,\r\n    name: fetched.data.name,\r\n    description: fetched.data.description,\r\n    owner: fetched.data.owner.login,\r\n    created_at: fetched.data.created_at,\r\n    updated_at: fetched.data.updated_at,\r\n  };\r\n}",
              "start": 124,
              "end": 146,
              "dependencies": [
                {
                  "hash": "8fbfd1e39c0ddcee36350055eb65b111084a56b4bb2b88e897bb0568e12eef6a",
                  "name": "octokit",
                  "kind": "VariableDeclaration",
                  "start": 129,
                  "end": 131,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "eb0ec8b9f016e4b12c6e5503466563afc064d6216e8a30fe017ced704588051c",
                  "name": "Octokit",
                  "kind": "VariableDeclaration",
                  "start": 4,
                  "end": 10,
                  "path": "octokit"
                },
                {
                  "hash": "0aebadb4c561b38603b97965f454a78355452d6b1584c71a8079bc2f2baeedd7",
                  "name": "Octokit",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "octokit"
                },
                {
                  "hash": "e4617ab2397cc1ff697334446d90a4ceedec6a46cc706cd05782b6001df64ac2",
                  "name": "fetched",
                  "kind": "VariableDeclaration",
                  "start": 133,
                  "end": 136,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                }
              ]
            },
            {
              "hash": "906abbc7290c991d75f39a27ffdc29562905ffcc3e0d546871780a2c63839c9f",
              "name": "getUserInstalledRepos",
              "kind": "FunctionDeclaration",
              "content": "export async function getUserInstalledRepos(\r\n  access_token: string = \"\",\r\n  {\r\n    search = \"\",\r\n    owner = \"all\",\r\n  }: {\r\n    owner?: string;\r\n    search?: string;\r\n  }\r\n): Promise<Installation[]> {\r\n  if (!access_token) return [];\r\n  let repos: Installation[] = [];\r\n  try {\r\n    const installations = await getAppInstallations();\r\n\r\n    for (const installation of installations) {\r\n      const reposUser = await getUserReposForInstallation(\r\n        access_token,\r\n        installation.id\r\n      );\r\n      for (const repoUser of reposUser) {\r\n        repos.push({\r\n          id: installation.id,\r\n          repository_id: repoUser.id,\r\n          name: repoUser.name,\r\n          owner: repoUser.owner,\r\n          full_name: `${repoUser.owner}/${repoUser.name}`,\r\n        });\r\n      }\r\n    }\r\n\r\n    if (owner !== \"all\") {\r\n      repos = repos.filter((repo) => {\r\n        return repo.owner == owner;\r\n      });\r\n    }\r\n\r\n    if (search) {\r\n      repos = repos.filter((repo) => repo.name.includes(search));\r\n    }\r\n\r\n    return repos;\r\n  } catch (error) {\r\n    console.error(error);\r\n    return [];\r\n  }\r\n}",
              "start": 148,
              "end": 194,
              "dependencies": [
                {
                  "hash": "e5a1c6b72053d296fd036f5bc8406ac8ed13c3b3da45dd4491d574c8097b0b4e",
                  "name": "Installation",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/schemas.ts"
                },
                {
                  "hash": "b2c321f2962b3da7f1e82b079de2814b18f0193a16eb599aa6382a25f78bcfdc",
                  "name": "repos",
                  "kind": "VariableDeclaration",
                  "start": 159,
                  "end": 159,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "289593debf063de2d1a3581e1727d0457040d4bcdb79ba62d9f8703d0992803f",
                  "name": "installations",
                  "kind": "VariableDeclaration",
                  "start": 161,
                  "end": 161,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "b40251a577fb43ce8ab1134a4c952b3eb9a47bd6a10ef508fdead3c15f1373c6",
                  "name": "getAppInstallations",
                  "kind": "FunctionDeclaration",
                  "start": 106,
                  "end": 122,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "8e985724f7f3c91748294f4edbfd0796d5349e3ea7aa527bd1fc8e975848a17c",
                  "name": "installation",
                  "kind": "VariableDeclaration",
                  "start": 163,
                  "end": 163,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "6255347b42109d26eb5e0f96892431f4e10d93aedb503617d24da047e83b83b4",
                  "name": "reposUser",
                  "kind": "VariableDeclaration",
                  "start": 164,
                  "end": 167,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "d3ddd2d46ba900b2664468951defe532c0ed143787deccb234e75bb54010a271",
                  "name": "getUserReposForInstallation",
                  "kind": "FunctionDeclaration",
                  "start": 58,
                  "end": 90,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "9e9cc7a15cc73c9081423a8a840b7aed0bf8c8c279b3c393c1061e2a74a85e98",
                  "name": "repoUser",
                  "kind": "VariableDeclaration",
                  "start": 168,
                  "end": 168,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "b0a54fcf1e2928d3ee50f5b733348892f0842938f4243613fb9daf34d434c355",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 190,
                  "end": 190,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts",
              "elements": [
                "RepositoryConfig",
                "repositoryConfigSchema"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts",
              "elements": [
                "connectRedis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts",
              "elements": [
                "decrypt",
                "encrypt"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "saveRepositoryConfigAction",
              "type": "named",
              "from": "",
              "namespace": "saveRepositoryConfigAction"
            },
            {
              "name": "getRepositoryConfigAction",
              "type": "named",
              "from": "",
              "namespace": "getRepositoryConfigAction"
            }
          ],
          "blocks": [
            {
              "hash": "1fdfe13beeb627fc9f06ce786f61dfc2edb22b67f396abd6d9b7c08040edb6f1",
              "name": "saveRepositoryConfigAction",
              "kind": "FunctionDeclaration",
              "content": "export async function saveRepositoryConfigAction(\r\n  id: number,\r\n  owner: string,\r\n  values: RepositoryConfig\r\n) {\r\n  const parse = repositoryConfigSchema.safeParse(values);\r\n\r\n  if (parse.success) {\r\n    const redis = await connectRedis();\r\n    await redis.json.merge(`user:${owner}`, `$`, {\r\n      repositories: {\r\n        [id]: {\r\n          ...parse.data,\r\n          api_token: await encrypt(parse.data.api_token),\r\n        },\r\n      },\r\n    });\r\n  }\r\n}",
              "start": 10,
              "end": 28,
              "dependencies": [
                {
                  "hash": "8233d091da4a59c9880178f2b51bd62344fa6f0c71e571beb2a190a67b41fdfa",
                  "name": "RepositoryConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts"
                },
                {
                  "hash": "5ffb73ce9d00125b21968bcad7259cebce5365ea46ce8b8a47ee62bb7d801baf",
                  "name": "parse",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "f0c582db269286f99e24e28b508a8fb725a49f86caa7cf700421df725949ce30",
                  "name": "repositoryConfigSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts"
                },
                {
                  "hash": "408aac7d39d642867af5bc021627cdfbdb9d802c9e88d68a632e37943d11b647",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 18,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "89223ef8a1478876883543191c72207fb92f756ac68710f6f45311d618b51031",
                  "name": "connectRedis",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts"
                },
                {
                  "hash": "a8458ce25171bd51cb267db9870cc501e7c3d1b219fae43740bc0ddbdc762a45",
                  "name": "encrypt",
                  "kind": "FunctionDeclaration",
                  "start": 10,
                  "end": 20,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            },
            {
              "hash": "cdc2fec79261e2c58b636e20a54c97341ccca1184f1f1518efcf1635994e0949",
              "name": "getRepositoryConfigAction",
              "kind": "FunctionDeclaration",
              "content": "export async function getRepositoryConfigAction(\r\n  owner: string,\r\n  id: number\r\n): Promise<RepositoryConfig | null> {\r\n  const redis = await connectRedis();\r\n  const redisData = await redis.json.get(`user:${owner}`, {\r\n    path: `$.repositories['${id}']`,\r\n  });\r\n  const config = redisData as RepositoryConfig;\r\n\r\n  if (!config) return null;\r\n\r\n  const reponseData = {\r\n    ...config,\r\n    api_token: config.api_token ? await decrypt(config.api_token) : undefined,\r\n  };\r\n\r\n  return reponseData as RepositoryConfig;\r\n}",
              "start": 30,
              "end": 48,
              "dependencies": [
                {
                  "hash": "8233d091da4a59c9880178f2b51bd62344fa6f0c71e571beb2a190a67b41fdfa",
                  "name": "RepositoryConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts"
                },
                {
                  "hash": "408aac7d39d642867af5bc021627cdfbdb9d802c9e88d68a632e37943d11b647",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 34,
                  "end": 34,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "89223ef8a1478876883543191c72207fb92f756ac68710f6f45311d618b51031",
                  "name": "connectRedis",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts"
                },
                {
                  "hash": "a852a6163f49e0ad1866bd48ffad230f7b51a341b7364b2b7117b1ab1306b55f",
                  "name": "redisData",
                  "kind": "VariableDeclaration",
                  "start": 35,
                  "end": 37,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "2b06a49d4307a51da6491c822af8412d5f64eeff583ab83c93073c80b01d0ec5",
                  "name": "config",
                  "kind": "VariableDeclaration",
                  "start": 38,
                  "end": 38,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "d70e971689bd9a7ac5976f217d478ec8b533b9d3f29dc7599d95b6a4609b8fa9",
                  "name": "reponseData",
                  "kind": "VariableDeclaration",
                  "start": 42,
                  "end": 45,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "01f344783744ec0a2a92f0a0265504c8ed913371d8ba103d47aae2f0f0421f35",
                  "name": "decrypt",
                  "kind": "FunctionDeclaration",
                  "start": 22,
                  "end": 37,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/schemas.ts",
          "imports": [
            {
              "moduleSpecifier": "zod",
              "elements": [
                "z"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "installationSchema",
              "type": "named",
              "from": "",
              "namespace": "installationSchema"
            },
            {
              "name": "Installation",
              "type": "named",
              "from": "",
              "namespace": "Installation"
            }
          ],
          "blocks": [
            {
              "hash": "dad176e8d02b2a78684049d8c9ffaf142fc089f626464a94d9f744b5d8b0f872",
              "name": "installationSchema",
              "kind": "VariableStatement",
              "content": "export const installationSchema = z.object({\r\n  id: z.number(),\r\n  repository_id: z.number(),\r\n  name: z.string(),\r\n  owner: z.string(),\r\n  full_name: z.string(),\r\n});",
              "start": 3,
              "end": 9,
              "dependencies": []
            },
            {
              "hash": "e5a1c6b72053d296fd036f5bc8406ac8ed13c3b3da45dd4491d574c8097b0b4e",
              "name": "Installation",
              "kind": "TypeAliasDeclaration",
              "content": "export type Installation = z.infer<typeof installationSchema>;",
              "start": 11,
              "end": 11,
              "dependencies": [
                {
                  "hash": "98b591fdc8565f0f49eeeef6ac2b6059476fe17bab1f52566cc2043733fb39aa",
                  "name": "installationSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 9,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/schemas.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts",
              "elements": [
                "UserConfig",
                "userConfigSchema"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts",
              "elements": [
                "connectRedis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts",
              "elements": [
                "decrypt",
                "encrypt"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "saveUserConfigAction",
              "type": "named",
              "from": "",
              "namespace": "saveUserConfigAction"
            },
            {
              "name": "getUserConfigAction",
              "type": "named",
              "from": "",
              "namespace": "getUserConfigAction"
            }
          ],
          "blocks": [
            {
              "hash": "ed7833701969aaf6c4ce092ddfb76bacf6cd4bfda418b0537de413d3592d0182",
              "name": "saveUserConfigAction",
              "kind": "FunctionDeclaration",
              "content": "export async function saveUserConfigAction(\r\n  username: string,\r\n  values: UserConfig\r\n) {\r\n  const parse = userConfigSchema.safeParse(values);\r\n\r\n  if (parse.success) {\r\n    const { allocations, ...data } = parse.data;\r\n    const redis = await connectRedis();\r\n    await redis.json.merge(`user:${username}`, \"$\", {\r\n      ...data,\r\n      api_token: await encrypt(data.api_token),\r\n      allocations: allocations.reduce(\r\n        (acc, cur) => ({ ...acc, [cur.id]: { budget: cur.budget } }),\r\n        {}\r\n      ),\r\n    });\r\n  }\r\n}",
              "start": 10,
              "end": 28,
              "dependencies": [
                {
                  "hash": "536b44b206970d7ce2ab72d80a02f7a1c536981945aa1ca6f569c76d243a21a0",
                  "name": "UserConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 21,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts"
                },
                {
                  "hash": "4ce2c1a1e697eee2273c8c60b9994eb86205a6ceb168f8c385e87216ca9919be",
                  "name": "parse",
                  "kind": "VariableDeclaration",
                  "start": 14,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "dda66d125cc288a89efcd403ec4fb4d4b10c86f83d18223d1e4391bd294271e4",
                  "name": "userConfigSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts"
                },
                {
                  "hash": "726b899c872d00c9f814b9dc36059ec4c4ad6acfc71da2777e51b696de3c244c",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 18,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "89223ef8a1478876883543191c72207fb92f756ac68710f6f45311d618b51031",
                  "name": "connectRedis",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts"
                },
                {
                  "hash": "a8458ce25171bd51cb267db9870cc501e7c3d1b219fae43740bc0ddbdc762a45",
                  "name": "encrypt",
                  "kind": "FunctionDeclaration",
                  "start": 10,
                  "end": 20,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            },
            {
              "hash": "d6ae6ec78d3e385e008dc2bd168691423749bd27d398c3d9d4788714baa18e6f",
              "name": "getUserConfigAction",
              "kind": "FunctionDeclaration",
              "content": "export async function getUserConfigAction(\r\n  username?: string\r\n): Promise<UserConfig | null> {\r\n  if (!username) return null;\r\n  const redis = await connectRedis();\r\n  const redisData = await redis.json.get(`user:${username}`);\r\n  if (!redisData) return null;\r\n\r\n  const { allocations = [], ...data } = redisData as unknown as UserConfig;\r\n\r\n  const reponseData = {\r\n    ...data,\r\n    api_token: data.api_token ? await decrypt(data.api_token) : \"\",\r\n    allocations: Object.entries(allocations)\r\n      .map(([id, { budget }]) => ({\r\n        id,\r\n        budget,\r\n      }))\r\n      .filter(({ budget }) => budget > 0),\r\n  };\r\n\r\n  return reponseData as UserConfig;\r\n}",
              "start": 30,
              "end": 52,
              "dependencies": [
                {
                  "hash": "536b44b206970d7ce2ab72d80a02f7a1c536981945aa1ca6f569c76d243a21a0",
                  "name": "UserConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 21,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts"
                },
                {
                  "hash": "726b899c872d00c9f814b9dc36059ec4c4ad6acfc71da2777e51b696de3c244c",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 34,
                  "end": 34,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "89223ef8a1478876883543191c72207fb92f756ac68710f6f45311d618b51031",
                  "name": "connectRedis",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts"
                },
                {
                  "hash": "4a8034b81b7f5eb197085ada8b2ccef5ab44da8d4c26a5aba8aa9b121ae8bee2",
                  "name": "redisData",
                  "kind": "VariableDeclaration",
                  "start": 35,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "393857b412dd1efefcdc951add1600d5b7cb52569cfb6006cb4339a60a4fa46a",
                  "name": "reponseData",
                  "kind": "VariableDeclaration",
                  "start": 40,
                  "end": 49,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "01f344783744ec0a2a92f0a0265504c8ed913371d8ba103d47aae2f0f0421f35",
                  "name": "decrypt",
                  "kind": "FunctionDeclaration",
                  "start": 22,
                  "end": 37,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/fonts.ts",
          "imports": [
            {
              "moduleSpecifier": "next/font/local",
              "namespace": "localFont",
              "elements": [
                "localFont"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "next/font/google",
              "elements": [
                "Inter",
                "Roboto_Mono"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "geistSans",
              "type": "named",
              "from": "",
              "namespace": "geistSans"
            },
            {
              "name": "geistMono",
              "type": "named",
              "from": "",
              "namespace": "geistMono"
            },
            {
              "name": "inter",
              "type": "named",
              "from": "",
              "namespace": "inter"
            },
            {
              "name": "roboto_mono",
              "type": "named",
              "from": "",
              "namespace": "roboto_mono"
            }
          ],
          "blocks": [
            {
              "hash": "1b3efe120d53e70f58326e200daf7ff581d793df42a4593352ec6058f4b51c7e",
              "name": "geistSans",
              "kind": "VariableStatement",
              "content": "export const geistSans = localFont({\r\n  src: \"./fonts/GeistVF.woff\",\r\n  variable: \"--font-geist-sans\",\r\n  weight: \"100 900\",\r\n});",
              "start": 4,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "9ad783606167f69d6f3748f92dbae2f64f47852fdb5fe04a04753b9e162b2d86",
              "name": "geistMono",
              "kind": "VariableStatement",
              "content": "export const geistMono = localFont({\r\n  src: \"./fonts/GeistMonoVF.woff\",\r\n  variable: \"--font-geist-mono\",\r\n  weight: \"100 900\",\r\n});",
              "start": 9,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "2473e06b82057b1302352a0d48e946fe5d1640189ecf5c1720d4b91d2a6668f1",
              "name": "inter",
              "kind": "VariableStatement",
              "content": "export const inter = Inter({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-inter\",\r\n  display: \"swap\",\r\n});",
              "start": 15,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "59b4eb5e51f254d06b443986b6d1774b922e3d7696dd6f94b861442e25d278dd",
              "name": "roboto_mono",
              "kind": "VariableStatement",
              "content": "export const roboto_mono = Roboto_Mono({\r\n  subsets: [\"latin\"],\r\n  variable: \"--font-roboto-mono\",\r\n  display: \"swap\",\r\n});",
              "start": 21,
              "end": 25,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/layout.tsx",
          "imports": [
            {
              "moduleSpecifier": "next",
              "elements": [
                "Metadata"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "./globals.css",
              "elements": [],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/providers/theme-provider.tsx",
              "elements": [
                "ThemeProvider"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/providers/auth-provider.tsx",
              "elements": [
                "AuthProvider"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/fonts.ts",
              "elements": [
                "inter"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/header.tsx",
              "elements": [
                "Header"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "auth"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toaster.tsx",
              "elements": [
                "Toaster"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "default",
              "type": "default",
              "from": "",
              "namespace": "default"
            },
            {
              "name": "metadata",
              "type": "named",
              "from": "",
              "namespace": "metadata"
            }
          ],
          "blocks": [
            {
              "hash": "b30d8d9df26ab284fb40e6c8d2abfb557113c782312626e0f680999d2763c99a",
              "name": "metadata",
              "kind": "VariableStatement",
              "content": "export const metadata: Metadata = {\r\n  title: \"Project Wiz\",\r\n  description: \"Seu assiste de projeto\",\r\n};",
              "start": 12,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "fe376bce4b28a703e87e4d00eb673156b640b88a213e55d0bb449db48a0cc52e",
              "name": "RootLayout",
              "kind": "FunctionDeclaration",
              "content": "export default async function RootLayout({\r\n  children,\r\n}: Readonly<{\r\n  children: React.ReactNode;\r\n}>) {\r\n  const session = await auth();\r\n  return (\r\n    <html lang=\"en\" suppressHydrationWarning>\r\n      <body className={cn(`${inter.variable} antialiased`, \"min-h-screen\")}>\r\n        <ThemeProvider\r\n          attribute=\"class\"\r\n          defaultTheme=\"system\"\r\n          enableSystem\r\n          disableTransitionOnChange\r\n        >\r\n          <AuthProvider session={session}>\r\n            <div className=\"p-4\">\r\n              <Header />\r\n              <main className=\"\">{children}</main>\r\n            </div>\r\n          </AuthProvider>\r\n        </ThemeProvider>\r\n        <Toaster />\r\n      </body>\r\n    </html>\r\n  );\r\n}",
              "start": 17,
              "end": 43,
              "dependencies": [
                {
                  "hash": "0c5ef69504c5bdf453234be28da8705f1247ce2271990ad781798731c66fac10",
                  "name": "session",
                  "kind": "VariableDeclaration",
                  "start": 22,
                  "end": 22,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/layout.tsx"
                },
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                },
                {
                  "hash": "240ec6e6137eceb114d7a4fcc46497f05013c1987b6326a074185cc6ca8ab42c",
                  "name": "inter",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/fonts.ts"
                },
                {
                  "hash": "d688eabade1d42c5cd52143e0a08fb2a0c0f0877381e55317bd2b51d3fcc7414",
                  "name": "ThemeProvider",
                  "kind": "FunctionDeclaration",
                  "start": 7,
                  "end": 9,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/providers/theme-provider.tsx"
                },
                {
                  "hash": "9d38ccd1c3975d2e8b34e560da9244a3b57b1bdc41cfd9979ad2358afe3cb211",
                  "name": "AuthProvider",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 7,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/providers/auth-provider.tsx"
                },
                {
                  "hash": "7b2da2e2a391d56b797f4fcc14181faa6ef5951619a7847033b77ed4d6326229",
                  "name": "Header",
                  "kind": "FunctionDeclaration",
                  "start": 19,
                  "end": 89,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/header.tsx"
                },
                {
                  "hash": "269a6a40fe5ced8cc879f93a89b714a978d93aeb4f5f01e84a787fe5c935808f",
                  "name": "Toaster",
                  "kind": "FunctionDeclaration",
                  "start": 13,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toaster.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/header.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "lucide-react",
              "elements": [
                "LogIn",
                "LogOut",
                "Settings",
                "User"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next/link",
              "namespace": "Link",
              "elements": [
                "Link"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx",
              "elements": [
                "DropdownMenu",
                "DropdownMenuTrigger",
                "DropdownMenuContent",
                "DropdownMenuItem",
                "DropdownMenuLabel",
                "DropdownMenuSeparator"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h1.tsx",
              "elements": [
                "H1"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react-icons/si",
              "elements": [
                "SiGithub"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/avatar.tsx",
              "elements": [
                "Avatar",
                "AvatarFallback",
                "AvatarImage"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-auth/react",
              "elements": [
                "signIn",
                "signOut",
                "useSession"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Header",
              "type": "named",
              "from": "",
              "namespace": "Header"
            }
          ],
          "blocks": [
            {
              "hash": "7b2da2e2a391d56b797f4fcc14181faa6ef5951619a7847033b77ed4d6326229",
              "name": "Header",
              "kind": "FunctionDeclaration",
              "content": "export function Header() {\r\n  const { data: session } = useSession();\r\n\r\n  return (\r\n    <header className=\"flex items-center justify-between mb-6\">\r\n      <H1 className=\"flex flex-1\">\r\n        <Link href={\"/\"}>ProjectWiz</Link>\r\n      </H1>\r\n      <div className=\"flex justify-center items-center gap-2\">\r\n        <Button variant={\"secondary\"} size={\"sm\"} asChild>\r\n          {/* ?target_id=108767781&target_type=Organization */}\r\n          <Link href=\"https://github.com/apps/projectwizapp/installations/new\">\r\n            <SiGithub className=\"mr-2 h-4 w-4\" />\r\n            Instalar App\r\n          </Link>\r\n        </Button>\r\n        <DropdownMenu>\r\n          <DropdownMenuTrigger asChild>\r\n            <Button variant=\"outline\" size=\"icon\">\r\n              <Avatar className=\"rounded-sm w-8 h-8\">\r\n                <AvatarImage\r\n                  src={session?.user.image || \"\"}\r\n                  alt={session?.user.username}\r\n                />\r\n                <AvatarFallback className=\"rounded-sm w-8 h-8\">\r\n                  <User className=\"rounded-sm w-8 h-8\" />\r\n                </AvatarFallback>\r\n              </Avatar>\r\n            </Button>\r\n          </DropdownMenuTrigger>\r\n          <DropdownMenuContent>\r\n            <DropdownMenuLabel>Minha Conta</DropdownMenuLabel>\r\n            <DropdownMenuSeparator />\r\n\r\n            {session?.user && (\r\n              <>\r\n                <DropdownMenuItem asChild>\r\n                  <Link href=\"/billing\">Cobrança</Link>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuItem asChild>\r\n                  <Link href=\"/user/config\">\r\n                    <Settings className=\"mr-2 h-4 w-4\" />\r\n                    Configuração\r\n                  </Link>\r\n                </DropdownMenuItem>\r\n                <DropdownMenuSeparator />\r\n              </>\r\n            )}\r\n\r\n            <DropdownMenuItem\r\n              onClick={() => {\r\n                if (!session?.user) {\r\n                  signIn(\"github\");\r\n                } else {\r\n                  signOut();\r\n                }\r\n              }}\r\n            >\r\n              {!session?.user ? (\r\n                <LogIn className=\"mr-2 h-4 w-4\" />\r\n              ) : (\r\n                <LogOut className=\"mr-2 h-4 w-4\" />\r\n              )}\r\n              {!session?.user ? \"Entrar\" : \"Sair\"}\r\n            </DropdownMenuItem>\r\n          </DropdownMenuContent>\r\n        </DropdownMenu>\r\n      </div>\r\n    </header>\r\n  );\r\n}",
              "start": 19,
              "end": 89,
              "dependencies": [
                {
                  "hash": "4d070c0965de8b95f2abacae6eda0b35227f8defc81493bfc7e06cba32e3a7aa",
                  "name": "H1",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h1.tsx"
                },
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                },
                {
                  "hash": "bca7895b0164165d0791aedee6c5b03afb203560bd1a4ed57824ff824177835b",
                  "name": "DropdownMenu",
                  "kind": "VariableDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "ac27ee4e837a7464a935b6364a99aac0afecd8520edab45a9343d0c2201d513c",
                  "name": "DropdownMenuTrigger",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "174aa576dac84b80ae608bd4dab51624d7de3cbb53a6d1e62ea4852dddbadafa",
                  "name": "Avatar",
                  "kind": "VariableDeclaration",
                  "start": 8,
                  "end": 20,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/avatar.tsx"
                },
                {
                  "hash": "ace7e4ab30d4924d9e9f6c4a559a1700d5e85f27e60a75ef1742aa65f8a91e69",
                  "name": "AvatarImage",
                  "kind": "VariableDeclaration",
                  "start": 23,
                  "end": 32,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/avatar.tsx"
                },
                {
                  "hash": "1120178f57ee2e3c3d372e18c453a94ab190f707f0839795c15d9fbc76b3e610",
                  "name": "AvatarFallback",
                  "kind": "VariableDeclaration",
                  "start": 35,
                  "end": 47,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/avatar.tsx"
                },
                {
                  "hash": "f52ac5d1c21959ade8e621f55f171a6ff3f565224be5d9cea4544d0e40884923",
                  "name": "DropdownMenuContent",
                  "kind": "VariableDeclaration",
                  "start": 63,
                  "end": 79,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "86d21c5c003980dd55ca4d1c671f142427a7304bd5de37e9b15ee06dd3cdf0d9",
                  "name": "DropdownMenuLabel",
                  "kind": "VariableDeclaration",
                  "start": 146,
                  "end": 161,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "c43f94ae22cc506ad609eeb39e791de843611754d8cc6b6a1cb9dd2a29f92117",
                  "name": "DropdownMenuSeparator",
                  "kind": "VariableDeclaration",
                  "start": 164,
                  "end": 173,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "8799418083553a98b8a582885f6511d320c2e024d4586d7f31d7b41e06c29eb0",
                  "name": "DropdownMenuItem",
                  "kind": "VariableDeclaration",
                  "start": 82,
                  "end": 97,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/mode-toggle.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "MoonIcon",
                "SunIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-themes",
              "elements": [
                "useTheme"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx",
              "elements": [
                "DropdownMenu",
                "DropdownMenuContent",
                "DropdownMenuItem",
                "DropdownMenuTrigger"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ModeToggle",
              "type": "named",
              "from": "",
              "namespace": "ModeToggle"
            }
          ],
          "blocks": [
            {
              "hash": "4f621f051473e355542379a340f1b3569f1734f42c37f57daa636e7702aa46bd",
              "name": "ModeToggle",
              "kind": "FunctionDeclaration",
              "content": "export function ModeToggle() {\r\n  const { setTheme } = useTheme();\r\n\r\n  return (\r\n    <DropdownMenu>\r\n      <DropdownMenuTrigger asChild>\r\n        <Button variant=\"outline\" size=\"icon\">\r\n          <SunIcon className=\"h-[1.2rem] w-[1.2rem] rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0\" />\r\n          <MoonIcon className=\"absolute h-[1.2rem] w-[1.2rem] rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\r\n          <span className=\"sr-only\">Toggle theme</span>\r\n        </Button>\r\n      </DropdownMenuTrigger>\r\n      <DropdownMenuContent align=\"end\">\r\n        <DropdownMenuItem onClick={() => setTheme(\"light\")}>\r\n          Light\r\n        </DropdownMenuItem>\r\n        <DropdownMenuItem onClick={() => setTheme(\"dark\")}>\r\n          Dark\r\n        </DropdownMenuItem>\r\n        <DropdownMenuItem onClick={() => setTheme(\"system\")}>\r\n          System\r\n        </DropdownMenuItem>\r\n      </DropdownMenuContent>\r\n    </DropdownMenu>\r\n  );\r\n}",
              "start": 15,
              "end": 40,
              "dependencies": [
                {
                  "hash": "bca7895b0164165d0791aedee6c5b03afb203560bd1a4ed57824ff824177835b",
                  "name": "DropdownMenu",
                  "kind": "VariableDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "ac27ee4e837a7464a935b6364a99aac0afecd8520edab45a9343d0c2201d513c",
                  "name": "DropdownMenuTrigger",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                },
                {
                  "hash": "f52ac5d1c21959ade8e621f55f171a6ff3f565224be5d9cea4544d0e40884923",
                  "name": "DropdownMenuContent",
                  "kind": "VariableDeclaration",
                  "start": 63,
                  "end": 79,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "8799418083553a98b8a582885f6511d320c2e024d4586d7f31d7b41e06c29eb0",
                  "name": "DropdownMenuItem",
                  "kind": "VariableDeclaration",
                  "start": 82,
                  "end": 97,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/search-input.tsx",
          "imports": [
            {
              "moduleSpecifier": "lucide-react",
              "elements": [
                "Search"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx",
              "elements": [
                "Input"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts",
              "elements": [
                "useSearchParams"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "SearcInput",
              "type": "named",
              "from": "",
              "namespace": "SearcInput"
            }
          ],
          "blocks": [
            {
              "hash": "2af220b39ec51a46a50b168ca3356befef0fe3577456573dc1fcc4f53f8990c1",
              "name": "SearcInput",
              "kind": "FunctionDeclaration",
              "content": "export function SearcInput() {\r\n  const [searchTerm, handleSearch] = useSearchParams(\"q\", \"\");\r\n\r\n  return (\r\n    <span className=\"relative flex items-center\">\r\n      <Input\r\n        type=\"text\"\r\n        placeholder=\"Pesquisar repositórios...\"\r\n        defaultValue={searchTerm}\r\n        onChange={(e) => handleSearch(e.target.value)}\r\n        className=\"h-8 px-2\"\r\n      />\r\n      <Search className=\"absolute w-4 h-4 right-2\" />\r\n    </span>\r\n  );\r\n}",
              "start": 7,
              "end": 22,
              "dependencies": [
                {
                  "hash": "9532e8d6da2ab0687c6b402844c576167364ca4a83f07634cc4cd3e365bd3d8a",
                  "name": "useSearchParams",
                  "kind": "FunctionDeclaration",
                  "start": 9,
                  "end": 31,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts"
                },
                {
                  "hash": "0909164de260e60e39d676ec1a4910d5bd1f8f17d1582ac7afca9b3ad01937f3",
                  "name": "Input",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/signin-button.tsx",
          "imports": [
            {
              "moduleSpecifier": "lucide-react",
              "elements": [
                "LogIn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-auth/react",
              "elements": [
                "signIn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "SignInButton",
              "type": "named",
              "from": "",
              "namespace": "SignInButton"
            }
          ],
          "blocks": [
            {
              "hash": "7e444c709d3c7fbab51370c8e7563aca9297d73e02affa3eb754c31cb006c2c5",
              "name": "SignInButton",
              "kind": "FunctionDeclaration",
              "content": "export function SignInButton() {\r\n  return (\r\n    <Button className=\"p-2 justify-start\" onClick={() => signIn(\"github\")}>\r\n      <LogIn className=\"w-4 h-4 mr-2\" />\r\n      Entrar\r\n    </Button>\r\n  );\r\n}",
              "start": 7,
              "end": 14,
              "dependencies": [
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/signout-button.tsx",
          "imports": [
            {
              "moduleSpecifier": "next-auth/react",
              "elements": [
                "signOut"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "SignOutButton",
              "type": "named",
              "from": "",
              "namespace": "SignOutButton"
            }
          ],
          "blocks": [
            {
              "hash": "dbd91ed02f3a341acc5bda828810da963d5621677fb1878db60144f5d1f54a8a",
              "name": "SignOutButton",
              "kind": "FunctionDeclaration",
              "content": "export function SignOutButton() {\r\n  return (\r\n    <Button className=\"p-2 justify-start\" onClick={() => signOut()}>\r\n      Sair\r\n    </Button>\r\n  );\r\n}",
              "start": 6,
              "end": 12,
              "dependencies": [
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts",
          "imports": [
            {
              "moduleSpecifier": "next/navigation",
              "elements": [
                "usePathname",
                "useRouter",
                "useSearchParams"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react",
              "elements": [
                "useEffect",
                "useState"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "use-debounce",
              "elements": [
                "useDebouncedCallback"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "useSearchParams",
              "type": "named",
              "from": "",
              "namespace": "useSearchParams"
            }
          ],
          "blocks": [
            {
              "hash": "9532e8d6da2ab0687c6b402844c576167364ca4a83f07634cc4cd3e365bd3d8a",
              "name": "useSearchParams",
              "kind": "FunctionDeclaration",
              "content": "export function useSearchParams(key: string, defaultValue: string) {\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n  const searchParams = useSearchParamsNext();\r\n  const [value, setValue] = useState(defaultValue);\r\n\r\n  const fn = useDebouncedCallback((newValue: string) => {\r\n    const params = new URLSearchParams(searchParams.toString());\r\n    if (newValue !== defaultValue) {\r\n      params.set(key, newValue);\r\n    } else {\r\n      params.delete(key);\r\n    }\r\n\r\n    router.replace(`${pathname}?${params.toString()}`);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fn(value);\r\n  }, [fn, value]);\r\n\r\n  return [value, setValue] as const;\r\n}",
              "start": 9,
              "end": 31,
              "dependencies": [
                {
                  "hash": "b5bc9034f2c37d9f9ca5a886d31e998f7db41d20520e739d74dba146b5ca7aa2",
                  "name": "pathname",
                  "kind": "VariableDeclaration",
                  "start": 10,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts"
                },
                {
                  "hash": "fc1ad60d289c3299f458a1d40a3a2428f6748704bd1639e3f7be5e46154c9c8e",
                  "name": "router",
                  "kind": "VariableDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts"
                },
                {
                  "hash": "dd7ce2a658fee1e7b3903ca00e06104cae4be9d1cb6ddb922edb98e153d683c9",
                  "name": "searchParams",
                  "kind": "VariableDeclaration",
                  "start": 12,
                  "end": 12,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts"
                },
                {
                  "hash": "18ce0cd0766e4eedf4ca9553aa3a19900f5c4cb5a6d8f52085901625361e1334",
                  "name": "fn",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts"
                },
                {
                  "hash": "b227c7d316cc57105287348458a59fb490a4b0c429d6dce403af0f5f7c983190",
                  "name": "params",
                  "kind": "VariableDeclaration",
                  "start": 16,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-search-params.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx",
              "elements": [
                "ToastActionElement",
                "ToastProps"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "actionTypes",
              "type": "named",
              "from": "",
              "namespace": "actionTypes"
            },
            {
              "name": "reducer",
              "type": "named",
              "from": "",
              "namespace": "reducer"
            },
            {
              "name": "useToast",
              "type": "named",
              "from": "",
              "namespace": "useToast"
            },
            {
              "name": "toast",
              "type": "named",
              "from": "",
              "namespace": "toast"
            }
          ],
          "blocks": [
            {
              "hash": "e5d8d2c51bfcc9158fb65220b283b5772c3e2e3de61940338adbaa2f8c480255",
              "name": "TOAST_LIMIT",
              "kind": "VariableStatement",
              "content": "const TOAST_LIMIT = 1;",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "a4543557d452a2b11b5080ac67e33ed5bb659a7f28bcd273f348c55b1062b365",
              "name": "TOAST_REMOVE_DELAY",
              "kind": "VariableStatement",
              "content": "const TOAST_REMOVE_DELAY = 1000000;",
              "start": 9,
              "end": 9,
              "dependencies": []
            },
            {
              "hash": "e0537f836dfe671fda89f2d55b42e18a86c76621fa03265d9a7734a390211ca5",
              "name": "ToasterToast",
              "kind": "TypeAliasDeclaration",
              "content": "type ToasterToast = ToastProps & {\r\n  id: string;\r\n  title?: React.ReactNode;\r\n  description?: React.ReactNode;\r\n  action?: ToastActionElement;\r\n};",
              "start": 11,
              "end": 16,
              "dependencies": [
                {
                  "hash": "2dfbb43e28a0b59a36104544ae483969bd925e40a7b4434181173fe5d497e1cc",
                  "name": "ToastProps",
                  "kind": "TypeAliasDeclaration",
                  "start": 115,
                  "end": 115,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                },
                {
                  "hash": "86de519729a30aac7fbbd73bce9bfb5daf9eb36723d2f4a2aa1a6734035bfe9e",
                  "name": "ToastActionElement",
                  "kind": "TypeAliasDeclaration",
                  "start": 117,
                  "end": 117,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                }
              ]
            },
            {
              "hash": "ea494e3590644108d364e10d7eaf31b6010fb336895aec175779df5537c33af6",
              "name": "count",
              "kind": "VariableStatement",
              "content": "let count = 0;",
              "start": 25,
              "end": 25,
              "dependencies": []
            },
            {
              "hash": "225464dffd40ce4791d6146146bb3af7d37e7b2d114cf822efc6f03b484de812",
              "name": "genId",
              "kind": "FunctionDeclaration",
              "content": "function genId() {\r\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\r\n  return count.toString();\r\n}",
              "start": 27,
              "end": 30,
              "dependencies": [
                {
                  "hash": "949ffa49ccfc5b37590257855b0d57cdefc5b7709edb2655feba299a4af00309",
                  "name": "count",
                  "kind": "VariableDeclaration",
                  "start": 25,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            },
            {
              "hash": "1c3ea0f4b5d5d7c7736730409be3be327eef658e581627bf2af09d8842d54ab9",
              "name": "ActionType",
              "kind": "TypeAliasDeclaration",
              "content": "type ActionType = typeof actionTypes;",
              "start": 32,
              "end": 32,
              "dependencies": []
            },
            {
              "hash": "951a99348e3c8452799f5d86fb9bfdd1a9684b20e93534a52349eccc7f5b5a4c",
              "name": "Action",
              "kind": "TypeAliasDeclaration",
              "content": "type Action =\r\n  | {\r\n      type: ActionType[\"ADD_TOAST\"];\r\n      toast: ToasterToast;\r\n    }\r\n  | {\r\n      type: ActionType[\"UPDATE_TOAST\"];\r\n      toast: Partial<ToasterToast>;\r\n    }\r\n  | {\r\n      type: ActionType[\"DISMISS_TOAST\"];\r\n      toastId?: ToasterToast[\"id\"];\r\n    }\r\n  | {\r\n      type: ActionType[\"REMOVE_TOAST\"];\r\n      toastId?: ToasterToast[\"id\"];\r\n    };",
              "start": 34,
              "end": 50,
              "dependencies": [
                {
                  "hash": "1c3ea0f4b5d5d7c7736730409be3be327eef658e581627bf2af09d8842d54ab9",
                  "name": "ActionType",
                  "kind": "TypeAliasDeclaration",
                  "start": 32,
                  "end": 32,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "e0537f836dfe671fda89f2d55b42e18a86c76621fa03265d9a7734a390211ca5",
                  "name": "ToasterToast",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            },
            {
              "hash": "664f5393f8f95fa5561e85f9e76bac323066dafb13f90417c10aada5f2a9d070",
              "name": "State",
              "kind": "InterfaceDeclaration",
              "content": "interface State {\r\n  toasts: ToasterToast[];\r\n}",
              "start": 52,
              "end": 54,
              "dependencies": [
                {
                  "hash": "e0537f836dfe671fda89f2d55b42e18a86c76621fa03265d9a7734a390211ca5",
                  "name": "ToasterToast",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            },
            {
              "hash": "96cd7a35851e4d2e86e1785d2dea750f6557d42e468af610e6589d3c90afed79",
              "name": "toastTimeouts",
              "kind": "VariableStatement",
              "content": "const toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();",
              "start": 56,
              "end": 56,
              "dependencies": []
            },
            {
              "hash": "00498014c5d70909d14825afe6ddc571da2e98af7e9f56f1ddd5103a992c24c9",
              "name": "addToRemoveQueue",
              "kind": "VariableStatement",
              "content": "const addToRemoveQueue = (toastId: string) => {\r\n  if (toastTimeouts.has(toastId)) {\r\n    return;\r\n  }\r\n\r\n  const timeout = setTimeout(() => {\r\n    toastTimeouts.delete(toastId);\r\n    dispatch({\r\n      type: actionTypes.REMOVE_TOAST,\r\n      toastId: toastId,\r\n    });\r\n  }, TOAST_REMOVE_DELAY);\r\n\r\n  toastTimeouts.set(toastId, timeout);\r\n};",
              "start": 58,
              "end": 72,
              "dependencies": []
            },
            {
              "hash": "6634b2a09bd5486e79cfc3da1d971b4649e7351584c9bc834d32f5cfbdc293f2",
              "name": "reducer",
              "kind": "VariableStatement",
              "content": "export const reducer = (state: State, action: Action): State | undefined => {\r\n  switch (action.type) {\r\n    case \"ADD_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\r\n      };\r\n\r\n    case \"UPDATE_TOAST\":\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\r\n        ),\r\n      };\r\n\r\n    case \"DISMISS_TOAST\": {\r\n      const { toastId } = action;\r\n\r\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\r\n      // but I'll keep it here for simplicity\r\n      if (toastId) {\r\n        addToRemoveQueue(toastId);\r\n      } else {\r\n        state.toasts.forEach((toast) => {\r\n          addToRemoveQueue(toast.id);\r\n        });\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.map((t) =>\r\n          t.id === toastId || toastId === undefined\r\n            ? {\r\n                ...t,\r\n                open: false,\r\n              }\r\n            : t\r\n        ),\r\n      };\r\n    }\r\n    case \"REMOVE_TOAST\":\r\n      if (action.toastId === undefined) {\r\n        return {\r\n          ...state,\r\n          toasts: [],\r\n        };\r\n      }\r\n      return {\r\n        ...state,\r\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\r\n      };\r\n  }\r\n};",
              "start": 74,
              "end": 127,
              "dependencies": []
            },
            {
              "hash": "01281fd844fdf4c033dd35b9bf4243cbc523707569764a7244b24f00478302ec",
              "name": "listeners",
              "kind": "VariableStatement",
              "content": "const listeners: Array<(state: State) => void> = [];",
              "start": 129,
              "end": 129,
              "dependencies": []
            },
            {
              "hash": "42ea60b6c7791050bea6229069a7e682aafe09891b045a3f26cd23615bae173a",
              "name": "memoryState",
              "kind": "VariableStatement",
              "content": "let memoryState: State = { toasts: [] };",
              "start": 131,
              "end": 131,
              "dependencies": []
            },
            {
              "hash": "6a7975ec952dc0c66f04ffe2c93554f13b0334fd2bcea55c45c8fb8876cf18f1",
              "name": "dispatch",
              "kind": "FunctionDeclaration",
              "content": "function dispatch(action: Action) {\r\n  memoryState = reducer(memoryState, action) || ({} as State);\r\n  listeners.forEach((listener) => {\r\n    listener(memoryState);\r\n  });\r\n}",
              "start": 133,
              "end": 138,
              "dependencies": [
                {
                  "hash": "951a99348e3c8452799f5d86fb9bfdd1a9684b20e93534a52349eccc7f5b5a4c",
                  "name": "Action",
                  "kind": "TypeAliasDeclaration",
                  "start": 34,
                  "end": 50,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "6a0c27c667006505d6c9d00116069b1efb04b80fcd5a86244fdd45d03cf375b6",
                  "name": "memoryState",
                  "kind": "VariableDeclaration",
                  "start": 131,
                  "end": 131,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "c2efd3f61af96b9f915f85981b478277479c4a2412c6ea74b3de5d525a4d270a",
                  "name": "reducer",
                  "kind": "VariableDeclaration",
                  "start": 74,
                  "end": 127,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "664f5393f8f95fa5561e85f9e76bac323066dafb13f90417c10aada5f2a9d070",
                  "name": "State",
                  "kind": "InterfaceDeclaration",
                  "start": 52,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            },
            {
              "hash": "5c897f89d00d69ca2c722460974a8ae7a0020ad665e3cc5b0255e45b08b745e7",
              "name": "Toast",
              "kind": "TypeAliasDeclaration",
              "content": "type Toast = Omit<ToasterToast, \"id\">;",
              "start": 140,
              "end": 140,
              "dependencies": [
                {
                  "hash": "e0537f836dfe671fda89f2d55b42e18a86c76621fa03265d9a7734a390211ca5",
                  "name": "ToasterToast",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            },
            {
              "hash": "cb0dc8ccfd7ff1673114167be8256af9483fda3dd89f0aa0acbb2ecc978a94cf",
              "name": "toast",
              "kind": "FunctionDeclaration",
              "content": "function toast({ ...props }: Toast) {\r\n  const id = genId();\r\n\r\n  const update = (props: ToasterToast) =>\r\n    dispatch({\r\n      type: actionTypes.UPDATE_TOAST,\r\n      toast: { ...props, id },\r\n    });\r\n  const dismiss = () =>\r\n    dispatch({ type: actionTypes.DISMISS_TOAST, toastId: id });\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TOAST,\r\n    toast: {\r\n      ...props,\r\n      id,\r\n      open: true,\r\n      onOpenChange: (open) => {\r\n        if (!open) dismiss();\r\n      },\r\n    },\r\n  });\r\n\r\n  return {\r\n    id: id,\r\n    dismiss,\r\n    update,\r\n  };\r\n}",
              "start": 142,
              "end": 170,
              "dependencies": [
                {
                  "hash": "5c897f89d00d69ca2c722460974a8ae7a0020ad665e3cc5b0255e45b08b745e7",
                  "name": "Toast",
                  "kind": "TypeAliasDeclaration",
                  "start": 140,
                  "end": 140,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "2153202437352f2d4ec54490b0711fda1bd0a44775c302c1feecb11924acdf39",
                  "name": "id",
                  "kind": "VariableDeclaration",
                  "start": 143,
                  "end": 143,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "225464dffd40ce4791d6146146bb3af7d37e7b2d114cf822efc6f03b484de812",
                  "name": "genId",
                  "kind": "FunctionDeclaration",
                  "start": 27,
                  "end": 30,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "240e83c55a1a434f50ca7b6541ac61838d4bf093cb353c99ff97f1f62e38e382",
                  "name": "update",
                  "kind": "VariableDeclaration",
                  "start": 145,
                  "end": 149,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "e0537f836dfe671fda89f2d55b42e18a86c76621fa03265d9a7734a390211ca5",
                  "name": "ToasterToast",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "6a7975ec952dc0c66f04ffe2c93554f13b0334fd2bcea55c45c8fb8876cf18f1",
                  "name": "dispatch",
                  "kind": "FunctionDeclaration",
                  "start": 133,
                  "end": 138,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "ab554c4b860fc0fc313cd472f1d269a2d96d4753c14dfe5df0c5fde9469f0ec5",
                  "name": "dismiss",
                  "kind": "VariableDeclaration",
                  "start": 150,
                  "end": 151,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            },
            {
              "hash": "de345c813280db3d258a2abd4c830ae9e379a81add9c027cb6cb620ca649c52d",
              "name": "useToast",
              "kind": "FunctionDeclaration",
              "content": "function useToast() {\r\n  const [state, setState] = React.useState<State>(memoryState);\r\n\r\n  React.useEffect(() => {\r\n    listeners.push(setState);\r\n    return () => {\r\n      const index = listeners.indexOf(setState);\r\n      if (index > -1) {\r\n        listeners.splice(index, 1);\r\n      }\r\n    };\r\n  }, [state]);\r\n\r\n  return {\r\n    ...state,\r\n    toast,\r\n    dismiss: (toastId?: string) =>\r\n      dispatch({ type: actionTypes.DISMISS_TOAST, toastId }),\r\n  };\r\n}",
              "start": 172,
              "end": 191,
              "dependencies": [
                {
                  "hash": "664f5393f8f95fa5561e85f9e76bac323066dafb13f90417c10aada5f2a9d070",
                  "name": "State",
                  "kind": "InterfaceDeclaration",
                  "start": 52,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "6a0c27c667006505d6c9d00116069b1efb04b80fcd5a86244fdd45d03cf375b6",
                  "name": "memoryState",
                  "kind": "VariableDeclaration",
                  "start": 131,
                  "end": 131,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "e6eadaf49c700c6c90dd3b7b42d7f74d9aa87ae423a87ba685f3a228e3554c7c",
                  "name": "index",
                  "kind": "VariableDeclaration",
                  "start": 178,
                  "end": 178,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "cb0dc8ccfd7ff1673114167be8256af9483fda3dd89f0aa0acbb2ecc978a94cf",
                  "name": "toast",
                  "kind": "FunctionDeclaration",
                  "start": 142,
                  "end": 170,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "6a7975ec952dc0c66f04ffe2c93554f13b0334fd2bcea55c45c8fb8876cf18f1",
                  "name": "dispatch",
                  "kind": "FunctionDeclaration",
                  "start": 133,
                  "end": 138,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
          "imports": [
            {
              "moduleSpecifier": "next-auth",
              "namespace": "NextAuth",
              "elements": [
                "NextAuth"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "next-auth/providers/github",
              "namespace": "GitHub",
              "elements": [
                "GitHub"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "next-auth/jwt",
              "elements": [],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "handlers",
              "type": "named",
              "from": "",
              "namespace": "handlers"
            },
            {
              "name": "signIn",
              "type": "named",
              "from": "",
              "namespace": "signIn"
            },
            {
              "name": "signOut",
              "type": "named",
              "from": "",
              "namespace": "signOut"
            },
            {
              "name": "auth",
              "type": "named",
              "from": "",
              "namespace": "auth"
            }
          ],
          "blocks": [
            {
              "hash": "4b568df647e6055c5301d03573d736f5940f6bcbd9c18c5dfbe20db2ccf6daab",
              "name": "{ handlers, signIn, signOut, auth }",
              "kind": "VariableStatement",
              "content": "export const { handlers, signIn, signOut, auth } = NextAuth({\r\n  providers: [\r\n    GitHub({\r\n      account(account) {\r\n        const refresh_token_expires_at =\r\n          Math.floor(Date.now() / 1000) +\r\n          Number(account.refresh_token_expires_in);\r\n        return {\r\n          access_token: account.access_token,\r\n          expires_at: account.expires_at,\r\n          refresh_token: account.refresh_token,\r\n          refresh_token_expires_at,\r\n        };\r\n      },\r\n      authorization: {\r\n        params: { scope: \"read:user repo read:org\" },\r\n      },\r\n    }),\r\n  ],\r\n  session: {\r\n    strategy: \"jwt\",\r\n  },\r\n  callbacks: {\r\n    // async authorized({ auth }) {\r\n    //   return !!auth;\r\n    // },\r\n    async jwt({ token, account, profile }) {\r\n      if (account) {\r\n        try {\r\n          if (Date.now() >= token.expires_at * 1000) {\r\n            const response = await fetch(\r\n              \"https://github.com/login/oauth/access_token\",\r\n              {\r\n                method: \"POST\",\r\n                body: new URLSearchParams({\r\n                  client_id: process.env.AUTH_GITHUB_ID!,\r\n                  client_secret: process.env.AUTH_GITHUB_SECRET!,\r\n                  grant_type: \"refresh_token\",\r\n                  refresh_token: token.refresh_token!,\r\n                }),\r\n              }\r\n            );\r\n\r\n            const tokensOrError = await response.json();\r\n\r\n            if (!response.ok) throw tokensOrError;\r\n\r\n            const newTokens = tokensOrError as {\r\n              access_token: string;\r\n              expires_in: number;\r\n              refresh_token?: string;\r\n            };\r\n\r\n            token.access_token = newTokens.access_token;\r\n            token.expires_at = Math.floor(\r\n              Date.now() / 1000 + newTokens.expires_in\r\n            );\r\n            if (newTokens.refresh_token)\r\n              token.refresh_token = newTokens.refresh_token;\r\n          }\r\n\r\n          token.username = `${profile?.login || \"\"}`;\r\n          token.access_token = account.access_token!;\r\n          token.expires_at = account.expires_at!;\r\n          token.refresh_token = account.refresh_token;\r\n\r\n          return {\r\n            ...token,\r\n          };\r\n        } catch (error) {\r\n          console.error(\"Error refreshing access_token\", error);\r\n          token.error = \"RefreshTokenError\";\r\n          return { ...token };\r\n        }\r\n      } else {\r\n        return { ...token };\r\n      }\r\n    },\r\n    async session({ session, token }) {\r\n      session.user.access_token = token.access_token;\r\n      session.user.username = token.username;\r\n      session.error = token.error;\r\n      return session;\r\n    },\r\n  },\r\n});",
              "start": 29,
              "end": 114,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts",
          "imports": [
            {
              "moduleSpecifier": "redis",
              "elements": [
                "createClient"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "connectRedis",
              "type": "named",
              "from": "",
              "namespace": "connectRedis"
            }
          ],
          "blocks": [
            {
              "hash": "e553c6edb9d86d7ee4021d60865c43d71b7ac38efce33429127483e4183e3cc8",
              "name": "redis",
              "kind": "VariableStatement",
              "content": "let redis: ReturnType<typeof createClient> | undefined;",
              "start": 3,
              "end": 3,
              "dependencies": []
            },
            {
              "hash": "89223ef8a1478876883543191c72207fb92f756ac68710f6f45311d618b51031",
              "name": "connectRedis",
              "kind": "FunctionDeclaration",
              "content": "export async function connectRedis() {\r\n  if (!redis) {\r\n    redis = createClient({\r\n      url: \"redis://localhost:6379\",\r\n      socket: {\r\n        connectTimeout: 10000,\r\n      },\r\n    });\r\n    redis.on(\"ready\", () => {\r\n      console.log(\"Redis client connected and ready\");\r\n    });\r\n    redis.on(\"error\", (err) => {\r\n      console.error(\"Redis error:\", err);\r\n    });\r\n\r\n    // Mantém a conexão viva com ping periódico\r\n    setInterval(() => {\r\n      redis?.ping();\r\n    }, 10000); // Pinga a cada 10 segundos\r\n    await redis.connect();\r\n  }\r\n  return redis;\r\n}",
              "start": 5,
              "end": 27,
              "dependencies": [
                {
                  "hash": "d2df5c85dd0afc60e62c9cff908d8760d180ab4f71c51154fbc1b56bb4c62627",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 3,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts"
                },
                {
                  "hash": "cdb74107a2dec4306e76af438652008cd3118f9b7981988b6c47eaba25a5a96b",
                  "name": "createClient",
                  "kind": "FunctionDeclaration",
                  "start": 300,
                  "end": 300,
                  "path": "redis"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
          "imports": [
            {
              "moduleSpecifier": "clsx",
              "elements": [
                "clsx",
                "ClassValue"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "tailwind-merge",
              "elements": [
                "twMerge"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "cn",
              "type": "named",
              "from": "",
              "namespace": "cn"
            }
          ],
          "blocks": [
            {
              "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
              "name": "cn",
              "kind": "FunctionDeclaration",
              "content": "export function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}",
              "start": 4,
              "end": 6,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/search-input.tsx",
              "elements": [
                "SearcInput"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx",
              "elements": [
                "DropdownMenu",
                "DropdownMenuContent",
                "DropdownMenuLabel",
                "DropdownMenuRadioGroup",
                "DropdownMenuRadioItem",
                "DropdownMenuSeparator",
                "DropdownMenuTrigger"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "lucide-react",
              "elements": [
                "ListFilter"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next/navigation",
              "elements": [
                "usePathname",
                "useRouter",
                "useSearchParams"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-auth/react",
              "elements": [
                "useSession"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "DashboardFilters",
              "type": "named",
              "from": "",
              "namespace": "DashboardFilters"
            }
          ],
          "blocks": [
            {
              "hash": "a1d304acc6cc1ccdaa3fa955d5119edc4c40717d75b562fdcae6b5aa255f2037",
              "name": "DashboardFilters",
              "kind": "FunctionDeclaration",
              "content": "export function DashboardFilters({\r\n  orgs,\r\n}: {\r\n  orgs: {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n  }[];\r\n}) {\r\n  const pathname = usePathname();\r\n  const router = useRouter();\r\n  const searchParams = useSearchParams();\r\n  const { data: session } = useSession();\r\n  const owner = searchParams.get(\"owner\") || session?.user.username;\r\n\r\n  function handleFilterChange(value: string) {\r\n    const params = new URLSearchParams(searchParams);\r\n    if (value === session?.user.username) {\r\n      params.delete(\"owner\");\r\n    } else {\r\n      params.set(\"owner\", value);\r\n    }\r\n\r\n    router.replace(`${pathname}?${params.toString()}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center gap-2\">\r\n      <DropdownMenu>\r\n        <DropdownMenuTrigger asChild>\r\n          <Button variant=\"outline\" size=\"sm\" className=\"gap-2\">\r\n            <ListFilter className=\"h-3.5 w-3.5\" />\r\n            <span className=\"sr-only sm:not-sr-only sm:whitespace-nowrap\">\r\n              Filtro\r\n            </span>\r\n          </Button>\r\n        </DropdownMenuTrigger>\r\n        <DropdownMenuContent align=\"end\">\r\n          <DropdownMenuLabel>Filtrar por repositórios</DropdownMenuLabel>\r\n          <DropdownMenuSeparator />\r\n          <DropdownMenuRadioGroup\r\n            value={owner}\r\n            onValueChange={handleFilterChange}\r\n          >\r\n            <DropdownMenuRadioItem value={session?.user.username || \"\"}>\r\n              {session?.user.username}\r\n            </DropdownMenuRadioItem>\r\n            {orgs.map((org) => (\r\n              <DropdownMenuRadioItem key={org.name} value={org.name}>\r\n                {org.name}\r\n              </DropdownMenuRadioItem>\r\n            ))}\r\n          </DropdownMenuRadioGroup>\r\n        </DropdownMenuContent>\r\n      </DropdownMenu>\r\n\r\n      <SearcInput />\r\n    </div>\r\n  );\r\n}",
              "start": 18,
              "end": 77,
              "dependencies": [
                {
                  "hash": "d72e7265d51f48867f30586ddf9de727447e3658f9303ab9d3b458afa1d8f31b",
                  "name": "pathname",
                  "kind": "VariableDeclaration",
                  "start": 27,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "5156049cc0ffca24048a702ae50d2ec7818db4f3b02dea7bd612535d2bea16cb",
                  "name": "router",
                  "kind": "VariableDeclaration",
                  "start": 28,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "9acefc5d9a1e2904ce68abe567bbbb723d2b19adbe67515a8ddd15cb06eb1411",
                  "name": "searchParams",
                  "kind": "VariableDeclaration",
                  "start": 29,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "3a1a61647cda83428fdd5b444918fb707a68c8f1d88328240426f73388e7ec7d",
                  "name": "owner",
                  "kind": "VariableDeclaration",
                  "start": 31,
                  "end": 31,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "0c4dd733d3da9842adad52e063659c0fabda0af1774feb985c6dfcfcec6a2b16",
                  "name": "handleFilterChange",
                  "kind": "FunctionDeclaration",
                  "start": 33,
                  "end": 42,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "7038dc3fd575f19e786ddf2413458872567be063520b2b8a863a8b5f7d00135b",
                  "name": "params",
                  "kind": "VariableDeclaration",
                  "start": 34,
                  "end": 34,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "bca7895b0164165d0791aedee6c5b03afb203560bd1a4ed57824ff824177835b",
                  "name": "DropdownMenu",
                  "kind": "VariableDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "ac27ee4e837a7464a935b6364a99aac0afecd8520edab45a9343d0c2201d513c",
                  "name": "DropdownMenuTrigger",
                  "kind": "VariableDeclaration",
                  "start": 15,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                },
                {
                  "hash": "f52ac5d1c21959ade8e621f55f171a6ff3f565224be5d9cea4544d0e40884923",
                  "name": "DropdownMenuContent",
                  "kind": "VariableDeclaration",
                  "start": 63,
                  "end": 79,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "86d21c5c003980dd55ca4d1c671f142427a7304bd5de37e9b15ee06dd3cdf0d9",
                  "name": "DropdownMenuLabel",
                  "kind": "VariableDeclaration",
                  "start": 146,
                  "end": 161,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "c43f94ae22cc506ad609eeb39e791de843611754d8cc6b6a1cb9dd2a29f92117",
                  "name": "DropdownMenuSeparator",
                  "kind": "VariableDeclaration",
                  "start": 164,
                  "end": 173,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "500a5967ef8129c393684c2cc64512594cd48f4d9d6fa26d36e4e83c837ff501",
                  "name": "DropdownMenuRadioGroup",
                  "kind": "VariableDeclaration",
                  "start": 23,
                  "end": 23,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "f5e3cb05aad78927494d1c48689681545daa5ab0a67b17fa39012bc0b2b8b5d1",
                  "name": "DropdownMenuRadioItem",
                  "kind": "VariableDeclaration",
                  "start": 124,
                  "end": 143,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx"
                },
                {
                  "hash": "2af220b39ec51a46a50b168ca3356befef0fe3577456573dc1fcc4f53f8990c1",
                  "name": "SearcInput",
                  "kind": "FunctionDeclaration",
                  "start": 7,
                  "end": 22,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/search-input.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h2.tsx",
              "elements": [
                "H2"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx",
              "elements": [
                "DashboardFilters"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/cards/card-budget-usage.tsx",
              "elements": [
                "CardBudgetUsage"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/repo-list.tsx",
              "elements": [
                "RepositoryList"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts",
              "elements": [
                "getListOrgsForUser"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "auth"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "default",
              "type": "default",
              "from": "",
              "namespace": "default"
            }
          ],
          "blocks": [
            {
              "hash": "5dae552648089f8c16433dcea11e4e4010fbccc7f4b0d5f1e77be2c379edf2d7",
              "name": "Dashboard",
              "kind": "FunctionDeclaration",
              "content": "export default async function Dashboard(params: { q: string; owner: string }) {\r\n  const session = await auth();\r\n  const orgs = await getListOrgsForUser(session!.user.access_token);\r\n\r\n  return (\r\n    <div className=\"flex flex-col \">\r\n      <div className=\"grid grid-cols-4 mb-4 gap-2\">\r\n        <CardBudgetUsage />\r\n      </div>\r\n      <div className=\"flex flex-1 flex-col\">\r\n        <div className=\"flex flex-1 justify-between items-baseline mb-8\">\r\n          <H2 className=\"flex flex-1\">Repositórios</H2>\r\n          <DashboardFilters orgs={orgs} />\r\n        </div>\r\n\r\n        <RepositoryList {...params} />\r\n      </div>\r\n    </div>\r\n  );\r\n}",
              "start": 8,
              "end": 27,
              "dependencies": [
                {
                  "hash": "efb5d37f524dad7cf1a56215a10364d350d489777746676dfe01dae9b3b95290",
                  "name": "session",
                  "kind": "VariableDeclaration",
                  "start": 9,
                  "end": 9,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard.tsx"
                },
                {
                  "hash": "7c30b7f4db3c4c6cb380cdee4f362716efc60059e4ba2f979895a49bd702aefc",
                  "name": "orgs",
                  "kind": "VariableDeclaration",
                  "start": 10,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard.tsx"
                },
                {
                  "hash": "f888f3e38c43a94eabf269cf83a161ef434bd6bdac7c21c5b565ee99f02c55b9",
                  "name": "getListOrgsForUser",
                  "kind": "FunctionDeclaration",
                  "start": 21,
                  "end": 38,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "d8b0e21110efbd770bff6f22c1008e88da572d090c051fee78f804c9233ed178",
                  "name": "CardBudgetUsage",
                  "kind": "FunctionDeclaration",
                  "start": 9,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/cards/card-budget-usage.tsx"
                },
                {
                  "hash": "4baa9842432df5ba06b43cc13bbd470121c50c62828163b4793e3c5b9c1def91",
                  "name": "H2",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h2.tsx"
                },
                {
                  "hash": "a1d304acc6cc1ccdaa3fa955d5119edc4c40717d75b562fdcae6b5aa255f2037",
                  "name": "DashboardFilters",
                  "kind": "FunctionDeclaration",
                  "start": 18,
                  "end": 77,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard-filters.tsx"
                },
                {
                  "hash": "de97d5d99fd1b66841991da4de6adc4bd58c11b072913cb97fdadf34815f0af0",
                  "name": "RepositoryList",
                  "kind": "FunctionDeclaration",
                  "start": 17,
                  "end": 84,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/repo-list.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/page.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "auth"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard.tsx",
              "namespace": "Dashboard",
              "elements": [
                "Dashboard"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
              "elements": [
                "Card",
                "CardContent",
                "CardDescription",
                "CardHeader",
                "CardTitle"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/signin-button.tsx",
              "elements": [
                "SignInButton"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "default",
              "type": "default",
              "from": "",
              "namespace": "default"
            }
          ],
          "blocks": [
            {
              "hash": "96cfcdf74a94009fcfa5152f2ae4f38ef841b7dcb8789aec16ff16cdcdcbbe37",
              "name": "Home",
              "kind": "FunctionDeclaration",
              "content": "export default async function Home({\r\n  searchParams,\r\n}: {\r\n  searchParams: { q?: string; owner?: string };\r\n}) {\r\n  const session = await auth();\r\n  const { owner = session?.user.username || \"\", q = \"\" } = searchParams;\r\n\r\n  return (\r\n    <>\r\n      {session?.user && <Dashboard q={q} owner={owner} />}\r\n      {!session?.user && (\r\n        <div className=\"flex flex-1\">\r\n          <Card className=\"w-1/2 mx-auto\">\r\n            <CardHeader>\r\n              <CardTitle>Necessario realizar o login na plataforma</CardTitle>\r\n              <CardDescription>\r\n                Após o login poderá fazer a magíca acontecer!\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <SignInButton />\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}",
              "start": 12,
              "end": 40,
              "dependencies": [
                {
                  "hash": "f576b0f8201326832397b12872a5634adb1c1bd3329078faddba1db54c7eb3e5",
                  "name": "session",
                  "kind": "VariableDeclaration",
                  "start": 17,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/page.tsx"
                },
                {
                  "hash": "5dae552648089f8c16433dcea11e4e4010fbccc7f4b0d5f1e77be2c379edf2d7",
                  "name": "Dashboard",
                  "kind": "FunctionDeclaration",
                  "start": 8,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/dashboard.tsx"
                },
                {
                  "hash": "d95f1ea377f687c32187f1c0b3096fe0c9afc4871de2d5254fa212e4f4c7bef7",
                  "name": "Card",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "55388ca293052505bd767d3017f5401218c34102de4a8c6831023ea0dcbd73ea",
                  "name": "CardHeader",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "658972b7423a22294a8afd8caef27fc9c7565116159ad39a620a382743e50526",
                  "name": "CardTitle",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "89e88d1d3c971007ef909b958a638e1d97663ce76357a3838c6cf0ec6977555b",
                  "name": "CardDescription",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "6c6e7dacf54de308947ee6b098bfe08150972f61d03086cc818ff178dc3ce5fb",
                  "name": "CardContent",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 61,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "7e444c709d3c7fbab51370c8e7563aca9297d73e02affa3eb754c31cb006c2c5",
                  "name": "SignInButton",
                  "kind": "FunctionDeclaration",
                  "start": 7,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/signin-button.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/repo-list.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts",
              "elements": [
                "getUserInstalledRepos"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h3.tsx",
              "elements": [
                "H3"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
              "elements": [
                "Card",
                "CardContent",
                "CardDescription",
                "CardHeader",
                "CardTitle"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/scroll-area.tsx",
              "elements": [
                "ScrollAreaGrab",
                "ScrollBar"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "lucide-react",
              "elements": [
                "Eye"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next/link",
              "namespace": "Link",
              "elements": [
                "Link"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/cards/card-budget-usage.tsx",
              "elements": [
                "CardBudgetUsage"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "auth"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "RepositoryList",
              "type": "named",
              "from": "",
              "namespace": "RepositoryList"
            }
          ],
          "blocks": [
            {
              "hash": "de97d5d99fd1b66841991da4de6adc4bd58c11b072913cb97fdadf34815f0af0",
              "name": "RepositoryList",
              "kind": "FunctionDeclaration",
              "content": "export async function RepositoryList({\r\n  q = \"\",\r\n  owner,\r\n}: {\r\n  q?: string;\r\n  owner: string;\r\n}) {\r\n  const session = await auth();\r\n  const repos = await getUserInstalledRepos(session!.user.access_token, {\r\n    owner: owner,\r\n    search: q,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {repos.length === 0 && (\r\n        <div className=\"flex flex-1\">\r\n          <Card className=\"w-1/2 mx-auto\">\r\n            <CardHeader>\r\n              <CardTitle>Instale o aplicativo</CardTitle>\r\n              <CardDescription>\r\n                Instale o aplicativo na sua conta ou repositórios desejados,\r\n                eles vão aparece aqui!\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <Button variant={\"secondary\"} size={\"sm\"} asChild>\r\n                {/* ?target_id=108767781&target_type=Organization */}\r\n                <Link href=\"https://github.com/apps/projectwizapp/installations/new\">\r\n                  Instalar App\r\n                </Link>\r\n              </Button>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n      {repos.length > 0 && (\r\n        <div className=\"grid grid-cols-2 gap-2\">\r\n          {repos.map((repo) => (\r\n            <div key={repo.id} className=\"mb-4\">\r\n              <div className=\"flex items-baseline border-b justify-between mb-4 pb-2\">\r\n                <H3>\r\n                  {repo.name}{\" \"}\r\n                  <span className=\"text-sm text-muted-foreground\">\r\n                    {repo.owner}\r\n                  </span>\r\n                </H3>\r\n\r\n                <Link href={`/repository/${repo.owner}/${repo.name}`}>\r\n                  <Button variant=\"outline\" size=\"icon\">\r\n                    <Eye className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </Link>\r\n              </div>\r\n\r\n              <ScrollAreaGrab className=\"w-full pb-3\">\r\n                <div className=\"flex w-max gap-4\">\r\n                  <CardBudgetUsage />\r\n                </div>\r\n                <ScrollBar className=\"\" orientation=\"horizontal\" />\r\n              </ScrollAreaGrab>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}",
              "start": 17,
              "end": 84,
              "dependencies": [
                {
                  "hash": "49aa690b92d6afa68679420df9e3910e336e7a770c08c8838f2f648729d77300",
                  "name": "session",
                  "kind": "VariableDeclaration",
                  "start": 24,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/repo-list.tsx"
                },
                {
                  "hash": "4215f7125a2f810cb1bae5ec5cbeda33c01f242512e25551b43a80bd3b5fe0f4",
                  "name": "repos",
                  "kind": "VariableDeclaration",
                  "start": 25,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/(root)/repo-list.tsx"
                },
                {
                  "hash": "906abbc7290c991d75f39a27ffdc29562905ffcc3e0d546871780a2c63839c9f",
                  "name": "getUserInstalledRepos",
                  "kind": "FunctionDeclaration",
                  "start": 148,
                  "end": 194,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "d95f1ea377f687c32187f1c0b3096fe0c9afc4871de2d5254fa212e4f4c7bef7",
                  "name": "Card",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "55388ca293052505bd767d3017f5401218c34102de4a8c6831023ea0dcbd73ea",
                  "name": "CardHeader",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "658972b7423a22294a8afd8caef27fc9c7565116159ad39a620a382743e50526",
                  "name": "CardTitle",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "89e88d1d3c971007ef909b958a638e1d97663ce76357a3838c6cf0ec6977555b",
                  "name": "CardDescription",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "6c6e7dacf54de308947ee6b098bfe08150972f61d03086cc818ff178dc3ce5fb",
                  "name": "CardContent",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 61,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                },
                {
                  "hash": "c22f7c22cfd2571c92f49d14047c5fd96156578807046defd4d7ddcb64bbc213",
                  "name": "H3",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h3.tsx"
                },
                {
                  "hash": "b2cf8913545cbbd36a8ac71c753ddc0e9bdab1c5a99a74ff81e87b7018bc3ffb",
                  "name": "ScrollAreaGrab",
                  "kind": "VariableDeclaration",
                  "start": 48,
                  "end": 111,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/scroll-area.tsx"
                },
                {
                  "hash": "d8b0e21110efbd770bff6f22c1008e88da572d090c051fee78f804c9233ed178",
                  "name": "CardBudgetUsage",
                  "kind": "FunctionDeclaration",
                  "start": 9,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/cards/card-budget-usage.tsx"
                },
                {
                  "hash": "d222bbde10e8ba135c09e340902d2a1da05c125a16e4bc2c25a21f240851df6f",
                  "name": "ScrollBar",
                  "kind": "VariableDeclaration",
                  "start": 26,
                  "end": 45,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/scroll-area.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/cards/card-budget-usage.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
              "elements": [
                "Card",
                "CardContent",
                "CardDescription",
                "CardHeader",
                "CardTitle"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "CardBudgetUsage",
              "type": "named",
              "from": "",
              "namespace": "CardBudgetUsage"
            }
          ],
          "blocks": [
            {
              "hash": "d8b0e21110efbd770bff6f22c1008e88da572d090c051fee78f804c9233ed178",
              "name": "CardBudgetUsage",
              "kind": "FunctionDeclaration",
              "content": "export async function CardBudgetUsage({\r\n  total = 0,\r\n  used = 0,\r\n  shared = 0,\r\n  dedicate = 0,\r\n}: {\r\n  total?: number;\r\n  shared?: number;\r\n  dedicate?: number;\r\n  used?: number;\r\n}) {\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <CardTitle>Uso do orçamento</CardTitle>\r\n        <CardDescription>{\"Acompanhe uso do seu orçamento.\"}</CardDescription>\r\n      </CardHeader>\r\n      <CardContent className=\"grid grid-cols-2 gap-4\">\r\n        <div className=\"flex items-baseline gap-1 text-md font-bold tabular-nums leading-none\">\r\n          $ {total.toFixed(2) || \"0,00\"}\r\n          <span className=\"text-xs font-normal text-muted-foreground\">\r\n            total\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-baseline gap-1 text-md font-bold tabular-nums leading-none\">\r\n          $ {dedicate.toFixed(2) || \"0,00\"}\r\n          <span className=\"text-xs font-normal text-muted-foreground\">\r\n            dedicado\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-baseline gap-1 text-md font-bold tabular-nums leading-none\">\r\n          $ {shared.toFixed(2) || \"0,00\"}\r\n          <span className=\"text-xs font-normal text-muted-foreground\">\r\n            compart.\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-baseline gap-1 text-md font-bold tabular-nums leading-none\">\r\n          $ {used.toFixed(2) || \"0,00\"}\r\n          <span className=\"text-xs font-normal text-muted-foreground\">\r\n            usado\r\n          </span>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}",
              "start": 9,
              "end": 54,
              "dependencies": [
                {
                  "hash": "d95f1ea377f687c32187f1c0b3096fe0c9afc4871de2d5254fa212e4f4c7bef7",
                  "name": "Card",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "55388ca293052505bd767d3017f5401218c34102de4a8c6831023ea0dcbd73ea",
                  "name": "CardHeader",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "658972b7423a22294a8afd8caef27fc9c7565116159ad39a620a382743e50526",
                  "name": "CardTitle",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "89e88d1d3c971007ef909b958a638e1d97663ce76357a3838c6cf0ec6977555b",
                  "name": "CardDescription",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "6c6e7dacf54de308947ee6b098bfe08150972f61d03086cc818ff178dc3ce5fb",
                  "name": "CardContent",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 61,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/providers/auth-provider.tsx",
          "imports": [
            {
              "moduleSpecifier": "next-auth/react",
              "elements": [
                "SessionProvider",
                "SessionProviderProps"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "AuthProvider",
              "type": "named",
              "from": "",
              "namespace": "AuthProvider"
            }
          ],
          "blocks": [
            {
              "hash": "9d38ccd1c3975d2e8b34e560da9244a3b57b1bdc41cfd9979ad2358afe3cb211",
              "name": "AuthProvider",
              "kind": "FunctionDeclaration",
              "content": "export function AuthProvider({ children, ...props }: SessionProviderProps) {\r\n  return <SessionProvider {...props}>{children}</SessionProvider>;\r\n}",
              "start": 5,
              "end": 7,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/providers/theme-provider.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-themes",
              "elements": [
                "ThemeProvider"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-themes/dist/types",
              "elements": [
                "ThemeProviderProps"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ThemeProvider",
              "type": "named",
              "from": "",
              "namespace": "ThemeProvider"
            }
          ],
          "blocks": [
            {
              "hash": "d688eabade1d42c5cd52143e0a08fb2a0c0f0877381e55317bd2b51d3fcc7414",
              "name": "ThemeProvider",
              "kind": "FunctionDeclaration",
              "content": "export function ThemeProvider({ children, ...props }: ThemeProviderProps) {\r\n  return <NextThemesProvider {...props}>{children}</NextThemesProvider>;\r\n}",
              "start": 7,
              "end": 9,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h1.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react",
              "elements": [
                "ReactNode"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "H1",
              "type": "named",
              "from": "",
              "namespace": "H1"
            }
          ],
          "blocks": [
            {
              "hash": "4d070c0965de8b95f2abacae6eda0b35227f8defc81493bfc7e06cba32e3a7aa",
              "name": "H1",
              "kind": "FunctionDeclaration",
              "content": "export function H1({\r\n  children,\r\n  className,\r\n}: {\r\n  children: ReactNode;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <h1\r\n      className={cn(\r\n        \"scroll-m-20 text-4xl font-extrabold tracking-tight lg:text-5xl\",\r\n        className\r\n      )}\r\n    >\r\n      {children}\r\n    </h1>\r\n  );\r\n}",
              "start": 4,
              "end": 21,
              "dependencies": [
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h2.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react",
              "elements": [
                "ReactNode"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "H2",
              "type": "named",
              "from": "",
              "namespace": "H2"
            }
          ],
          "blocks": [
            {
              "hash": "4baa9842432df5ba06b43cc13bbd470121c50c62828163b4793e3c5b9c1def91",
              "name": "H2",
              "kind": "FunctionDeclaration",
              "content": "export function H2({\r\n  children,\r\n  className,\r\n}: {\r\n  children: ReactNode;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <h2\r\n      className={cn(\r\n        \"scroll-m-20 pb-2 text-3xl font-semibold tracking-tight first:mt-0\",\r\n        className\r\n      )}\r\n    >\r\n      {children}\r\n    </h2>\r\n  );\r\n}",
              "start": 4,
              "end": 21,
              "dependencies": [
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h3.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react",
              "elements": [
                "ReactNode"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "H3",
              "type": "named",
              "from": "",
              "namespace": "H3"
            }
          ],
          "blocks": [
            {
              "hash": "c22f7c22cfd2571c92f49d14047c5fd96156578807046defd4d7ddcb64bbc213",
              "name": "H3",
              "kind": "FunctionDeclaration",
              "content": "export function H3({\r\n  children,\r\n  className,\r\n}: {\r\n  children: ReactNode;\r\n  className?: string;\r\n}) {\r\n  return (\r\n    <h2\r\n      className={cn(\r\n        \"scroll-m-20 text-2xl font-semibold tracking-tight\",\r\n        className\r\n      )}\r\n    >\r\n      {children}\r\n    </h2>\r\n  );\r\n}",
              "start": 4,
              "end": 21,
              "dependencies": [
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/accordion.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-accordion",
              "elements": [
                "AccordionPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "ChevronDownIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Accordion",
              "type": "named",
              "from": "",
              "namespace": "Accordion"
            },
            {
              "name": "AccordionItem",
              "type": "named",
              "from": "",
              "namespace": "AccordionItem"
            },
            {
              "name": "AccordionTrigger",
              "type": "named",
              "from": "",
              "namespace": "AccordionTrigger"
            },
            {
              "name": "AccordionContent",
              "type": "named",
              "from": "",
              "namespace": "AccordionContent"
            }
          ],
          "blocks": [
            {
              "hash": "5c9274a4402434f6411442663754576271b447398e7e8c1969362499952e8441",
              "name": "Accordion",
              "kind": "VariableStatement",
              "content": "const Accordion = AccordionPrimitive.Root",
              "start": 9,
              "end": 9,
              "dependencies": []
            },
            {
              "hash": "480938670b236763ecb0ae00b862fc7c8f672869ef45fde80a2f87e30a8c913a",
              "name": "AccordionItem",
              "kind": "VariableStatement",
              "content": "const AccordionItem = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <AccordionPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\"border-b\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 11,
              "end": 20,
              "dependencies": []
            },
            {
              "hash": "9d4b850fed79b5778c6874fdceded4fdba19b7af63b32a763f3b4f00e6d2b053",
              "name": "AccordionTrigger",
              "kind": "VariableStatement",
              "content": "const AccordionTrigger = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Header className=\"flex\">\r\n    <AccordionPrimitive.Trigger\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex flex-1 items-center justify-between py-4 text-sm font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <ChevronDownIcon className=\"h-4 w-4 shrink-0 text-muted-foreground transition-transform duration-200\" />\r\n    </AccordionPrimitive.Trigger>\r\n  </AccordionPrimitive.Header>\r\n))",
              "start": 23,
              "end": 40,
              "dependencies": []
            },
            {
              "hash": "4f4cbdf3ffce2bdcf4d781798aa475a8e22440ebde96e8140ce0bd92f9d251c7",
              "name": "AccordionContent",
              "kind": "VariableStatement",
              "content": "const AccordionContent = React.forwardRef<\r\n  React.ElementRef<typeof AccordionPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <AccordionPrimitive.Content\r\n    ref={ref}\r\n    className=\"overflow-hidden text-sm data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\r\n    {...props}\r\n  >\r\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\r\n  </AccordionPrimitive.Content>\r\n))",
              "start": 43,
              "end": 54,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/alert-dialog.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-alert-dialog",
              "elements": [
                "AlertDialogPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "buttonVariants"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "AlertDialog",
              "type": "named",
              "from": "",
              "namespace": "AlertDialog"
            },
            {
              "name": "AlertDialogPortal",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogPortal"
            },
            {
              "name": "AlertDialogOverlay",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogOverlay"
            },
            {
              "name": "AlertDialogTrigger",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogTrigger"
            },
            {
              "name": "AlertDialogContent",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogContent"
            },
            {
              "name": "AlertDialogHeader",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogHeader"
            },
            {
              "name": "AlertDialogHeader",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogHeader"
            },
            {
              "name": "AlertDialogFooter",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogFooter"
            },
            {
              "name": "AlertDialogFooter",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogFooter"
            },
            {
              "name": "AlertDialogTitle",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogTitle"
            },
            {
              "name": "AlertDialogDescription",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogDescription"
            },
            {
              "name": "AlertDialogAction",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogAction"
            },
            {
              "name": "AlertDialogCancel",
              "type": "named",
              "from": "",
              "namespace": "AlertDialogCancel"
            }
          ],
          "blocks": [
            {
              "hash": "c974dd8c5ce57c644f3e0039ff4b16b0d1727d52094075652bb3af5ae1ce32d7",
              "name": "AlertDialog",
              "kind": "VariableStatement",
              "content": "const AlertDialog = AlertDialogPrimitive.Root",
              "start": 9,
              "end": 9,
              "dependencies": []
            },
            {
              "hash": "c9bd75fc37c986cc0b865eeb9e8a948a5fd960febde44eb17b648e881a07506a",
              "name": "AlertDialogTrigger",
              "kind": "VariableStatement",
              "content": "const AlertDialogTrigger = AlertDialogPrimitive.Trigger",
              "start": 11,
              "end": 11,
              "dependencies": []
            },
            {
              "hash": "bad46ec6791f9080212431076c2a746e226b52e0ee79d44ff4c3663bf8298cfa",
              "name": "AlertDialogPortal",
              "kind": "VariableStatement",
              "content": "const AlertDialogPortal = AlertDialogPrimitive.Portal",
              "start": 13,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "271c9e0f19a935d3e557f50d491d9cbe35520afa22f5173858b9e599ff0fd60c",
              "name": "AlertDialogOverlay",
              "kind": "VariableStatement",
              "content": "const AlertDialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))",
              "start": 15,
              "end": 27,
              "dependencies": []
            },
            {
              "hash": "1ca636112dd93a59374672ada339267c98130dbe24d14e38b3ce69c304aa9637",
              "name": "AlertDialogContent",
              "kind": "VariableStatement",
              "content": "const AlertDialogContent = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPortal>\r\n    <AlertDialogOverlay />\r\n    <AlertDialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </AlertDialogPortal>\r\n))",
              "start": 30,
              "end": 45,
              "dependencies": []
            },
            {
              "hash": "11528ded23d8672054c725305d73d66353a141ebae8b9e452fadff1581c5503d",
              "name": "AlertDialogHeader",
              "kind": "VariableStatement",
              "content": "const AlertDialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 48,
              "end": 59,
              "dependencies": []
            },
            {
              "hash": "8d162bce4f497ef3fcde92fe61c0e2c83a0ef8ac217e72120721ef7f9c021509",
              "name": "AlertDialogFooter",
              "kind": "VariableStatement",
              "content": "const AlertDialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 62,
              "end": 73,
              "dependencies": []
            },
            {
              "hash": "761860b7b77dce567189f315846095a94ee756bc0e5732db22d284eef84713bb",
              "name": "AlertDialogTitle",
              "kind": "VariableStatement",
              "content": "const AlertDialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 76,
              "end": 85,
              "dependencies": []
            },
            {
              "hash": "5f6fb61a4cfa1c987d8c0624a2b4593cbf395396b879c90d91918b4ae2318408",
              "name": "AlertDialogDescription",
              "kind": "VariableStatement",
              "content": "const AlertDialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 88,
              "end": 97,
              "dependencies": []
            },
            {
              "hash": "030ebe8b59abc4fad9ade8626ea0877027c9d4bcc2f8ac3b21dbd32864d39bbe",
              "name": "AlertDialogAction",
              "kind": "VariableStatement",
              "content": "const AlertDialogAction = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Action\r\n    ref={ref}\r\n    className={cn(buttonVariants(), className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 101,
              "end": 110,
              "dependencies": []
            },
            {
              "hash": "35b96c16514ca896a9c0d9453d941ff7dbb24f3c81c67a3d6c732778804c29d5",
              "name": "AlertDialogCancel",
              "kind": "VariableStatement",
              "content": "const AlertDialogCancel = React.forwardRef<\r\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\r\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\r\n>(({ className, ...props }, ref) => (\r\n  <AlertDialogPrimitive.Cancel\r\n    ref={ref}\r\n    className={cn(\r\n      buttonVariants({ variant: \"outline\" }),\r\n      \"mt-2 sm:mt-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 113,
              "end": 126,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/alert.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Alert",
              "type": "named",
              "from": "",
              "namespace": "Alert"
            },
            {
              "name": "AlertTitle",
              "type": "named",
              "from": "",
              "namespace": "AlertTitle"
            },
            {
              "name": "AlertDescription",
              "type": "named",
              "from": "",
              "namespace": "AlertDescription"
            }
          ],
          "blocks": [
            {
              "hash": "eee7ec699833c58118c4cb6d6d27e1057080ebc7202293905489b6caab4140a3",
              "name": "alertVariants",
              "kind": "VariableStatement",
              "content": "const alertVariants = cva(\r\n  \"relative w-full rounded-lg border px-4 py-3 text-sm [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground [&>svg~*]:pl-7\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-background text-foreground\",\r\n        destructive:\r\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)",
              "start": 6,
              "end": 20,
              "dependencies": []
            },
            {
              "hash": "1d5b2c82ab98ad3a7d7c151e2d221d43c93dc5c5f5c11de49e8e35c218102bfe",
              "name": "Alert",
              "kind": "VariableStatement",
              "content": "const Alert = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\r\n>(({ className, variant, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    role=\"alert\"\r\n    className={cn(alertVariants({ variant }), className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 22,
              "end": 32,
              "dependencies": []
            },
            {
              "hash": "73aad7f4a3840f0f8f803fed9347e7df6660d35cec8f00777fef7fa37a8e0253",
              "name": "AlertTitle",
              "kind": "VariableStatement",
              "content": "const AlertTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h5\r\n    ref={ref}\r\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 35,
              "end": 44,
              "dependencies": []
            },
            {
              "hash": "983d09dc9d4404fc2123c318747040a4c92f2a5e5cc9a87300f99d2b7c57cef2",
              "name": "AlertDescription",
              "kind": "VariableStatement",
              "content": "const AlertDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 47,
              "end": 56,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/aspect-ratio.tsx",
          "imports": [
            {
              "moduleSpecifier": "@radix-ui/react-aspect-ratio",
              "elements": [
                "AspectRatioPrimitive"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "AspectRatio",
              "type": "named",
              "from": "",
              "namespace": "AspectRatio"
            }
          ],
          "blocks": [
            {
              "hash": "e6c0214994d435fce605f1b5033439e625b5694aeada0143761eacbb2f691af8",
              "name": "AspectRatio",
              "kind": "VariableStatement",
              "content": "const AspectRatio = AspectRatioPrimitive.Root",
              "start": 5,
              "end": 5,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/avatar.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-avatar",
              "elements": [
                "AvatarPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Avatar",
              "type": "named",
              "from": "",
              "namespace": "Avatar"
            },
            {
              "name": "AvatarImage",
              "type": "named",
              "from": "",
              "namespace": "AvatarImage"
            },
            {
              "name": "AvatarFallback",
              "type": "named",
              "from": "",
              "namespace": "AvatarFallback"
            }
          ],
          "blocks": [
            {
              "hash": "1d5dc41abdbf29d0b1688a948b26f4c6340bad6fc240bb01b1bb2a223bd90462",
              "name": "Avatar",
              "kind": "VariableStatement",
              "content": "const Avatar = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 8,
              "end": 20,
              "dependencies": []
            },
            {
              "hash": "496040a5b36728657db3432a748748bc0095df65407cc906c4af0f742c9468f2",
              "name": "AvatarImage",
              "kind": "VariableStatement",
              "content": "const AvatarImage = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Image>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Image\r\n    ref={ref}\r\n    className={cn(\"aspect-square h-full w-full\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 23,
              "end": 32,
              "dependencies": []
            },
            {
              "hash": "e6bf7985f3921341c471d3c895b11f4ece2fd3cf49ae5d61fea8dbafc2e94092",
              "name": "AvatarFallback",
              "kind": "VariableStatement",
              "content": "const AvatarFallback = React.forwardRef<\r\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\r\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\r\n>(({ className, ...props }, ref) => (\r\n  <AvatarPrimitive.Fallback\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 35,
              "end": 47,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/badge.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "BadgeProps",
              "type": "named",
              "from": "",
              "namespace": "BadgeProps"
            },
            {
              "name": "Badge",
              "type": "named",
              "from": "",
              "namespace": "Badge"
            },
            {
              "name": "badgeVariants",
              "type": "named",
              "from": "",
              "namespace": "badgeVariants"
            }
          ],
          "blocks": [
            {
              "hash": "eac060a40510be92d0306dfe7fed2ed6bdfb61ba1f69e556db2b6171830efd5d",
              "name": "badgeVariants",
              "kind": "VariableStatement",
              "content": "const badgeVariants = cva(\r\n  \"inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80\",\r\n        secondary:\r\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\r\n        destructive:\r\n          \"border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80\",\r\n        outline: \"text-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)",
              "start": 6,
              "end": 24,
              "dependencies": []
            },
            {
              "hash": "f91e06e5022b8e02b542b14c4317c20d46521a358e4b28c7dfcdb5dee5301ee5",
              "name": "BadgeProps",
              "kind": "InterfaceDeclaration",
              "content": "export interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}",
              "start": 26,
              "end": 28,
              "dependencies": [
                {
                  "hash": "f45037d25e94665b00fa3ef62c01871455d4e41c8d4121d35ef83daab4cab48d",
                  "name": "badgeVariants",
                  "kind": "VariableDeclaration",
                  "start": 6,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/badge.tsx"
                }
              ]
            },
            {
              "hash": "1d9c0d6dcd388a70bf14892cd6351f33f863c85876f170944aa3171f3b6e528c",
              "name": "Badge",
              "kind": "FunctionDeclaration",
              "content": "function Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  )\r\n}",
              "start": 30,
              "end": 34,
              "dependencies": [
                {
                  "hash": "f91e06e5022b8e02b542b14c4317c20d46521a358e4b28c7dfcdb5dee5301ee5",
                  "name": "BadgeProps",
                  "kind": "InterfaceDeclaration",
                  "start": 26,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/badge.tsx"
                },
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                },
                {
                  "hash": "f45037d25e94665b00fa3ef62c01871455d4e41c8d4121d35ef83daab4cab48d",
                  "name": "badgeVariants",
                  "kind": "VariableDeclaration",
                  "start": 6,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/badge.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/breadcrumb.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "ChevronRightIcon",
                "DotsHorizontalIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-slot",
              "elements": [
                "Slot"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Breadcrumb",
              "type": "named",
              "from": "",
              "namespace": "Breadcrumb"
            },
            {
              "name": "BreadcrumbList",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbList"
            },
            {
              "name": "BreadcrumbItem",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbItem"
            },
            {
              "name": "BreadcrumbLink",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbLink"
            },
            {
              "name": "BreadcrumbPage",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbPage"
            },
            {
              "name": "BreadcrumbSeparator",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbSeparator"
            },
            {
              "name": "BreadcrumbSeparator",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbSeparator"
            },
            {
              "name": "BreadcrumbEllipsis",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbEllipsis"
            },
            {
              "name": "BreadcrumbEllipsis",
              "type": "named",
              "from": "",
              "namespace": "BreadcrumbEllipsis"
            }
          ],
          "blocks": [
            {
              "hash": "b94cda293adf2e29523eea67928e4367d622b6db070a9f2437a6ef35f086c20f",
              "name": "Breadcrumb",
              "kind": "VariableStatement",
              "content": "const Breadcrumb = React.forwardRef<\r\n  HTMLElement,\r\n  React.ComponentPropsWithoutRef<\"nav\"> & {\r\n    separator?: React.ReactNode\r\n  }\r\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)",
              "start": 7,
              "end": 12,
              "dependencies": []
            },
            {
              "hash": "0a9090825b8efa2b8c9f570eed389b32611cda53f498a22607ad9b3bd3483e83",
              "name": "BreadcrumbList",
              "kind": "VariableStatement",
              "content": "const BreadcrumbList = React.forwardRef<\r\n  HTMLOListElement,\r\n  React.ComponentPropsWithoutRef<\"ol\">\r\n>(({ className, ...props }, ref) => (\r\n  <ol\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 15,
              "end": 27,
              "dependencies": []
            },
            {
              "hash": "a3a92911f53ad711cc784bc7ede8846f78c6755482f39f28564bd7ec65c56099",
              "name": "BreadcrumbItem",
              "kind": "VariableStatement",
              "content": "const BreadcrumbItem = React.forwardRef<\r\n  HTMLLIElement,\r\n  React.ComponentPropsWithoutRef<\"li\">\r\n>(({ className, ...props }, ref) => (\r\n  <li\r\n    ref={ref}\r\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 30,
              "end": 39,
              "dependencies": []
            },
            {
              "hash": "c12e44ba71c9e399c64e1d879066604e0b291bc2813bafa7b78d7228e495fae0",
              "name": "BreadcrumbLink",
              "kind": "VariableStatement",
              "content": "const BreadcrumbLink = React.forwardRef<\r\n  HTMLAnchorElement,\r\n  React.ComponentPropsWithoutRef<\"a\"> & {\r\n    asChild?: boolean\r\n  }\r\n>(({ asChild, className, ...props }, ref) => {\r\n  const Comp = asChild ? Slot : \"a\"\r\n\r\n  return (\r\n    <Comp\r\n      ref={ref}\r\n      className={cn(\"transition-colors hover:text-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})",
              "start": 42,
              "end": 57,
              "dependencies": []
            },
            {
              "hash": "0b84b833e7d2cc07d608d5b3d820cb3ad9d7b89686eba54090d37681b1776b23",
              "name": "BreadcrumbPage",
              "kind": "VariableStatement",
              "content": "const BreadcrumbPage = React.forwardRef<\r\n  HTMLSpanElement,\r\n  React.ComponentPropsWithoutRef<\"span\">\r\n>(({ className, ...props }, ref) => (\r\n  <span\r\n    ref={ref}\r\n    role=\"link\"\r\n    aria-disabled=\"true\"\r\n    aria-current=\"page\"\r\n    className={cn(\"font-normal text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 60,
              "end": 72,
              "dependencies": []
            },
            {
              "hash": "ccce7a337fa66178d91ac8c2bc91b942cb8b334cbcc2e1fddf709e9d78b6943f",
              "name": "BreadcrumbSeparator",
              "kind": "VariableStatement",
              "content": "const BreadcrumbSeparator = ({\r\n  children,\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"li\">) => (\r\n  <li\r\n    role=\"presentation\"\r\n    aria-hidden=\"true\"\r\n    className={cn(\"[&>svg]:size-3.5\", className)}\r\n    {...props}\r\n  >\r\n    {children ?? <ChevronRightIcon />}\r\n  </li>\r\n)",
              "start": 75,
              "end": 88,
              "dependencies": []
            },
            {
              "hash": "392c3315ec4daf5c7670c7ec01e3756a4322c7d425813ea91ba9801b7320db61",
              "name": "BreadcrumbEllipsis",
              "kind": "VariableStatement",
              "content": "const BreadcrumbEllipsis = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"span\">) => (\r\n  <span\r\n    role=\"presentation\"\r\n    aria-hidden=\"true\"\r\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\r\n    {...props}\r\n  >\r\n    <DotsHorizontalIcon className=\"h-4 w-4\" />\r\n    <span className=\"sr-only\">More</span>\r\n  </span>\r\n)",
              "start": 91,
              "end": 104,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-slot",
              "elements": [
                "Slot"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ButtonProps",
              "type": "named",
              "from": "",
              "namespace": "ButtonProps"
            },
            {
              "name": "Button",
              "type": "named",
              "from": "",
              "namespace": "Button"
            },
            {
              "name": "buttonVariants",
              "type": "named",
              "from": "",
              "namespace": "buttonVariants"
            }
          ],
          "blocks": [
            {
              "hash": "4e86a44bba290de0f012caabc5f13b03042dec298e2b7b528e4be11abf7e2281",
              "name": "buttonVariants",
              "kind": "VariableStatement",
              "content": "const buttonVariants = cva(\r\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)",
              "start": 7,
              "end": 35,
              "dependencies": []
            },
            {
              "hash": "27a50950e3ac1b8db6c7d59a7e67310d562a429e377bb633e43785f9d6db8d47",
              "name": "ButtonProps",
              "kind": "InterfaceDeclaration",
              "content": "export interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean\r\n}",
              "start": 37,
              "end": 41,
              "dependencies": [
                {
                  "hash": "9542836c3d1d554d5f0a35b9f9bd863a913f8893a842011e7c4aae1482ad5475",
                  "name": "buttonVariants",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                }
              ]
            },
            {
              "hash": "6de6923d986e4bf66a4888a19e6f57761be95923b97eec2d43c9af73576b35f0",
              "name": "Button",
              "kind": "VariableStatement",
              "content": "const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\"\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)",
              "start": 43,
              "end": 54,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/calendar.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "ChevronLeftIcon",
                "ChevronRightIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react-day-picker",
              "elements": [
                "DayPicker"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "buttonVariants"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "CalendarProps",
              "type": "named",
              "from": "",
              "namespace": "CalendarProps"
            },
            {
              "name": "Calendar",
              "type": "named",
              "from": "",
              "namespace": "Calendar"
            },
            {
              "name": "Calendar",
              "type": "named",
              "from": "",
              "namespace": "Calendar"
            }
          ],
          "blocks": [
            {
              "hash": "acee6962f6f2131a22e83519a99eb2e2cd94cddca84a965108696d5e6e63ddf4",
              "name": "CalendarProps",
              "kind": "TypeAliasDeclaration",
              "content": "export type CalendarProps = React.ComponentProps<typeof DayPicker>;",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "ede38c7d61d40ac3707e344fef7f17be39a1a755ea23d412f4211160332ec988",
              "name": "Calendar",
              "kind": "FunctionDeclaration",
              "content": "function Calendar({\r\n  className,\r\n  classNames,\r\n  showOutsideDays = true,\r\n  ...props\r\n}: CalendarProps) {\r\n  return (\r\n    <DayPicker\r\n      showOutsideDays={showOutsideDays}\r\n      className={cn(\"p-3\", className)}\r\n      classNames={{\r\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\r\n        month: \"space-y-4\",\r\n        caption: \"flex justify-center pt-1 relative items-center\",\r\n        caption_label: \"text-sm font-medium\",\r\n        nav: \"space-x-1 flex items-center\",\r\n        nav_button: cn(\r\n          buttonVariants({ variant: \"outline\" }),\r\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\r\n        ),\r\n        nav_button_previous: \"absolute left-1\",\r\n        nav_button_next: \"absolute right-1\",\r\n        table: \"w-full border-collapse space-y-1\",\r\n        head_row: \"flex\",\r\n        head_cell:\r\n          \"text-muted-foreground rounded-md w-8 font-normal text-[0.8rem]\",\r\n        row: \"flex w-full mt-2\",\r\n        cell: cn(\r\n          \"relative p-0 text-center text-sm focus-within:relative focus-within:z-20 [&:has([aria-selected])]:bg-accent [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected].day-range-end)]:rounded-r-md\",\r\n          props.mode === \"range\"\r\n            ? \"[&:has(>.day-range-end)]:rounded-r-md [&:has(>.day-range-start)]:rounded-l-md first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md\"\r\n            : \"[&:has([aria-selected])]:rounded-md\"\r\n        ),\r\n        day: cn(\r\n          buttonVariants({ variant: \"ghost\" }),\r\n          \"h-8 w-8 p-0 font-normal aria-selected:opacity-100\"\r\n        ),\r\n        day_range_start: \"day-range-start\",\r\n        day_range_end: \"day-range-end\",\r\n        day_selected:\r\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\r\n        day_today: \"bg-accent text-accent-foreground\",\r\n        day_outside:\r\n          \"day-outside text-muted-foreground opacity-50  aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\r\n        day_disabled: \"text-muted-foreground opacity-50\",\r\n        day_range_middle:\r\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\r\n        day_hidden: \"invisible\",\r\n        ...classNames,\r\n      }}\r\n      components={{\r\n        IconLeft: ({ className }) => (\r\n          <ChevronLeftIcon className={cn(\"h-4 w-4\", className)} />\r\n        ),\r\n        IconRight: ({ className }) => (\r\n          <ChevronRightIcon className={cn(\"h-4 w-4\", className)} />\r\n        ),\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}",
              "start": 12,
              "end": 73,
              "dependencies": [
                {
                  "hash": "acee6962f6f2131a22e83519a99eb2e2cd94cddca84a965108696d5e6e63ddf4",
                  "name": "CalendarProps",
                  "kind": "TypeAliasDeclaration",
                  "start": 10,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/calendar.tsx"
                },
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                },
                {
                  "hash": "9542836c3d1d554d5f0a35b9f9bd863a913f8893a842011e7c4aae1482ad5475",
                  "name": "buttonVariants",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 35,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Card",
              "type": "named",
              "from": "",
              "namespace": "Card"
            },
            {
              "name": "CardHeader",
              "type": "named",
              "from": "",
              "namespace": "CardHeader"
            },
            {
              "name": "CardFooter",
              "type": "named",
              "from": "",
              "namespace": "CardFooter"
            },
            {
              "name": "CardTitle",
              "type": "named",
              "from": "",
              "namespace": "CardTitle"
            },
            {
              "name": "CardDescription",
              "type": "named",
              "from": "",
              "namespace": "CardDescription"
            },
            {
              "name": "CardContent",
              "type": "named",
              "from": "",
              "namespace": "CardContent"
            }
          ],
          "blocks": [
            {
              "hash": "0681da062470508a0d522086dbba949b40e748cc7deff95e7e00ebe6de4de186",
              "name": "Card",
              "kind": "VariableStatement",
              "content": "const Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-xl border bg-card text-card-foreground shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 5,
              "end": 17,
              "dependencies": []
            },
            {
              "hash": "c603b830e70039cf6bb76c357224ee92c2b2825efa6064a8a09c988d362479c1",
              "name": "CardHeader",
              "kind": "VariableStatement",
              "content": "const CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 20,
              "end": 29,
              "dependencies": []
            },
            {
              "hash": "cc1387afa94e16183d5e207d8c878a9e140cb795bdc47a473eaed74eaa1ef024",
              "name": "CardTitle",
              "kind": "VariableStatement",
              "content": "const CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 32,
              "end": 41,
              "dependencies": []
            },
            {
              "hash": "f4077890a948e137b0c9f7509bef570f81bbc39455de08be7a53e14aecb27b11",
              "name": "CardDescription",
              "kind": "VariableStatement",
              "content": "const CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 44,
              "end": 53,
              "dependencies": []
            },
            {
              "hash": "49a568aa24414f02c9bd0b77927cfd6cd09daa510237bcf6914d7cd39e96df4c",
              "name": "CardContent",
              "kind": "VariableStatement",
              "content": "const CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))",
              "start": 56,
              "end": 61,
              "dependencies": []
            },
            {
              "hash": "9257da4a39ca2cd4d0babb93cd5d3a0a9802585a0d051e1898b156cc8c942e86",
              "name": "CardFooter",
              "kind": "VariableStatement",
              "content": "const CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 64,
              "end": 73,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "ArrowLeftIcon",
                "ArrowRightIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "embla-carousel-react",
              "namespace": "useEmblaCarousel",
              "elements": [
                "useEmblaCarousel"
              ],
              "isDefault": true
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "CarouselApi",
              "type": "named",
              "from": "",
              "namespace": "CarouselApi"
            },
            {
              "name": "Carousel",
              "type": "named",
              "from": "",
              "namespace": "Carousel"
            },
            {
              "name": "CarouselContent",
              "type": "named",
              "from": "",
              "namespace": "CarouselContent"
            },
            {
              "name": "CarouselItem",
              "type": "named",
              "from": "",
              "namespace": "CarouselItem"
            },
            {
              "name": "CarouselPrevious",
              "type": "named",
              "from": "",
              "namespace": "CarouselPrevious"
            },
            {
              "name": "CarouselNext",
              "type": "named",
              "from": "",
              "namespace": "CarouselNext"
            }
          ],
          "blocks": [
            {
              "hash": "04e32be5e135dbd346567e3e646008ea06a4454de9f467bec3ae09ebcd9a9650",
              "name": "CarouselApi",
              "kind": "TypeAliasDeclaration",
              "content": "type CarouselApi = UseEmblaCarouselType[1]",
              "start": 12,
              "end": 12,
              "dependencies": []
            },
            {
              "hash": "605ff9a659f796dc4449ace6b197fb05863238611e3492e7428951011b98f1c2",
              "name": "UseCarouselParameters",
              "kind": "TypeAliasDeclaration",
              "content": "type UseCarouselParameters = Parameters<typeof useEmblaCarousel>",
              "start": 13,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "b38663d3c44a8515e4cfe9cf044eadebc090fe2c5cdcb6aec58971c75ab905ae",
              "name": "CarouselOptions",
              "kind": "TypeAliasDeclaration",
              "content": "type CarouselOptions = UseCarouselParameters[0]",
              "start": 14,
              "end": 14,
              "dependencies": [
                {
                  "hash": "605ff9a659f796dc4449ace6b197fb05863238611e3492e7428951011b98f1c2",
                  "name": "UseCarouselParameters",
                  "kind": "TypeAliasDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                }
              ]
            },
            {
              "hash": "c5fdd2ce40917c013b5e561bd73c2cbf148025132d5a63f0e82f863f659b2a2d",
              "name": "CarouselPlugin",
              "kind": "TypeAliasDeclaration",
              "content": "type CarouselPlugin = UseCarouselParameters[1]",
              "start": 15,
              "end": 15,
              "dependencies": [
                {
                  "hash": "605ff9a659f796dc4449ace6b197fb05863238611e3492e7428951011b98f1c2",
                  "name": "UseCarouselParameters",
                  "kind": "TypeAliasDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                }
              ]
            },
            {
              "hash": "9ae83428a69456e2a2be69bb7ab6c2842aeb8639bca27925cb98f3e028d6bd7d",
              "name": "CarouselProps",
              "kind": "TypeAliasDeclaration",
              "content": "type CarouselProps = {\r\n  opts?: CarouselOptions\r\n  plugins?: CarouselPlugin\r\n  orientation?: \"horizontal\" | \"vertical\"\r\n  setApi?: (api: CarouselApi) => void\r\n}",
              "start": 17,
              "end": 22,
              "dependencies": [
                {
                  "hash": "b38663d3c44a8515e4cfe9cf044eadebc090fe2c5cdcb6aec58971c75ab905ae",
                  "name": "CarouselOptions",
                  "kind": "TypeAliasDeclaration",
                  "start": 14,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                },
                {
                  "hash": "c5fdd2ce40917c013b5e561bd73c2cbf148025132d5a63f0e82f863f659b2a2d",
                  "name": "CarouselPlugin",
                  "kind": "TypeAliasDeclaration",
                  "start": 15,
                  "end": 15,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                },
                {
                  "hash": "04e32be5e135dbd346567e3e646008ea06a4454de9f467bec3ae09ebcd9a9650",
                  "name": "CarouselApi",
                  "kind": "TypeAliasDeclaration",
                  "start": 12,
                  "end": 12,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                }
              ]
            },
            {
              "hash": "ba9b88638c8ced80499794dca4b2e4f8097a55cd0c0d36d818f260e786ca5594",
              "name": "CarouselContextProps",
              "kind": "TypeAliasDeclaration",
              "content": "type CarouselContextProps = {\r\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\r\n  api: ReturnType<typeof useEmblaCarousel>[1]\r\n  scrollPrev: () => void\r\n  scrollNext: () => void\r\n  canScrollPrev: boolean\r\n  canScrollNext: boolean\r\n} & CarouselProps",
              "start": 24,
              "end": 31,
              "dependencies": [
                {
                  "hash": "9ae83428a69456e2a2be69bb7ab6c2842aeb8639bca27925cb98f3e028d6bd7d",
                  "name": "CarouselProps",
                  "kind": "TypeAliasDeclaration",
                  "start": 17,
                  "end": 22,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                }
              ]
            },
            {
              "hash": "ee47491b9a82d2b1510e8e78b6fef957240725231e12890cbc746c580d9e6d92",
              "name": "CarouselContext",
              "kind": "VariableStatement",
              "content": "const CarouselContext = React.createContext<CarouselContextProps | null>(null)",
              "start": 33,
              "end": 33,
              "dependencies": []
            },
            {
              "hash": "2815b8d9ce1c598263b989193f68c3a16ba9212f6ce408abee6c66eca553f558",
              "name": "useCarousel",
              "kind": "FunctionDeclaration",
              "content": "function useCarousel() {\r\n  const context = React.useContext(CarouselContext)\r\n\r\n  if (!context) {\r\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\r\n  }\r\n\r\n  return context\r\n}",
              "start": 35,
              "end": 43,
              "dependencies": [
                {
                  "hash": "8cfba576b8100201979003abaaa6c3ee097a89136f3f13abf530eecd7275f4e4",
                  "name": "context",
                  "kind": "VariableDeclaration",
                  "start": 36,
                  "end": 36,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                },
                {
                  "hash": "10a3e797691b86fcd326f9311b4e4f25c31f9d5eb7b7f948e2bc46d29bd77244",
                  "name": "CarouselContext",
                  "kind": "VariableDeclaration",
                  "start": 33,
                  "end": 33,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/carousel.tsx"
                }
              ]
            },
            {
              "hash": "679106ae0ac8cbd3460b60683af5ae882872f3b875c618dfe69dc644a8552c1b",
              "name": "Carousel",
              "kind": "VariableStatement",
              "content": "const Carousel = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\r\n>(\r\n  (\r\n    {\r\n      orientation = \"horizontal\",\r\n      opts,\r\n      setApi,\r\n      plugins,\r\n      className,\r\n      children,\r\n      ...props\r\n    },\r\n    ref\r\n  ) => {\r\n    const [carouselRef, api] = useEmblaCarousel(\r\n      {\r\n        ...opts,\r\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\r\n      },\r\n      plugins\r\n    )\r\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\r\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\r\n\r\n    const onSelect = React.useCallback((api: CarouselApi) => {\r\n      if (!api) {\r\n        return\r\n      }\r\n\r\n      setCanScrollPrev(api.canScrollPrev())\r\n      setCanScrollNext(api.canScrollNext())\r\n    }, [])\r\n\r\n    const scrollPrev = React.useCallback(() => {\r\n      api?.scrollPrev()\r\n    }, [api])\r\n\r\n    const scrollNext = React.useCallback(() => {\r\n      api?.scrollNext()\r\n    }, [api])\r\n\r\n    const handleKeyDown = React.useCallback(\r\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\r\n        if (event.key === \"ArrowLeft\") {\r\n          event.preventDefault()\r\n          scrollPrev()\r\n        } else if (event.key === \"ArrowRight\") {\r\n          event.preventDefault()\r\n          scrollNext()\r\n        }\r\n      },\r\n      [scrollPrev, scrollNext]\r\n    )\r\n\r\n    React.useEffect(() => {\r\n      if (!api || !setApi) {\r\n        return\r\n      }\r\n\r\n      setApi(api)\r\n    }, [api, setApi])\r\n\r\n    React.useEffect(() => {\r\n      if (!api) {\r\n        return\r\n      }\r\n\r\n      onSelect(api)\r\n      api.on(\"reInit\", onSelect)\r\n      api.on(\"select\", onSelect)\r\n\r\n      return () => {\r\n        api?.off(\"select\", onSelect)\r\n      }\r\n    }, [api, onSelect])\r\n\r\n    return (\r\n      <CarouselContext.Provider\r\n        value={{\r\n          carouselRef,\r\n          api: api,\r\n          opts,\r\n          orientation:\r\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\r\n          scrollPrev,\r\n          scrollNext,\r\n          canScrollPrev,\r\n          canScrollNext,\r\n        }}\r\n      >\r\n        <div\r\n          ref={ref}\r\n          onKeyDownCapture={handleKeyDown}\r\n          className={cn(\"relative\", className)}\r\n          role=\"region\"\r\n          aria-roledescription=\"carousel\"\r\n          {...props}\r\n        >\r\n          {children}\r\n        </div>\r\n      </CarouselContext.Provider>\r\n    )\r\n  }\r\n)",
              "start": 45,
              "end": 150,
              "dependencies": []
            },
            {
              "hash": "445c529e7bcc79a116d81a5ec6859acee3653812a1af329c422d56feaf704a2a",
              "name": "CarouselContent",
              "kind": "VariableStatement",
              "content": "const CarouselContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { carouselRef, orientation } = useCarousel()\r\n\r\n  return (\r\n    <div ref={carouselRef} className=\"overflow-hidden\">\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex\",\r\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </div>\r\n  )\r\n})",
              "start": 153,
              "end": 172,
              "dependencies": []
            },
            {
              "hash": "0e53ca76629d6204ebabd51e93bf90513c2bb63ce83072c1440653d5c062c879",
              "name": "CarouselItem",
              "kind": "VariableStatement",
              "content": "const CarouselItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { orientation } = useCarousel()\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      role=\"group\"\r\n      aria-roledescription=\"slide\"\r\n      className={cn(\r\n        \"min-w-0 shrink-0 grow-0 basis-full\",\r\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n})",
              "start": 175,
              "end": 194,
              "dependencies": []
            },
            {
              "hash": "cb336e80049cebef0db80a3378408462922d1d136a14e2094f78abe8e88cca20",
              "name": "CarouselPrevious",
              "kind": "VariableStatement",
              "content": "const CarouselPrevious = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<typeof Button>\r\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\r\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\r\n\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      variant={variant}\r\n      size={size}\r\n      className={cn(\r\n        \"absolute  h-8 w-8 rounded-full\",\r\n        orientation === \"horizontal\"\r\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\r\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\r\n        className\r\n      )}\r\n      disabled={!canScrollPrev}\r\n      onClick={scrollPrev}\r\n      {...props}\r\n    >\r\n      <ArrowLeftIcon className=\"h-4 w-4\" />\r\n      <span className=\"sr-only\">Previous slide</span>\r\n    </Button>\r\n  )\r\n})",
              "start": 197,
              "end": 223,
              "dependencies": []
            },
            {
              "hash": "405217a1f8560706e39dd8bbaea94a284dadac8f19879fafb69132a8701f11ad",
              "name": "CarouselNext",
              "kind": "VariableStatement",
              "content": "const CarouselNext = React.forwardRef<\r\n  HTMLButtonElement,\r\n  React.ComponentProps<typeof Button>\r\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\r\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\r\n\r\n  return (\r\n    <Button\r\n      ref={ref}\r\n      variant={variant}\r\n      size={size}\r\n      className={cn(\r\n        \"absolute h-8 w-8 rounded-full\",\r\n        orientation === \"horizontal\"\r\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\r\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\r\n        className\r\n      )}\r\n      disabled={!canScrollNext}\r\n      onClick={scrollNext}\r\n      {...props}\r\n    >\r\n      <ArrowRightIcon className=\"h-4 w-4\" />\r\n      <span className=\"sr-only\">Next slide</span>\r\n    </Button>\r\n  )\r\n})",
              "start": 226,
              "end": 252,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "recharts",
              "elements": [
                "RechartsPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ChartConfig",
              "type": "named",
              "from": "",
              "namespace": "ChartConfig"
            },
            {
              "name": "ChartContainer",
              "type": "named",
              "from": "",
              "namespace": "ChartContainer"
            },
            {
              "name": "ChartTooltip",
              "type": "named",
              "from": "",
              "namespace": "ChartTooltip"
            },
            {
              "name": "ChartTooltipContent",
              "type": "named",
              "from": "",
              "namespace": "ChartTooltipContent"
            },
            {
              "name": "ChartLegend",
              "type": "named",
              "from": "",
              "namespace": "ChartLegend"
            },
            {
              "name": "ChartLegendContent",
              "type": "named",
              "from": "",
              "namespace": "ChartLegendContent"
            },
            {
              "name": "ChartStyle",
              "type": "named",
              "from": "",
              "namespace": "ChartStyle"
            }
          ],
          "blocks": [
            {
              "hash": "1cbf8a5fc170b288a3ff1eaf205a576caff938befde240d006250e5ee925b195",
              "name": "THEMES",
              "kind": "VariableStatement",
              "content": "const THEMES = { light: \"\", dark: \".dark\" } as const;",
              "start": 14,
              "end": 14,
              "dependencies": []
            },
            {
              "hash": "12b703062385fc32eab4d7c9bbf2688a6dca76d03e38069311df90af9c8d72f8",
              "name": "ChartConfig",
              "kind": "TypeAliasDeclaration",
              "content": "export type ChartConfig = {\r\n  [k in string]: {\r\n    label?: React.ReactNode;\r\n    icon?: React.ComponentType;\r\n  } & (\r\n    | { color?: string; theme?: never }\r\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\r\n  );\r\n};",
              "start": 16,
              "end": 24,
              "dependencies": [
                {
                  "hash": "45ee571fc1f2a92fb69454c9c66d3b85a5d6d00666acb05ca913113a3de0711c",
                  "name": "THEMES",
                  "kind": "VariableDeclaration",
                  "start": 14,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                }
              ]
            },
            {
              "hash": "e3ecd795bd34c1915ec953a22133aacac4c6a55db0b1e0f899f842c2fbcbb584",
              "name": "ChartContextProps",
              "kind": "TypeAliasDeclaration",
              "content": "type ChartContextProps = {\r\n  config: ChartConfig;\r\n};",
              "start": 26,
              "end": 28,
              "dependencies": [
                {
                  "hash": "12b703062385fc32eab4d7c9bbf2688a6dca76d03e38069311df90af9c8d72f8",
                  "name": "ChartConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 16,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                }
              ]
            },
            {
              "hash": "689a0ce7b2eb73cfe25c9fcc921e96c115e0821697ce3db285a6505ef5770044",
              "name": "ChartContext",
              "kind": "VariableStatement",
              "content": "const ChartContext = React.createContext<ChartContextProps | null>(null);",
              "start": 30,
              "end": 30,
              "dependencies": []
            },
            {
              "hash": "c83d30003d9dc7aad728e41c5661091091b4ad45b1c02619c65d4bbbe161dad1",
              "name": "useChart",
              "kind": "FunctionDeclaration",
              "content": "function useChart() {\r\n  const context = React.useContext(ChartContext);\r\n\r\n  if (!context) {\r\n    throw new Error(\"useChart must be used within a <ChartContainer />\");\r\n  }\r\n\r\n  return context;\r\n}",
              "start": 32,
              "end": 40,
              "dependencies": [
                {
                  "hash": "06ec6935591f31c9351c06c3890d606259468ce4ea26280281de7ac737c808ed",
                  "name": "context",
                  "kind": "VariableDeclaration",
                  "start": 33,
                  "end": 33,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                },
                {
                  "hash": "0599381e21f55dc788882541d6c6310b9924365301fbdd0c9767a5657f5d1a5b",
                  "name": "ChartContext",
                  "kind": "VariableDeclaration",
                  "start": 30,
                  "end": 30,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                }
              ]
            },
            {
              "hash": "8b8d6b5f944caf871ab9200f6f7f471c3e9546c5bcfe2e9f6be59ebb5697c877",
              "name": "ChartContainer",
              "kind": "VariableStatement",
              "content": "const ChartContainer = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> & {\r\n    config: ChartConfig;\r\n    children: React.ComponentProps<\r\n      typeof RechartsPrimitive.ResponsiveContainer\r\n    >[\"children\"];\r\n  }\r\n>(({ id, className, children, config, ...props }, ref) => {\r\n  const uniqueId = React.useId();\r\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`;\r\n\r\n  return (\r\n    <ChartContext.Provider value={{ config }}>\r\n      <div\r\n        data-chart={chartId}\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\r\n          className\r\n        )}\r\n        {...props}\r\n      >\r\n        <ChartStyle id={chartId} config={config} />\r\n        <RechartsPrimitive.ResponsiveContainer>\r\n          {children}\r\n        </RechartsPrimitive.ResponsiveContainer>\r\n      </div>\r\n    </ChartContext.Provider>\r\n  );\r\n});",
              "start": 42,
              "end": 72,
              "dependencies": []
            },
            {
              "hash": "a68123e72976e0b851adbf965b66210bbd4131de47f31aa26c943323b59288e7",
              "name": "ChartStyle",
              "kind": "VariableStatement",
              "content": "const ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\r\n  const colorConfig = Object.entries(config).filter(\r\n    ([, config]) => config.theme || config.color\r\n  );\r\n\r\n  if (!colorConfig.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <style\r\n      dangerouslySetInnerHTML={{\r\n        __html: Object.entries(THEMES)\r\n          .map(\r\n            ([theme, prefix]) => `\r\n${prefix} [data-chart=${id}] {\r\n${colorConfig\r\n  .map(([key, itemConfig]) => {\r\n    const color =\r\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\r\n      itemConfig.color;\r\n    return color ? `  --color-${key}: ${color};` : null;\r\n  })\r\n  .join(\"\\n\")}\r\n}\r\n`\r\n          )\r\n          .join(\"\\n\"),\r\n      }}\r\n    />\r\n  );\r\n};",
              "start": 75,
              "end": 106,
              "dependencies": []
            },
            {
              "hash": "e075f070ef3380c0fc845cf82706a8283403c11f90ccb07c191b789f2a7c39b7",
              "name": "ChartTooltip",
              "kind": "VariableStatement",
              "content": "const ChartTooltip = RechartsPrimitive.Tooltip;",
              "start": 108,
              "end": 108,
              "dependencies": []
            },
            {
              "hash": "aa624dd281805ce6bce70689be709b9d2bb64bbabd355843786eb2068a470fb6",
              "name": "ChartTooltipContent",
              "kind": "VariableStatement",
              "content": "const ChartTooltipContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\r\n    React.ComponentProps<\"div\"> & {\r\n      hideLabel?: boolean;\r\n      hideIndicator?: boolean;\r\n      indicator?: \"line\" | \"dot\" | \"dashed\";\r\n      nameKey?: string;\r\n      labelKey?: string;\r\n    }\r\n>(\r\n  (\r\n    {\r\n      active,\r\n      payload,\r\n      className,\r\n      indicator = \"dot\",\r\n      hideLabel = false,\r\n      hideIndicator = false,\r\n      label,\r\n      labelFormatter,\r\n      labelClassName,\r\n      formatter,\r\n      color,\r\n      nameKey,\r\n      labelKey,\r\n    },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart();\r\n\r\n    const tooltipLabel = React.useMemo(() => {\r\n      if (hideLabel || !payload?.length) {\r\n        return null;\r\n      }\r\n\r\n      const [item] = payload;\r\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`;\r\n      const itemConfig = getPayloadConfigFromPayload(config, item, key);\r\n      const value =\r\n        !labelKey && typeof label === \"string\"\r\n          ? config[label as keyof typeof config]?.label || label\r\n          : itemConfig?.label;\r\n\r\n      if (labelFormatter) {\r\n        return (\r\n          <div className={cn(\"font-medium\", labelClassName)}>\r\n            {labelFormatter(value, payload)}\r\n          </div>\r\n        );\r\n      }\r\n\r\n      if (!value) {\r\n        return null;\r\n      }\r\n\r\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>;\r\n    }, [\r\n      label,\r\n      labelFormatter,\r\n      payload,\r\n      hideLabel,\r\n      labelClassName,\r\n      config,\r\n      labelKey,\r\n    ]);\r\n\r\n    if (!active || !payload?.length) {\r\n      return null;\r\n    }\r\n\r\n    const nestLabel = payload.length === 1 && indicator !== \"dot\";\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\r\n          className\r\n        )}\r\n      >\r\n        {!nestLabel ? tooltipLabel : null}\r\n        <div className=\"grid gap-1.5\">\r\n          {payload.map((item, index) => {\r\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`;\r\n            const itemConfig = getPayloadConfigFromPayload(config, item, key);\r\n            const indicatorColor = color || item.payload.fill || item.color;\r\n\r\n            return (\r\n              <div\r\n                key={item.dataKey}\r\n                className={cn(\r\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\r\n                  indicator === \"dot\" && \"items-center\"\r\n                )}\r\n              >\r\n                {formatter && item?.value !== undefined && item.name ? (\r\n                  formatter(item.value, item.name, item, index, item.payload)\r\n                ) : (\r\n                  <>\r\n                    {itemConfig?.icon ? (\r\n                      <itemConfig.icon />\r\n                    ) : (\r\n                      !hideIndicator && (\r\n                        <div\r\n                          className={cn(\r\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\r\n                            {\r\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\r\n                              \"w-1\": indicator === \"line\",\r\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\r\n                                indicator === \"dashed\",\r\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\r\n                            }\r\n                          )}\r\n                          style={\r\n                            {\r\n                              \"--color-bg\": indicatorColor,\r\n                              \"--color-border\": indicatorColor,\r\n                            } as React.CSSProperties\r\n                          }\r\n                        />\r\n                      )\r\n                    )}\r\n                    <div\r\n                      className={cn(\r\n                        \"flex flex-1 justify-between leading-none\",\r\n                        nestLabel ? \"items-end\" : \"items-center\"\r\n                      )}\r\n                    >\r\n                      <div className=\"grid gap-1.5\">\r\n                        {nestLabel ? tooltipLabel : null}\r\n                        <span className=\"text-muted-foreground\">\r\n                          {itemConfig?.label || item.name}\r\n                        </span>\r\n                      </div>\r\n                      {item.value && (\r\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\r\n                          {item.value.toLocaleString()}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  </>\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);",
              "start": 110,
              "end": 261,
              "dependencies": []
            },
            {
              "hash": "220ff8cf90590968afd13b5c895d8f4c46606b5d1ac06a23838dd75bd6a2d6d4",
              "name": "ChartLegend",
              "kind": "VariableStatement",
              "content": "const ChartLegend = RechartsPrimitive.Legend;",
              "start": 264,
              "end": 264,
              "dependencies": []
            },
            {
              "hash": "73da0e74c03deb6a0d255e5eda589432b44f68bb41b44c76b2777d4c2c3a4f6e",
              "name": "ChartLegendContent",
              "kind": "VariableStatement",
              "content": "const ChartLegendContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.ComponentProps<\"div\"> &\r\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\r\n      hideIcon?: boolean;\r\n      nameKey?: string;\r\n    }\r\n>(\r\n  (\r\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\r\n    ref\r\n  ) => {\r\n    const { config } = useChart();\r\n\r\n    if (!payload?.length) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        className={cn(\r\n          \"flex items-center justify-center gap-4\",\r\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\r\n          className\r\n        )}\r\n      >\r\n        {payload.map((item) => {\r\n          const key = `${nameKey || item.dataKey || \"value\"}`;\r\n          const itemConfig = getPayloadConfigFromPayload(config, item, key);\r\n\r\n          return (\r\n            <div\r\n              key={item.value}\r\n              className={cn(\r\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\r\n              )}\r\n            >\r\n              {itemConfig?.icon && !hideIcon ? (\r\n                <itemConfig.icon />\r\n              ) : (\r\n                <div\r\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\r\n                  style={{\r\n                    backgroundColor: item.color,\r\n                  }}\r\n                />\r\n              )}\r\n              {itemConfig?.label}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n);",
              "start": 266,
              "end": 321,
              "dependencies": []
            },
            {
              "hash": "aeb6e809e77f54c8e186c756d76f9dfdc0a870a1bdee6a4a160de92221f0af71",
              "name": "getPayloadConfigFromPayload",
              "kind": "FunctionDeclaration",
              "content": "function getPayloadConfigFromPayload(\r\n  config: ChartConfig,\r\n  payload: unknown,\r\n  key: string\r\n) {\r\n  if (typeof payload !== \"object\" || payload === null) {\r\n    return undefined;\r\n  }\r\n\r\n  const payloadPayload =\r\n    \"payload\" in payload &&\r\n    typeof payload.payload === \"object\" &&\r\n    payload.payload !== null\r\n      ? payload.payload\r\n      : undefined;\r\n\r\n  let configLabelKey: string = key;\r\n\r\n  if (\r\n    key in payload &&\r\n    typeof payload[key as keyof typeof payload] === \"string\"\r\n  ) {\r\n    configLabelKey = payload[key as keyof typeof payload] as string;\r\n  } else if (\r\n    payloadPayload &&\r\n    key in payloadPayload &&\r\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\r\n  ) {\r\n    configLabelKey = payloadPayload[\r\n      key as keyof typeof payloadPayload\r\n    ] as string;\r\n  }\r\n\r\n  return configLabelKey in config\r\n    ? config[configLabelKey]\r\n    : config[key as keyof typeof config];\r\n}",
              "start": 325,
              "end": 361,
              "dependencies": [
                {
                  "hash": "12b703062385fc32eab4d7c9bbf2688a6dca76d03e38069311df90af9c8d72f8",
                  "name": "ChartConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 16,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                },
                {
                  "hash": "8f16aec71fc9fb20ff0e815b2a00c55b623e85dfed6f2c1edb4c2b7e2669fd33",
                  "name": "payloadPayload",
                  "kind": "VariableDeclaration",
                  "start": 334,
                  "end": 339,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                },
                {
                  "hash": "363ebaba52bfe6736cbe3d1e1088f6398bf9fd090b97aa59023284fb872d851b",
                  "name": "configLabelKey",
                  "kind": "VariableDeclaration",
                  "start": 341,
                  "end": 341,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/chart.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/checkbox.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-checkbox",
              "elements": [
                "CheckboxPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "CheckIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Checkbox",
              "type": "named",
              "from": "",
              "namespace": "Checkbox"
            }
          ],
          "blocks": [
            {
              "hash": "766b473aa2231493d2b30c228757287dfb07b39028c50ff1c0c502d9792c1d86",
              "name": "Checkbox",
              "kind": "VariableStatement",
              "content": "const Checkbox = React.forwardRef<\r\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <CheckboxPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary shadow focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <CheckboxPrimitive.Indicator\r\n      className={cn(\"flex items-center justify-center text-current\")}\r\n    >\r\n      <CheckIcon className=\"h-4 w-4\" />\r\n    </CheckboxPrimitive.Indicator>\r\n  </CheckboxPrimitive.Root>\r\n))",
              "start": 9,
              "end": 27,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/collapsible.tsx",
          "imports": [
            {
              "moduleSpecifier": "@radix-ui/react-collapsible",
              "elements": [
                "CollapsiblePrimitive"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Collapsible",
              "type": "named",
              "from": "",
              "namespace": "Collapsible"
            },
            {
              "name": "CollapsibleTrigger",
              "type": "named",
              "from": "",
              "namespace": "CollapsibleTrigger"
            },
            {
              "name": "CollapsibleContent",
              "type": "named",
              "from": "",
              "namespace": "CollapsibleContent"
            }
          ],
          "blocks": [
            {
              "hash": "1b3824b6a563be422a5dd685079423635abb4ff87237b971814aad668ba7ce27",
              "name": "Collapsible",
              "kind": "VariableStatement",
              "content": "const Collapsible = CollapsiblePrimitive.Root",
              "start": 5,
              "end": 5,
              "dependencies": []
            },
            {
              "hash": "0dbabae0faee178e6224cddf3f331dc53474d2e248f7cb8218a08d0a2f544023",
              "name": "CollapsibleTrigger",
              "kind": "VariableStatement",
              "content": "const CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger",
              "start": 7,
              "end": 7,
              "dependencies": []
            },
            {
              "hash": "823d15b28a1cb7f43e5dadafd67d1e5b1f514a818799cc25f4f907c6ed3bb1f7",
              "name": "CollapsibleContent",
              "kind": "VariableStatement",
              "content": "const CollapsibleContent = CollapsiblePrimitive.CollapsibleContent",
              "start": 9,
              "end": 9,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/command.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-dialog",
              "elements": [
                "DialogProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "MagnifyingGlassIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "cmdk",
              "elements": [
                "Command"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dialog.tsx",
              "elements": [
                "Dialog",
                "DialogContent"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Command",
              "type": "named",
              "from": "",
              "namespace": "Command"
            },
            {
              "name": "CommandDialog",
              "type": "named",
              "from": "",
              "namespace": "CommandDialog"
            },
            {
              "name": "CommandInput",
              "type": "named",
              "from": "",
              "namespace": "CommandInput"
            },
            {
              "name": "CommandList",
              "type": "named",
              "from": "",
              "namespace": "CommandList"
            },
            {
              "name": "CommandEmpty",
              "type": "named",
              "from": "",
              "namespace": "CommandEmpty"
            },
            {
              "name": "CommandGroup",
              "type": "named",
              "from": "",
              "namespace": "CommandGroup"
            },
            {
              "name": "CommandItem",
              "type": "named",
              "from": "",
              "namespace": "CommandItem"
            },
            {
              "name": "CommandShortcut",
              "type": "named",
              "from": "",
              "namespace": "CommandShortcut"
            },
            {
              "name": "CommandShortcut",
              "type": "named",
              "from": "",
              "namespace": "CommandShortcut"
            },
            {
              "name": "CommandSeparator",
              "type": "named",
              "from": "",
              "namespace": "CommandSeparator"
            }
          ],
          "blocks": [
            {
              "hash": "13a973155417a44091ef0b4912722d9f117adac599c991d84cabc8d44ca5d41a",
              "name": "Command",
              "kind": "VariableStatement",
              "content": "const Command = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));",
              "start": 11,
              "end": 23,
              "dependencies": []
            },
            {
              "hash": "13ac83d0d9fda99364d2e3acabffd116f128323a8edf8d67c0a9ce3ed2526939",
              "name": "CommandDialogProps",
              "kind": "TypeAliasDeclaration",
              "content": "type CommandDialogProps = DialogProps;",
              "start": 26,
              "end": 26,
              "dependencies": []
            },
            {
              "hash": "f0969eaf52cf6c2086f8161a7333205cecc7b701f42f419d8a934b28d6402e2b",
              "name": "CommandDialog",
              "kind": "VariableStatement",
              "content": "const CommandDialog = ({ children, ...props }: CommandDialogProps) => {\r\n  return (\r\n    <Dialog {...props}>\r\n      <DialogContent className=\"overflow-hidden p-0\">\r\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\r\n          {children}\r\n        </Command>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};",
              "start": 28,
              "end": 38,
              "dependencies": []
            },
            {
              "hash": "8eafdf16a167599255b5f875e8e06c2c7674e5e0845680a131cd001f1d69d801",
              "name": "CommandInput",
              "kind": "VariableStatement",
              "content": "const CommandInput = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Input>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\r\n    <MagnifyingGlassIcon className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\r\n    <CommandPrimitive.Input\r\n      ref={ref}\r\n      className={cn(\r\n        \"flex h-10 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </div>\r\n));",
              "start": 40,
              "end": 55,
              "dependencies": []
            },
            {
              "hash": "5c0d7c395b694a74610396b688fba1a8e1b9a7b1d84baf4ffff4b08e222ba47a",
              "name": "CommandList",
              "kind": "VariableStatement",
              "content": "const CommandList = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.List\r\n    ref={ref}\r\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\r\n    {...props}\r\n  />\r\n));",
              "start": 59,
              "end": 68,
              "dependencies": []
            },
            {
              "hash": "9579c8f41ea37b8a4f1778b982a338fcb5942bd46e21c9d45d72e4a0e48b1377",
              "name": "CommandEmpty",
              "kind": "VariableStatement",
              "content": "const CommandEmpty = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Empty>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\r\n>((props, ref) => (\r\n  <CommandPrimitive.Empty\r\n    ref={ref}\r\n    className=\"py-6 text-center text-sm\"\r\n    {...props}\r\n  />\r\n));",
              "start": 72,
              "end": 81,
              "dependencies": []
            },
            {
              "hash": "2eb6738ff930e87bf29cfd4f2e76496714a46547aa773a05eccc66145c918edf",
              "name": "CommandGroup",
              "kind": "VariableStatement",
              "content": "const CommandGroup = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Group>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Group\r\n    ref={ref}\r\n    className={cn(\r\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));",
              "start": 85,
              "end": 97,
              "dependencies": []
            },
            {
              "hash": "1a0f3de3a669a1fc3a3dcc254faf9f44b1054c499167334ab003b98a93cc2da9",
              "name": "CommandSeparator",
              "kind": "VariableStatement",
              "content": "const CommandSeparator = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 h-px bg-border\", className)}\r\n    {...props}\r\n  />\r\n));",
              "start": 101,
              "end": 110,
              "dependencies": []
            },
            {
              "hash": "64925d268ebf8503a6fb96d509f9f2fc5cfad3b551d43e7f4465fba4ce8be1a6",
              "name": "CommandItem",
              "kind": "VariableStatement",
              "content": "const CommandItem = React.forwardRef<\r\n  React.ElementRef<typeof CommandPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\r\n>(({ className, ...props }, ref) => (\r\n  <CommandPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected=true]:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));",
              "start": 113,
              "end": 125,
              "dependencies": []
            },
            {
              "hash": "ae1ee89d8c014ca297cffac3d36863b384542fcdfb8aa8b075d73873e6d75536",
              "name": "CommandShortcut",
              "kind": "VariableStatement",
              "content": "const CommandShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  );\r\n};",
              "start": 129,
              "end": 142,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/context-menu.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-context-menu",
              "elements": [
                "ContextMenuPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "CheckIcon",
                "ChevronRightIcon",
                "DotFilledIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ContextMenu",
              "type": "named",
              "from": "",
              "namespace": "ContextMenu"
            },
            {
              "name": "ContextMenuTrigger",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuTrigger"
            },
            {
              "name": "ContextMenuContent",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuContent"
            },
            {
              "name": "ContextMenuItem",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuItem"
            },
            {
              "name": "ContextMenuCheckboxItem",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuCheckboxItem"
            },
            {
              "name": "ContextMenuRadioItem",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuRadioItem"
            },
            {
              "name": "ContextMenuLabel",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuLabel"
            },
            {
              "name": "ContextMenuSeparator",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuSeparator"
            },
            {
              "name": "ContextMenuShortcut",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuShortcut"
            },
            {
              "name": "ContextMenuShortcut",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuShortcut"
            },
            {
              "name": "ContextMenuGroup",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuGroup"
            },
            {
              "name": "ContextMenuPortal",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuPortal"
            },
            {
              "name": "ContextMenuSub",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuSub"
            },
            {
              "name": "ContextMenuSubContent",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuSubContent"
            },
            {
              "name": "ContextMenuSubTrigger",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuSubTrigger"
            },
            {
              "name": "ContextMenuRadioGroup",
              "type": "named",
              "from": "",
              "namespace": "ContextMenuRadioGroup"
            }
          ],
          "blocks": [
            {
              "hash": "e15f9dd4a7a610a3262feaa0fccd130b467133a568af6036fe9a23a7864dad67",
              "name": "ContextMenu",
              "kind": "VariableStatement",
              "content": "const ContextMenu = ContextMenuPrimitive.Root",
              "start": 13,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "73a9b1b1c8228d5d4b3bd68161668520bafd8b60120edbabdb457cc5293909e5",
              "name": "ContextMenuTrigger",
              "kind": "VariableStatement",
              "content": "const ContextMenuTrigger = ContextMenuPrimitive.Trigger",
              "start": 15,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "2294d6c63d5408f0d6db9997d9cf07c9e5fb1d37e380b66010048b1111491392",
              "name": "ContextMenuGroup",
              "kind": "VariableStatement",
              "content": "const ContextMenuGroup = ContextMenuPrimitive.Group",
              "start": 17,
              "end": 17,
              "dependencies": []
            },
            {
              "hash": "6893eba37afaf68fe30afe54b7c92aba76805da7aadfaf3f45b7eb964812750c",
              "name": "ContextMenuPortal",
              "kind": "VariableStatement",
              "content": "const ContextMenuPortal = ContextMenuPrimitive.Portal",
              "start": 19,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "39542e4c3341a8d7e29418669c2c9320c4160edca63a57636336b0559f5bb847",
              "name": "ContextMenuSub",
              "kind": "VariableStatement",
              "content": "const ContextMenuSub = ContextMenuPrimitive.Sub",
              "start": 21,
              "end": 21,
              "dependencies": []
            },
            {
              "hash": "c22060444719f1b55e136f5206362229fcab5cf5e4c647edcd3e594b7b95317c",
              "name": "ContextMenuRadioGroup",
              "kind": "VariableStatement",
              "content": "const ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup",
              "start": 23,
              "end": 23,
              "dependencies": []
            },
            {
              "hash": "d859103a4f7bf45c7698496087a3ffa3469e993f26526ab8b8ea63dfaefbadd5",
              "name": "ContextMenuSubTrigger",
              "kind": "VariableStatement",
              "content": "const ContextMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <ContextMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\r\n  </ContextMenuPrimitive.SubTrigger>\r\n))",
              "start": 25,
              "end": 43,
              "dependencies": []
            },
            {
              "hash": "1e3b3db53c02b8534acd9ae6132a147fe9fdd41a8712f2417a87b12d3611f18d",
              "name": "ContextMenuSubContent",
              "kind": "VariableStatement",
              "content": "const ContextMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 46,
              "end": 58,
              "dependencies": []
            },
            {
              "hash": "2aa50a41c4e7165440404179d98a173aad853fa6dfa4a8492bc6260acbfb19a4",
              "name": "ContextMenuContent",
              "kind": "VariableStatement",
              "content": "const ContextMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Portal>\r\n    <ContextMenuPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </ContextMenuPrimitive.Portal>\r\n))",
              "start": 61,
              "end": 75,
              "dependencies": []
            },
            {
              "hash": "9b8b350f617b88ae61d0deda489710795da3fc2c4b2fe00a0d59f2921bf6f1c2",
              "name": "ContextMenuItem",
              "kind": "VariableStatement",
              "content": "const ContextMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 78,
              "end": 93,
              "dependencies": []
            },
            {
              "hash": "ebe67ab276c54e83ff49aa53ac1dde2d929c1f5f7d1a52559f471e5fd5049eec",
              "name": "ContextMenuCheckboxItem",
              "kind": "VariableStatement",
              "content": "const ContextMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <ContextMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <ContextMenuPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </ContextMenuPrimitive.CheckboxItem>\r\n))",
              "start": 96,
              "end": 116,
              "dependencies": []
            },
            {
              "hash": "d35a49d7db21c911cef9e4473f4e71cadd77927202892050417b272a3b2f019c",
              "name": "ContextMenuRadioItem",
              "kind": "VariableStatement",
              "content": "const ContextMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ContextMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <ContextMenuPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\r\n      </ContextMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </ContextMenuPrimitive.RadioItem>\r\n))",
              "start": 120,
              "end": 139,
              "dependencies": []
            },
            {
              "hash": "2f46cd8d4c9ee561c943001d86ca0132323e3db090f6c9145e2c131a00120b2f",
              "name": "ContextMenuLabel",
              "kind": "VariableStatement",
              "content": "const ContextMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 142,
              "end": 157,
              "dependencies": []
            },
            {
              "hash": "e425b92bbbe5aae54fe6f6a19450f78f1eff5010676ac3165d023e9eac026be4",
              "name": "ContextMenuSeparator",
              "kind": "VariableStatement",
              "content": "const ContextMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <ContextMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 160,
              "end": 169,
              "dependencies": []
            },
            {
              "hash": "a9860e60bfd2d9205db8d0d51f5fafff619c8fe9a564df46570098d16f5a19d3",
              "name": "ContextMenuShortcut",
              "kind": "VariableStatement",
              "content": "const ContextMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}",
              "start": 172,
              "end": 185,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dialog.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-dialog",
              "elements": [
                "DialogPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "Cross2Icon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Dialog",
              "type": "named",
              "from": "",
              "namespace": "Dialog"
            },
            {
              "name": "DialogPortal",
              "type": "named",
              "from": "",
              "namespace": "DialogPortal"
            },
            {
              "name": "DialogOverlay",
              "type": "named",
              "from": "",
              "namespace": "DialogOverlay"
            },
            {
              "name": "DialogTrigger",
              "type": "named",
              "from": "",
              "namespace": "DialogTrigger"
            },
            {
              "name": "DialogClose",
              "type": "named",
              "from": "",
              "namespace": "DialogClose"
            },
            {
              "name": "DialogContent",
              "type": "named",
              "from": "",
              "namespace": "DialogContent"
            },
            {
              "name": "DialogHeader",
              "type": "named",
              "from": "",
              "namespace": "DialogHeader"
            },
            {
              "name": "DialogHeader",
              "type": "named",
              "from": "",
              "namespace": "DialogHeader"
            },
            {
              "name": "DialogFooter",
              "type": "named",
              "from": "",
              "namespace": "DialogFooter"
            },
            {
              "name": "DialogFooter",
              "type": "named",
              "from": "",
              "namespace": "DialogFooter"
            },
            {
              "name": "DialogTitle",
              "type": "named",
              "from": "",
              "namespace": "DialogTitle"
            },
            {
              "name": "DialogDescription",
              "type": "named",
              "from": "",
              "namespace": "DialogDescription"
            }
          ],
          "blocks": [
            {
              "hash": "098511a363729c9574633c282c1a32ea3c637a57fd69099352bea246a6c9ed9b",
              "name": "Dialog",
              "kind": "VariableStatement",
              "content": "const Dialog = DialogPrimitive.Root",
              "start": 9,
              "end": 9,
              "dependencies": []
            },
            {
              "hash": "8296ea8dd23d6cceaa58d446499e565f2a45b55449ab9d88ca2560e26d5f82cf",
              "name": "DialogTrigger",
              "kind": "VariableStatement",
              "content": "const DialogTrigger = DialogPrimitive.Trigger",
              "start": 11,
              "end": 11,
              "dependencies": []
            },
            {
              "hash": "57246dd4bc1e78bb4dd9d9fee83aa0afe3d635545a38c6b7cd3bb42c89f92276",
              "name": "DialogPortal",
              "kind": "VariableStatement",
              "content": "const DialogPortal = DialogPrimitive.Portal",
              "start": 13,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "3f224b35939c140b7559dc60d0fa5b8ac629bd09d765925490362c94fdb6330f",
              "name": "DialogClose",
              "kind": "VariableStatement",
              "content": "const DialogClose = DialogPrimitive.Close",
              "start": 15,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "ed2f0946b90e997e9da8e299f35be80e669eadea704e84cb0364b12618418af3",
              "name": "DialogOverlay",
              "kind": "VariableStatement",
              "content": "const DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 17,
              "end": 29,
              "dependencies": []
            },
            {
              "hash": "52d07f7682d69fc9e8a71841a809d99b83749cff2d407b106e07ef4eb931bf1c",
              "name": "DialogContent",
              "kind": "VariableStatement",
              "content": "const DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <Cross2Icon className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n))",
              "start": 32,
              "end": 53,
              "dependencies": []
            },
            {
              "hash": "f122d4f8641033ce7e0194e5dd61deded190521f0852cf225f4f771e947e0cc6",
              "name": "DialogHeader",
              "kind": "VariableStatement",
              "content": "const DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 56,
              "end": 67,
              "dependencies": []
            },
            {
              "hash": "f4d820e4a45b34673f3c6c489b941c8b5e85956f246824569e605f1cbf309feb",
              "name": "DialogFooter",
              "kind": "VariableStatement",
              "content": "const DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 70,
              "end": 81,
              "dependencies": []
            },
            {
              "hash": "a123c0c739217cd872e6d3103aea9f8286b9e40fbfea5e0ec898651aea7d3302",
              "name": "DialogTitle",
              "kind": "VariableStatement",
              "content": "const DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 84,
              "end": 96,
              "dependencies": []
            },
            {
              "hash": "4dd065e30d54a2185b443f7658d82edaa09aa877c81d66aa52fd21fcc95b7880",
              "name": "DialogDescription",
              "kind": "VariableStatement",
              "content": "const DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 99,
              "end": 108,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/drawer.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "vaul",
              "elements": [
                "Drawer"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Drawer",
              "type": "named",
              "from": "",
              "namespace": "Drawer"
            },
            {
              "name": "Drawer",
              "type": "named",
              "from": "",
              "namespace": "Drawer"
            },
            {
              "name": "DrawerPortal",
              "type": "named",
              "from": "",
              "namespace": "DrawerPortal"
            },
            {
              "name": "DrawerOverlay",
              "type": "named",
              "from": "",
              "namespace": "DrawerOverlay"
            },
            {
              "name": "DrawerTrigger",
              "type": "named",
              "from": "",
              "namespace": "DrawerTrigger"
            },
            {
              "name": "DrawerClose",
              "type": "named",
              "from": "",
              "namespace": "DrawerClose"
            },
            {
              "name": "DrawerContent",
              "type": "named",
              "from": "",
              "namespace": "DrawerContent"
            },
            {
              "name": "DrawerHeader",
              "type": "named",
              "from": "",
              "namespace": "DrawerHeader"
            },
            {
              "name": "DrawerHeader",
              "type": "named",
              "from": "",
              "namespace": "DrawerHeader"
            },
            {
              "name": "DrawerFooter",
              "type": "named",
              "from": "",
              "namespace": "DrawerFooter"
            },
            {
              "name": "DrawerFooter",
              "type": "named",
              "from": "",
              "namespace": "DrawerFooter"
            },
            {
              "name": "DrawerTitle",
              "type": "named",
              "from": "",
              "namespace": "DrawerTitle"
            },
            {
              "name": "DrawerDescription",
              "type": "named",
              "from": "",
              "namespace": "DrawerDescription"
            }
          ],
          "blocks": [
            {
              "hash": "1de81cf4b27ea1e5bed415017d517809c3ffd03ca1bbbeb74d06457a5b49397e",
              "name": "Drawer",
              "kind": "VariableStatement",
              "content": "const Drawer = ({\r\n  shouldScaleBackground = true,\r\n  ...props\r\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\r\n  <DrawerPrimitive.Root\r\n    shouldScaleBackground={shouldScaleBackground}\r\n    {...props}\r\n  />\r\n)",
              "start": 8,
              "end": 16,
              "dependencies": []
            },
            {
              "hash": "7cb30b5b433907f0f6d27045b6cdfb50676117bf718f70fe5e511475aeeef600",
              "name": "DrawerTrigger",
              "kind": "VariableStatement",
              "content": "const DrawerTrigger = DrawerPrimitive.Trigger",
              "start": 19,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "5f313575a49651b613c0aeefefa45471379beeb316374efa6229fbd5eb34d921",
              "name": "DrawerPortal",
              "kind": "VariableStatement",
              "content": "const DrawerPortal = DrawerPrimitive.Portal",
              "start": 21,
              "end": 21,
              "dependencies": []
            },
            {
              "hash": "2d4c9e08423c18dca58695a5104e55f1be04eb93ea85ba8f946dd091147583c7",
              "name": "DrawerClose",
              "kind": "VariableStatement",
              "content": "const DrawerClose = DrawerPrimitive.Close",
              "start": 23,
              "end": 23,
              "dependencies": []
            },
            {
              "hash": "43c25220fa16c801c4665d0464e2c521b6ec7a0b0f5c89a18513d5f7a69d3405",
              "name": "DrawerOverlay",
              "kind": "VariableStatement",
              "content": "const DrawerOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 25,
              "end": 34,
              "dependencies": []
            },
            {
              "hash": "476b60ac2786a1138896dae5d26eb0764c240abdd23efd177911994fe3efa50b",
              "name": "DrawerContent",
              "kind": "VariableStatement",
              "content": "const DrawerContent = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DrawerPortal>\r\n    <DrawerOverlay />\r\n    <DrawerPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\r\n      {children}\r\n    </DrawerPrimitive.Content>\r\n  </DrawerPortal>\r\n))",
              "start": 37,
              "end": 55,
              "dependencies": []
            },
            {
              "hash": "903a051d7d4b0eb87429e148825710ab298e20f96a9c29a982829114028448f4",
              "name": "DrawerHeader",
              "kind": "VariableStatement",
              "content": "const DrawerHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\r\n    {...props}\r\n  />\r\n)",
              "start": 58,
              "end": 66,
              "dependencies": []
            },
            {
              "hash": "844bb50a680d0a573501baaffd1f266d14099794faa3963c6284c56d8b28c3e9",
              "name": "DrawerFooter",
              "kind": "VariableStatement",
              "content": "const DrawerFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\r\n    {...props}\r\n  />\r\n)",
              "start": 69,
              "end": 77,
              "dependencies": []
            },
            {
              "hash": "152db08ac6767e1c1bf8a75adc55b81b38175c6cd140f4e797105078d02483d3",
              "name": "DrawerTitle",
              "kind": "VariableStatement",
              "content": "const DrawerTitle = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 80,
              "end": 92,
              "dependencies": []
            },
            {
              "hash": "99a3df35448fd195725c22a0d92ae6d25016efc07e26d22b344a91b586b75db9",
              "name": "DrawerDescription",
              "kind": "VariableStatement",
              "content": "const DrawerDescription = React.forwardRef<\r\n  React.ElementRef<typeof DrawerPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DrawerPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 95,
              "end": 104,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/dropdown-menu.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-dropdown-menu",
              "elements": [
                "DropdownMenuPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "CheckIcon",
                "ChevronRightIcon",
                "DotFilledIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "DropdownMenu",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenu"
            },
            {
              "name": "DropdownMenuTrigger",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuTrigger"
            },
            {
              "name": "DropdownMenuContent",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuContent"
            },
            {
              "name": "DropdownMenuItem",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuItem"
            },
            {
              "name": "DropdownMenuCheckboxItem",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuCheckboxItem"
            },
            {
              "name": "DropdownMenuRadioItem",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuRadioItem"
            },
            {
              "name": "DropdownMenuLabel",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuLabel"
            },
            {
              "name": "DropdownMenuSeparator",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuSeparator"
            },
            {
              "name": "DropdownMenuShortcut",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuShortcut"
            },
            {
              "name": "DropdownMenuShortcut",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuShortcut"
            },
            {
              "name": "DropdownMenuGroup",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuGroup"
            },
            {
              "name": "DropdownMenuPortal",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuPortal"
            },
            {
              "name": "DropdownMenuSub",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuSub"
            },
            {
              "name": "DropdownMenuSubContent",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuSubContent"
            },
            {
              "name": "DropdownMenuSubTrigger",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuSubTrigger"
            },
            {
              "name": "DropdownMenuRadioGroup",
              "type": "named",
              "from": "",
              "namespace": "DropdownMenuRadioGroup"
            }
          ],
          "blocks": [
            {
              "hash": "6c315eb35e3902c88d1d58f0cf92a84d0515722ca1c01c36cd345e6a7c78a0b0",
              "name": "DropdownMenu",
              "kind": "VariableStatement",
              "content": "const DropdownMenu = DropdownMenuPrimitive.Root",
              "start": 13,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "ad0412bd5da11c6a27af9629b3a4928837fb529a5d21f1723e9d94e63a23584b",
              "name": "DropdownMenuTrigger",
              "kind": "VariableStatement",
              "content": "const DropdownMenuTrigger = DropdownMenuPrimitive.Trigger",
              "start": 15,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "b46d47a44623713ec1bdd1490522a1a31c7191ee4540d0593467c6e7d5726861",
              "name": "DropdownMenuGroup",
              "kind": "VariableStatement",
              "content": "const DropdownMenuGroup = DropdownMenuPrimitive.Group",
              "start": 17,
              "end": 17,
              "dependencies": []
            },
            {
              "hash": "9cff546659af79874017ca0f29cde3b584e460645a42aed48523368518799455",
              "name": "DropdownMenuPortal",
              "kind": "VariableStatement",
              "content": "const DropdownMenuPortal = DropdownMenuPrimitive.Portal",
              "start": 19,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "2fdcc64744da1ea4d5f09c240ac74cf6ce90166f1fbe175e4fe4b17865504690",
              "name": "DropdownMenuSub",
              "kind": "VariableStatement",
              "content": "const DropdownMenuSub = DropdownMenuPrimitive.Sub",
              "start": 21,
              "end": 21,
              "dependencies": []
            },
            {
              "hash": "672f36ca7aef2e8b6fb706ae9c3fc0e50d6405c9970a81ece7adee3062ed8b15",
              "name": "DropdownMenuRadioGroup",
              "kind": "VariableStatement",
              "content": "const DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup",
              "start": 23,
              "end": 23,
              "dependencies": []
            },
            {
              "hash": "3439b7440d3abdc94583e9a58271521b4237a1c78a633dcccbc57c96a6285707",
              "name": "DropdownMenuSubTrigger",
              "kind": "VariableStatement",
              "content": "const DropdownMenuSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\r\n  </DropdownMenuPrimitive.SubTrigger>\r\n))",
              "start": 25,
              "end": 43,
              "dependencies": []
            },
            {
              "hash": "1ce1ebcdc632954b533c28d26d1a60041cc973d89ba6d758a549c4eb7dc9e6d6",
              "name": "DropdownMenuSubContent",
              "kind": "VariableStatement",
              "content": "const DropdownMenuSubContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 47,
              "end": 59,
              "dependencies": []
            },
            {
              "hash": "9a4be26a2ceacc40498b75b83995ee8bc367f7c6ecc7ff36cc82e6081789926e",
              "name": "DropdownMenuContent",
              "kind": "VariableStatement",
              "content": "const DropdownMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Portal>\r\n    <DropdownMenuPrimitive.Content\r\n      ref={ref}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md\",\r\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </DropdownMenuPrimitive.Portal>\r\n))",
              "start": 63,
              "end": 79,
              "dependencies": []
            },
            {
              "hash": "58e1d10e07463adc0f874f4683e9b6f933bc295ae3e71fb6d91b884d64384308",
              "name": "DropdownMenuItem",
              "kind": "VariableStatement",
              "content": "const DropdownMenuItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 82,
              "end": 97,
              "dependencies": []
            },
            {
              "hash": "5b2da895e4b36d4aab8629146120bfb704fd6a8b2276d55e0b9bed4a39f2d2aa",
              "name": "DropdownMenuCheckboxItem",
              "kind": "VariableStatement",
              "content": "const DropdownMenuCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.CheckboxItem>\r\n))",
              "start": 100,
              "end": 120,
              "dependencies": []
            },
            {
              "hash": "eb63322e61fc37a194bd3eff4035cfb258a1343f3b8458af3df153ccd8399d12",
              "name": "DropdownMenuRadioItem",
              "kind": "VariableStatement",
              "content": "const DropdownMenuRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <DropdownMenuPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\r\n      </DropdownMenuPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </DropdownMenuPrimitive.RadioItem>\r\n))",
              "start": 124,
              "end": 143,
              "dependencies": []
            },
            {
              "hash": "1c7271918a7d906c7fc8d99374a253f21bfe8009d631ae416877ec0767c91c1c",
              "name": "DropdownMenuLabel",
              "kind": "VariableStatement",
              "content": "const DropdownMenuLabel = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 146,
              "end": 161,
              "dependencies": []
            },
            {
              "hash": "e03b1d8a05c80d7fa22ed6a1c3b974edaa03d00aa5401983adbe0618725f7b17",
              "name": "DropdownMenuSeparator",
              "kind": "VariableStatement",
              "content": "const DropdownMenuSeparator = React.forwardRef<\r\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <DropdownMenuPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 164,
              "end": 173,
              "dependencies": []
            },
            {
              "hash": "f1cba792556def02b12da4042ba5614ea24f6c6adf932102c47c92753fe7bfa1",
              "name": "DropdownMenuShortcut",
              "kind": "VariableStatement",
              "content": "const DropdownMenuShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}",
              "start": 176,
              "end": 186,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-label",
              "elements": [
                "LabelPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-slot",
              "elements": [
                "Slot"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react-hook-form",
              "elements": [
                "Controller",
                "ControllerProps",
                "FieldPath",
                "FieldValues",
                "FormProvider",
                "useFormContext"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/label.tsx",
              "elements": [
                "Label"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "useFormField",
              "type": "named",
              "from": "",
              "namespace": "useFormField"
            },
            {
              "name": "Form",
              "type": "named",
              "from": "",
              "namespace": "Form"
            },
            {
              "name": "FormItem",
              "type": "named",
              "from": "",
              "namespace": "FormItem"
            },
            {
              "name": "FormLabel",
              "type": "named",
              "from": "",
              "namespace": "FormLabel"
            },
            {
              "name": "FormControl",
              "type": "named",
              "from": "",
              "namespace": "FormControl"
            },
            {
              "name": "FormDescription",
              "type": "named",
              "from": "",
              "namespace": "FormDescription"
            },
            {
              "name": "FormMessage",
              "type": "named",
              "from": "",
              "namespace": "FormMessage"
            },
            {
              "name": "FormField",
              "type": "named",
              "from": "",
              "namespace": "FormField"
            }
          ],
          "blocks": [
            {
              "hash": "be777e1556aa2cd496a19dd84efc1748084a89bac81a384d1936a486f83c8f24",
              "name": "Form",
              "kind": "VariableStatement",
              "content": "const Form = FormProvider",
              "start": 18,
              "end": 18,
              "dependencies": []
            },
            {
              "hash": "8e40890ab32b5bffbb4ba867741648a5f424cf79ae23de0eae367ea63488d91b",
              "name": "FormFieldContextValue",
              "kind": "TypeAliasDeclaration",
              "content": "type FormFieldContextValue<\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n> = {\r\n  name: TName\r\n}",
              "start": 20,
              "end": 25,
              "dependencies": []
            },
            {
              "hash": "75cbb24a1ae35eddfc92436d949f26e570329035482fba41906cdd017b08cd3a",
              "name": "FormFieldContext",
              "kind": "VariableStatement",
              "content": "const FormFieldContext = React.createContext<FormFieldContextValue>(\r\n  {} as FormFieldContextValue\r\n)",
              "start": 27,
              "end": 29,
              "dependencies": []
            },
            {
              "hash": "d1caf5d8ef8c7dcfabd13c8796a50e89b3a126a61edf3c11d96e1bf7860f0054",
              "name": "FormField",
              "kind": "VariableStatement",
              "content": "const FormField = <\r\n  TFieldValues extends FieldValues = FieldValues,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\r\n>({\r\n  ...props\r\n}: ControllerProps<TFieldValues, TName>) => {\r\n  return (\r\n    <FormFieldContext.Provider value={{ name: props.name }}>\r\n      <Controller {...props} />\r\n    </FormFieldContext.Provider>\r\n  )\r\n}",
              "start": 31,
              "end": 42,
              "dependencies": []
            },
            {
              "hash": "bfffd7ab05fca73c259c4568f6cbfb6591a1295340e14f4d69b7778fafcf5f94",
              "name": "useFormField",
              "kind": "VariableStatement",
              "content": "const useFormField = () => {\r\n  const fieldContext = React.useContext(FormFieldContext)\r\n  const itemContext = React.useContext(FormItemContext)\r\n  const { getFieldState, formState } = useFormContext()\r\n\r\n  const fieldState = getFieldState(fieldContext.name, formState)\r\n\r\n  if (!fieldContext) {\r\n    throw new Error(\"useFormField should be used within <FormField>\")\r\n  }\r\n\r\n  const { id } = itemContext\r\n\r\n  return {\r\n    id,\r\n    name: fieldContext.name,\r\n    formItemId: `${id}-form-item`,\r\n    formDescriptionId: `${id}-form-item-description`,\r\n    formMessageId: `${id}-form-item-message`,\r\n    ...fieldState,\r\n  }\r\n}",
              "start": 44,
              "end": 65,
              "dependencies": []
            },
            {
              "hash": "6726f5f0bea03fc49c3d465241673e3552223bdd6b8ecf317a897909708508ae",
              "name": "FormItemContextValue",
              "kind": "TypeAliasDeclaration",
              "content": "type FormItemContextValue = {\r\n  id: string\r\n}",
              "start": 67,
              "end": 69,
              "dependencies": []
            },
            {
              "hash": "1618770dc0a9ff4bfc3a59a40279d7834faf319f0c9566339fe0b5d36f59db4a",
              "name": "FormItemContext",
              "kind": "VariableStatement",
              "content": "const FormItemContext = React.createContext<FormItemContextValue>(\r\n  {} as FormItemContextValue\r\n)",
              "start": 71,
              "end": 73,
              "dependencies": []
            },
            {
              "hash": "3c448f50573b4eae45ef8965a9e464c03e4dd76f56e20ab8c807d92b2f98b1ad",
              "name": "FormItem",
              "kind": "VariableStatement",
              "content": "const FormItem = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => {\r\n  const id = React.useId()\r\n\r\n  return (\r\n    <FormItemContext.Provider value={{ id }}>\r\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\r\n    </FormItemContext.Provider>\r\n  )\r\n})",
              "start": 75,
              "end": 86,
              "dependencies": []
            },
            {
              "hash": "f095061890fdb5381cd9bbdf3e9502a68be76002c6ff87746db5ab25ddafa9d3",
              "name": "FormLabel",
              "kind": "VariableStatement",
              "content": "const FormLabel = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  const { error, formItemId } = useFormField()\r\n\r\n  return (\r\n    <Label\r\n      ref={ref}\r\n      className={cn(error && \"text-destructive\", className)}\r\n      htmlFor={formItemId}\r\n      {...props}\r\n    />\r\n  )\r\n})",
              "start": 89,
              "end": 103,
              "dependencies": []
            },
            {
              "hash": "c503f7dbaa1ae720a46446e1cd7dc49992c39a65e6f34ceafb3f0c8898494d1d",
              "name": "FormControl",
              "kind": "VariableStatement",
              "content": "const FormControl = React.forwardRef<\r\n  React.ElementRef<typeof Slot>,\r\n  React.ComponentPropsWithoutRef<typeof Slot>\r\n>(({ ...props }, ref) => {\r\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\r\n\r\n  return (\r\n    <Slot\r\n      ref={ref}\r\n      id={formItemId}\r\n      aria-describedby={\r\n        !error\r\n          ? `${formDescriptionId}`\r\n          : `${formDescriptionId} ${formMessageId}`\r\n      }\r\n      aria-invalid={!!error}\r\n      {...props}\r\n    />\r\n  )\r\n})",
              "start": 106,
              "end": 125,
              "dependencies": []
            },
            {
              "hash": "e3841e0e490c807239fd46b7bcc809ffc63221b337c196a2b98471add6a774db",
              "name": "FormDescription",
              "kind": "VariableStatement",
              "content": "const FormDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => {\r\n  const { formDescriptionId } = useFormField()\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formDescriptionId}\r\n      className={cn(\"text-[0.8rem] text-muted-foreground\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n})",
              "start": 128,
              "end": 142,
              "dependencies": []
            },
            {
              "hash": "fd265e50e192f6d4b961574531f3b5ea639bf662a504e50690d0a2c0084ef017",
              "name": "FormMessage",
              "kind": "VariableStatement",
              "content": "const FormMessage = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, children, ...props }, ref) => {\r\n  const { error, formMessageId } = useFormField()\r\n  const body = error ? String(error?.message) : children\r\n\r\n  if (!body) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <p\r\n      ref={ref}\r\n      id={formMessageId}\r\n      className={cn(\"text-[0.8rem] font-medium text-destructive\", className)}\r\n      {...props}\r\n    >\r\n      {body}\r\n    </p>\r\n  )\r\n})",
              "start": 145,
              "end": 166,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/hover-card.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-hover-card",
              "elements": [
                "HoverCardPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "HoverCard",
              "type": "named",
              "from": "",
              "namespace": "HoverCard"
            },
            {
              "name": "HoverCardTrigger",
              "type": "named",
              "from": "",
              "namespace": "HoverCardTrigger"
            },
            {
              "name": "HoverCardContent",
              "type": "named",
              "from": "",
              "namespace": "HoverCardContent"
            }
          ],
          "blocks": [
            {
              "hash": "ae6e0482fe68e64c4cedfe502248cc247904269dbe34dd39f5e8b0a51e0c53be",
              "name": "HoverCard",
              "kind": "VariableStatement",
              "content": "const HoverCard = HoverCardPrimitive.Root",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "d18247ce411118f87a6465302fccd22fd3f45e9b2d86aa1a220d8b20ee75589b",
              "name": "HoverCardTrigger",
              "kind": "VariableStatement",
              "content": "const HoverCardTrigger = HoverCardPrimitive.Trigger",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "93611747f243192084b7fa5231cfb174c8fb138ecae6f10958f9185f146d07c8",
              "name": "HoverCardContent",
              "kind": "VariableStatement",
              "content": "const HoverCardContent = React.forwardRef<\r\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <HoverCardPrimitive.Content\r\n    ref={ref}\r\n    align={align}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 12,
              "end": 26,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input-otp.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "DashIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "input-otp",
              "elements": [
                "OTPInput",
                "OTPInputContext"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "InputOTP",
              "type": "named",
              "from": "",
              "namespace": "InputOTP"
            },
            {
              "name": "InputOTPGroup",
              "type": "named",
              "from": "",
              "namespace": "InputOTPGroup"
            },
            {
              "name": "InputOTPSlot",
              "type": "named",
              "from": "",
              "namespace": "InputOTPSlot"
            },
            {
              "name": "InputOTPSeparator",
              "type": "named",
              "from": "",
              "namespace": "InputOTPSeparator"
            }
          ],
          "blocks": [
            {
              "hash": "b7723087e81c052dc2f82af9c17c2353e0498d1b91cedb1e0e72dafa947d7a88",
              "name": "InputOTP",
              "kind": "VariableStatement",
              "content": "const InputOTP = React.forwardRef<\r\n  React.ElementRef<typeof OTPInput>,\r\n  React.ComponentPropsWithoutRef<typeof OTPInput>\r\n>(({ className, containerClassName, ...props }, ref) => (\r\n  <OTPInput\r\n    ref={ref}\r\n    containerClassName={cn(\r\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\r\n      containerClassName\r\n    )}\r\n    className={cn(\"disabled:cursor-not-allowed\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 9,
              "end": 22,
              "dependencies": []
            },
            {
              "hash": "01765d047ecaac58e7a1c3a2b5fde66af9c046bf633305a69b2d29b3b418fdf3",
              "name": "InputOTPGroup",
              "kind": "VariableStatement",
              "content": "const InputOTPGroup = React.forwardRef<\r\n  React.ElementRef<\"div\">,\r\n  React.ComponentPropsWithoutRef<\"div\">\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\r\n))",
              "start": 25,
              "end": 30,
              "dependencies": []
            },
            {
              "hash": "2eb2558367fb7dfd7e61ec891de5274b8bcdcf3e5c694d65988d6ff1822a452d",
              "name": "InputOTPSlot",
              "kind": "VariableStatement",
              "content": "const InputOTPSlot = React.forwardRef<\r\n  React.ElementRef<\"div\">,\r\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\r\n>(({ index, className, ...props }, ref) => {\r\n  const inputOTPContext = React.useContext(OTPInputContext)\r\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative flex h-9 w-9 items-center justify-center border-y border-r border-input text-sm shadow-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\r\n        isActive && \"z-10 ring-1 ring-ring\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {char}\r\n      {hasFakeCaret && (\r\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\r\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n})",
              "start": 33,
              "end": 58,
              "dependencies": []
            },
            {
              "hash": "96f2e7b86e298db87768aed9023af127e827c58b07680aa2b8e836fa5df6dce4",
              "name": "InputOTPSeparator",
              "kind": "VariableStatement",
              "content": "const InputOTPSeparator = React.forwardRef<\r\n  React.ElementRef<\"div\">,\r\n  React.ComponentPropsWithoutRef<\"div\">\r\n>(({ ...props }, ref) => (\r\n  <div ref={ref} role=\"separator\" {...props}>\r\n    <DashIcon />\r\n  </div>\r\n))",
              "start": 61,
              "end": 68,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "InputProps",
              "type": "named",
              "from": "",
              "namespace": "InputProps"
            },
            {
              "name": "Input",
              "type": "named",
              "from": "",
              "namespace": "Input"
            }
          ],
          "blocks": [
            {
              "hash": "7fc1fd3ff18fb47812061df11a4864af2445c2ae94955fb9db770b163df45f5f",
              "name": "InputProps",
              "kind": "TypeAliasDeclaration",
              "content": "export type InputProps = React.InputHTMLAttributes<HTMLInputElement>;",
              "start": 5,
              "end": 5,
              "dependencies": []
            },
            {
              "hash": "70f738ba25c69ab2e6a1713ce07339c6bfd8fcc43753a5ef18a279759f8838c9",
              "name": "Input",
              "kind": "VariableStatement",
              "content": "const Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);",
              "start": 7,
              "end": 21,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/label.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-label",
              "elements": [
                "LabelPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Label",
              "type": "named",
              "from": "",
              "namespace": "Label"
            }
          ],
          "blocks": [
            {
              "hash": "6f6479b9886e5464d6e592e755ad9e31c39f035fb0551bcf67b586a64e4db8ee",
              "name": "labelVariants",
              "kind": "VariableStatement",
              "content": "const labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n)",
              "start": 9,
              "end": 11,
              "dependencies": []
            },
            {
              "hash": "0c3037da3887c92854b08beca3d27524f67f3bd72b8fb05a0735adc41bf13d78",
              "name": "Label",
              "kind": "VariableStatement",
              "content": "const Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 13,
              "end": 23,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/menubar.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "CheckIcon",
                "ChevronRightIcon",
                "DotFilledIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-menubar",
              "elements": [
                "MenubarPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Menubar",
              "type": "named",
              "from": "",
              "namespace": "Menubar"
            },
            {
              "name": "MenubarMenu",
              "type": "named",
              "from": "",
              "namespace": "MenubarMenu"
            },
            {
              "name": "MenubarTrigger",
              "type": "named",
              "from": "",
              "namespace": "MenubarTrigger"
            },
            {
              "name": "MenubarContent",
              "type": "named",
              "from": "",
              "namespace": "MenubarContent"
            },
            {
              "name": "MenubarItem",
              "type": "named",
              "from": "",
              "namespace": "MenubarItem"
            },
            {
              "name": "MenubarSeparator",
              "type": "named",
              "from": "",
              "namespace": "MenubarSeparator"
            },
            {
              "name": "MenubarLabel",
              "type": "named",
              "from": "",
              "namespace": "MenubarLabel"
            },
            {
              "name": "MenubarCheckboxItem",
              "type": "named",
              "from": "",
              "namespace": "MenubarCheckboxItem"
            },
            {
              "name": "MenubarRadioGroup",
              "type": "named",
              "from": "",
              "namespace": "MenubarRadioGroup"
            },
            {
              "name": "MenubarRadioItem",
              "type": "named",
              "from": "",
              "namespace": "MenubarRadioItem"
            },
            {
              "name": "MenubarPortal",
              "type": "named",
              "from": "",
              "namespace": "MenubarPortal"
            },
            {
              "name": "MenubarSubContent",
              "type": "named",
              "from": "",
              "namespace": "MenubarSubContent"
            },
            {
              "name": "MenubarSubTrigger",
              "type": "named",
              "from": "",
              "namespace": "MenubarSubTrigger"
            },
            {
              "name": "MenubarGroup",
              "type": "named",
              "from": "",
              "namespace": "MenubarGroup"
            },
            {
              "name": "MenubarSub",
              "type": "named",
              "from": "",
              "namespace": "MenubarSub"
            },
            {
              "name": "MenubarShortcut",
              "type": "named",
              "from": "",
              "namespace": "MenubarShortcut"
            },
            {
              "name": "MenubarShortcut",
              "type": "named",
              "from": "",
              "namespace": "MenubarShortcut"
            }
          ],
          "blocks": [
            {
              "hash": "a7acc0be300574686459b591f0d669c0866a77f2671095908d1f83bffbe93e0c",
              "name": "MenubarMenu",
              "kind": "VariableStatement",
              "content": "const MenubarMenu = MenubarPrimitive.Menu",
              "start": 13,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "5b96b8e337c07c9eaf4241826b5b164e9374dc14187c90a6197a9f4131ba3a48",
              "name": "MenubarGroup",
              "kind": "VariableStatement",
              "content": "const MenubarGroup = MenubarPrimitive.Group",
              "start": 15,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "ef46a4ca8a032a00f43faede87ffacab8efcb67d65fb9810486c77dd69e863d8",
              "name": "MenubarPortal",
              "kind": "VariableStatement",
              "content": "const MenubarPortal = MenubarPrimitive.Portal",
              "start": 17,
              "end": 17,
              "dependencies": []
            },
            {
              "hash": "f69d4d9bcc3e410c3ba860bcaa157f40cc797c3d13a6ff9b576886151c64afbf",
              "name": "MenubarSub",
              "kind": "VariableStatement",
              "content": "const MenubarSub = MenubarPrimitive.Sub",
              "start": 19,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "23144c9e7bc7cef8dd04cee5c029b0b92909b726ee7134259ce5ee79bd851841",
              "name": "MenubarRadioGroup",
              "kind": "VariableStatement",
              "content": "const MenubarRadioGroup = MenubarPrimitive.RadioGroup",
              "start": 21,
              "end": 21,
              "dependencies": []
            },
            {
              "hash": "560122d3885928673ee797ed192d27bc22e16923f3709c3b7cf918453cfb928f",
              "name": "Menubar",
              "kind": "VariableStatement",
              "content": "const Menubar = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 items-center space-x-1 rounded-md border bg-background p-1 shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 23,
              "end": 35,
              "dependencies": []
            },
            {
              "hash": "626de34b0cd9842fbbda64f5b88e7777b100f2d61eb06197f1929c5c2ca35204",
              "name": "MenubarTrigger",
              "kind": "VariableStatement",
              "content": "const MenubarTrigger = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 38,
              "end": 50,
              "dependencies": []
            },
            {
              "hash": "55f98f5882614989eed89ddca52f8879ba7008bd12f85ca8f17a624c093a99e9",
              "name": "MenubarSubTrigger",
              "kind": "VariableStatement",
              "content": "const MenubarSubTrigger = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, children, ...props }, ref) => (\r\n  <MenubarPrimitive.SubTrigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <ChevronRightIcon className=\"ml-auto h-4 w-4\" />\r\n  </MenubarPrimitive.SubTrigger>\r\n))",
              "start": 53,
              "end": 71,
              "dependencies": []
            },
            {
              "hash": "ebe65ff5ed230f5c8deebe9c70ab6b015820d2b32aad9f3035162f2dba3dffd3",
              "name": "MenubarSubContent",
              "kind": "VariableStatement",
              "content": "const MenubarSubContent = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\r\n>(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.SubContent\r\n    ref={ref}\r\n    className={cn(\r\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 74,
              "end": 86,
              "dependencies": []
            },
            {
              "hash": "b8a49ce3c534afe02ed944276c15441c15e400ec2925a3abe7e252283fecf908",
              "name": "MenubarContent",
              "kind": "VariableStatement",
              "content": "const MenubarContent = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\r\n>(\r\n  (\r\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\r\n    ref\r\n  ) => (\r\n    <MenubarPrimitive.Portal>\r\n      <MenubarPrimitive.Content\r\n        ref={ref}\r\n        align={align}\r\n        alignOffset={alignOffset}\r\n        sideOffset={sideOffset}\r\n        className={cn(\r\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    </MenubarPrimitive.Portal>\r\n  )\r\n)",
              "start": 89,
              "end": 111,
              "dependencies": []
            },
            {
              "hash": "b11c0d485b138421de7108b7eb8d784afa06d0438090207accd30e5ed7402c73",
              "name": "MenubarItem",
              "kind": "VariableStatement",
              "content": "const MenubarItem = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <MenubarPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 114,
              "end": 129,
              "dependencies": []
            },
            {
              "hash": "3094ac17b432236bdc177276270599754bd509bd91615a4fed391d748474a453",
              "name": "MenubarCheckboxItem",
              "kind": "VariableStatement",
              "content": "const MenubarCheckboxItem = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\r\n>(({ className, children, checked, ...props }, ref) => (\r\n  <MenubarPrimitive.CheckboxItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    checked={checked}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </MenubarPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </MenubarPrimitive.CheckboxItem>\r\n))",
              "start": 132,
              "end": 152,
              "dependencies": []
            },
            {
              "hash": "3f5e641ef491fafbe1082496e56bd6e6533b81a7e0523f12093759a51255d11b",
              "name": "MenubarRadioItem",
              "kind": "VariableStatement",
              "content": "const MenubarRadioItem = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\r\n>(({ className, children, ...props }, ref) => (\r\n  <MenubarPrimitive.RadioItem\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <MenubarPrimitive.ItemIndicator>\r\n        <DotFilledIcon className=\"h-4 w-4 fill-current\" />\r\n      </MenubarPrimitive.ItemIndicator>\r\n    </span>\r\n    {children}\r\n  </MenubarPrimitive.RadioItem>\r\n))",
              "start": 155,
              "end": 174,
              "dependencies": []
            },
            {
              "hash": "3fd2d35b42e5973f32679af4faef0dc5c84d380c1ffeac585c98b818f5aca26c",
              "name": "MenubarLabel",
              "kind": "VariableStatement",
              "content": "const MenubarLabel = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\r\n    inset?: boolean\r\n  }\r\n>(({ className, inset, ...props }, ref) => (\r\n  <MenubarPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\r\n      \"px-2 py-1.5 text-sm font-semibold\",\r\n      inset && \"pl-8\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 177,
              "end": 192,
              "dependencies": []
            },
            {
              "hash": "7fe7cd28a576abbb21a4d1772f13c014ad307f400d03bd4cb4463c4d8f854c55",
              "name": "MenubarSeparator",
              "kind": "VariableStatement",
              "content": "const MenubarSeparator = React.forwardRef<\r\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <MenubarPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 195,
              "end": 204,
              "dependencies": []
            },
            {
              "hash": "9e3f95f6d8721a80125eb390e69f8adf2a72865b70ce80eb9bf82d9bfde4ceae",
              "name": "MenubarShortcut",
              "kind": "VariableStatement",
              "content": "const MenubarShortcut = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLSpanElement>) => {\r\n  return (\r\n    <span\r\n      className={cn(\r\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n}",
              "start": 207,
              "end": 220,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/navigation-menu.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "ChevronDownIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-navigation-menu",
              "elements": [
                "NavigationMenuPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "navigationMenuTriggerStyle",
              "type": "named",
              "from": "",
              "namespace": "navigationMenuTriggerStyle"
            },
            {
              "name": "NavigationMenu",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenu"
            },
            {
              "name": "NavigationMenuList",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuList"
            },
            {
              "name": "NavigationMenuItem",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuItem"
            },
            {
              "name": "NavigationMenuContent",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuContent"
            },
            {
              "name": "NavigationMenuTrigger",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuTrigger"
            },
            {
              "name": "NavigationMenuLink",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuLink"
            },
            {
              "name": "NavigationMenuIndicator",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuIndicator"
            },
            {
              "name": "NavigationMenuViewport",
              "type": "named",
              "from": "",
              "namespace": "NavigationMenuViewport"
            }
          ],
          "blocks": [
            {
              "hash": "992f8707e501ccf88454edbc77b53a51d155903d317450265c2b8bc78beb3eb2",
              "name": "NavigationMenu",
              "kind": "VariableStatement",
              "content": "const NavigationMenu = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <NavigationMenuViewport />\r\n  </NavigationMenuPrimitive.Root>\r\n))",
              "start": 8,
              "end": 23,
              "dependencies": []
            },
            {
              "hash": "dad7b3995c0daaafb915756f9c9789119a4dca83da058a6bc75a4d3423ae1feb",
              "name": "NavigationMenuList",
              "kind": "VariableStatement",
              "content": "const NavigationMenuList = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 26,
              "end": 38,
              "dependencies": []
            },
            {
              "hash": "eeb95a7d49ab6a6d95313a11376f2bc2c9d5e171be87fa4c54f4644488d4000a",
              "name": "NavigationMenuItem",
              "kind": "VariableStatement",
              "content": "const NavigationMenuItem = NavigationMenuPrimitive.Item",
              "start": 41,
              "end": 41,
              "dependencies": []
            },
            {
              "hash": "cd84db5e5ae5d3b5840dd995028bda4cb83631ac116aa768029805c1c570ba5e",
              "name": "navigationMenuTriggerStyle",
              "kind": "VariableStatement",
              "content": "const navigationMenuTriggerStyle = cva(\r\n  \"group inline-flex h-9 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-accent/50 data-[state=open]:bg-accent/50\"\r\n)",
              "start": 43,
              "end": 45,
              "dependencies": []
            },
            {
              "hash": "1f3687187b176d36598525b08e9b356c700342a53ef710f685fbd6f944ba169e",
              "name": "NavigationMenuTrigger",
              "kind": "VariableStatement",
              "content": "const NavigationMenuTrigger = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\r\n    {...props}\r\n  >\r\n    {children}{\" \"}\r\n    <ChevronDownIcon\r\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-300 group-data-[state=open]:rotate-180\"\r\n      aria-hidden=\"true\"\r\n    />\r\n  </NavigationMenuPrimitive.Trigger>\r\n))",
              "start": 47,
              "end": 62,
              "dependencies": []
            },
            {
              "hash": "4266aaa140d407b401037fe4c21b9cb599457b26deb1c1aa5d052291e1062c3a",
              "name": "NavigationMenuContent",
              "kind": "VariableStatement",
              "content": "const NavigationMenuContent = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 65,
              "end": 77,
              "dependencies": []
            },
            {
              "hash": "db7dfc7f2af0b2b868f5080d432edabae2bc5a6d8658723dabeb0e21a22d5f93",
              "name": "NavigationMenuLink",
              "kind": "VariableStatement",
              "content": "const NavigationMenuLink = NavigationMenuPrimitive.Link",
              "start": 80,
              "end": 80,
              "dependencies": []
            },
            {
              "hash": "59e0334c2c7ddd1fb3e1d4404b3806de5e1fd3d642ee0a120a9a49cdd68fff25",
              "name": "NavigationMenuViewport",
              "kind": "VariableStatement",
              "content": "const NavigationMenuViewport = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\r\n    <NavigationMenuPrimitive.Viewport\r\n      className={cn(\r\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\r\n        className\r\n      )}\r\n      ref={ref}\r\n      {...props}\r\n    />\r\n  </div>\r\n))",
              "start": 82,
              "end": 96,
              "dependencies": []
            },
            {
              "hash": "5b5820680ce1422d3fced9d630cab3e9a5f3b3b261399555376415b060a5f4b5",
              "name": "NavigationMenuIndicator",
              "kind": "VariableStatement",
              "content": "const NavigationMenuIndicator = React.forwardRef<\r\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\r\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\r\n>(({ className, ...props }, ref) => (\r\n  <NavigationMenuPrimitive.Indicator\r\n    ref={ref}\r\n    className={cn(\r\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\r\n  </NavigationMenuPrimitive.Indicator>\r\n))",
              "start": 100,
              "end": 114,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/pagination.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "ChevronLeftIcon",
                "ChevronRightIcon",
                "DotsHorizontalIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "ButtonProps",
                "buttonVariants"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Pagination",
              "type": "named",
              "from": "",
              "namespace": "Pagination"
            },
            {
              "name": "Pagination",
              "type": "named",
              "from": "",
              "namespace": "Pagination"
            },
            {
              "name": "PaginationContent",
              "type": "named",
              "from": "",
              "namespace": "PaginationContent"
            },
            {
              "name": "PaginationLink",
              "type": "named",
              "from": "",
              "namespace": "PaginationLink"
            },
            {
              "name": "PaginationLink",
              "type": "named",
              "from": "",
              "namespace": "PaginationLink"
            },
            {
              "name": "PaginationItem",
              "type": "named",
              "from": "",
              "namespace": "PaginationItem"
            },
            {
              "name": "PaginationPrevious",
              "type": "named",
              "from": "",
              "namespace": "PaginationPrevious"
            },
            {
              "name": "PaginationPrevious",
              "type": "named",
              "from": "",
              "namespace": "PaginationPrevious"
            },
            {
              "name": "PaginationNext",
              "type": "named",
              "from": "",
              "namespace": "PaginationNext"
            },
            {
              "name": "PaginationNext",
              "type": "named",
              "from": "",
              "namespace": "PaginationNext"
            },
            {
              "name": "PaginationEllipsis",
              "type": "named",
              "from": "",
              "namespace": "PaginationEllipsis"
            },
            {
              "name": "PaginationEllipsis",
              "type": "named",
              "from": "",
              "namespace": "PaginationEllipsis"
            }
          ],
          "blocks": [
            {
              "hash": "b8a463077be998078584fb50eafd7b5de91d6bc0c1a311fd975291c3c0a8c57d",
              "name": "Pagination",
              "kind": "VariableStatement",
              "content": "const Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\r\n  <nav\r\n    role=\"navigation\"\r\n    aria-label=\"pagination\"\r\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\r\n    {...props}\r\n  />\r\n)",
              "start": 11,
              "end": 18,
              "dependencies": []
            },
            {
              "hash": "cdad1368bb1083d3d30b491dce4ee2a87b1ff92c430d0664ad7038b0090a8c65",
              "name": "PaginationContent",
              "kind": "VariableStatement",
              "content": "const PaginationContent = React.forwardRef<\r\n  HTMLUListElement,\r\n  React.ComponentProps<\"ul\">\r\n>(({ className, ...props }, ref) => (\r\n  <ul\r\n    ref={ref}\r\n    className={cn(\"flex flex-row items-center gap-1\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 21,
              "end": 30,
              "dependencies": []
            },
            {
              "hash": "8f782fabd51d8d5efbf3075efa811a6e5ed57bbdeb98f59bc2749e07c1b473bc",
              "name": "PaginationItem",
              "kind": "VariableStatement",
              "content": "const PaginationItem = React.forwardRef<\r\n  HTMLLIElement,\r\n  React.ComponentProps<\"li\">\r\n>(({ className, ...props }, ref) => (\r\n  <li ref={ref} className={cn(\"\", className)} {...props} />\r\n))",
              "start": 33,
              "end": 38,
              "dependencies": []
            },
            {
              "hash": "b80036311d605b86a8e42d393068fd1c2ff33cf7fd75584147387fbac53a9a84",
              "name": "PaginationLinkProps",
              "kind": "TypeAliasDeclaration",
              "content": "type PaginationLinkProps = {\r\n  isActive?: boolean\r\n} & Pick<ButtonProps, \"size\"> &\r\n  React.ComponentProps<\"a\">",
              "start": 41,
              "end": 44,
              "dependencies": [
                {
                  "hash": "27a50950e3ac1b8db6c7d59a7e67310d562a429e377bb633e43785f9d6db8d47",
                  "name": "ButtonProps",
                  "kind": "InterfaceDeclaration",
                  "start": 37,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                }
              ]
            },
            {
              "hash": "e7929d8ecd1d3a092d7868811d381e94a9560a4ba06e74dc4611cb19519efed0",
              "name": "PaginationLink",
              "kind": "VariableStatement",
              "content": "const PaginationLink = ({\r\n  className,\r\n  isActive,\r\n  size = \"icon\",\r\n  ...props\r\n}: PaginationLinkProps) => (\r\n  <a\r\n    aria-current={isActive ? \"page\" : undefined}\r\n    className={cn(\r\n      buttonVariants({\r\n        variant: isActive ? \"outline\" : \"ghost\",\r\n        size,\r\n      }),\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 46,
              "end": 63,
              "dependencies": []
            },
            {
              "hash": "460b9ab91d0672fa4fd7ac253bf7d1273c1cf6a512a0824b28dcd1962b4db47f",
              "name": "PaginationPrevious",
              "kind": "VariableStatement",
              "content": "const PaginationPrevious = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) => (\r\n  <PaginationLink\r\n    aria-label=\"Go to previous page\"\r\n    size=\"default\"\r\n    className={cn(\"gap-1 pl-2.5\", className)}\r\n    {...props}\r\n  >\r\n    <ChevronLeftIcon className=\"h-4 w-4\" />\r\n    <span>Previous</span>\r\n  </PaginationLink>\r\n)",
              "start": 66,
              "end": 79,
              "dependencies": []
            },
            {
              "hash": "8505a4fc26c1493ce48b49c52596f3cf78b4f3de8e44fb5a45af8afbb28a1296",
              "name": "PaginationNext",
              "kind": "VariableStatement",
              "content": "const PaginationNext = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof PaginationLink>) => (\r\n  <PaginationLink\r\n    aria-label=\"Go to next page\"\r\n    size=\"default\"\r\n    className={cn(\"gap-1 pr-2.5\", className)}\r\n    {...props}\r\n  >\r\n    <span>Next</span>\r\n    <ChevronRightIcon className=\"h-4 w-4\" />\r\n  </PaginationLink>\r\n)",
              "start": 82,
              "end": 95,
              "dependencies": []
            },
            {
              "hash": "179fdb0f3c9ae9ff369e5fe979554eea837a0f3df1b5c37d24178cceddf1abb6",
              "name": "PaginationEllipsis",
              "kind": "VariableStatement",
              "content": "const PaginationEllipsis = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<\"span\">) => (\r\n  <span\r\n    aria-hidden\r\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\r\n    {...props}\r\n  >\r\n    <DotsHorizontalIcon className=\"h-4 w-4\" />\r\n    <span className=\"sr-only\">More pages</span>\r\n  </span>\r\n)",
              "start": 98,
              "end": 110,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/popover.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-popover",
              "elements": [
                "PopoverPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Popover",
              "type": "named",
              "from": "",
              "namespace": "Popover"
            },
            {
              "name": "PopoverTrigger",
              "type": "named",
              "from": "",
              "namespace": "PopoverTrigger"
            },
            {
              "name": "PopoverContent",
              "type": "named",
              "from": "",
              "namespace": "PopoverContent"
            },
            {
              "name": "PopoverAnchor",
              "type": "named",
              "from": "",
              "namespace": "PopoverAnchor"
            }
          ],
          "blocks": [
            {
              "hash": "228b242bbf886d0e54922e5f7beb39eb16d8ac53ef9f255e3b030b69ed7dcfd2",
              "name": "Popover",
              "kind": "VariableStatement",
              "content": "const Popover = PopoverPrimitive.Root",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "f30ad7c0fae9555248246d0dc83e70cc7f75f91ba7afc9c6d58b0a06032fdd44",
              "name": "PopoverTrigger",
              "kind": "VariableStatement",
              "content": "const PopoverTrigger = PopoverPrimitive.Trigger",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "4c8e28674559e111fc36f7fef42843f79a7cdad79d5b54e6913f55ae59820b17",
              "name": "PopoverAnchor",
              "kind": "VariableStatement",
              "content": "const PopoverAnchor = PopoverPrimitive.Anchor",
              "start": 12,
              "end": 12,
              "dependencies": []
            },
            {
              "hash": "5a8fe581f230d906d7f0f2e97167e8c7f27928ea17b077eb0e0cb4f0c299c99b",
              "name": "PopoverContent",
              "kind": "VariableStatement",
              "content": "const PopoverContent = React.forwardRef<\r\n  React.ElementRef<typeof PopoverPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\r\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\r\n  <PopoverPrimitive.Portal>\r\n    <PopoverPrimitive.Content\r\n      ref={ref}\r\n      align={align}\r\n      sideOffset={sideOffset}\r\n      className={cn(\r\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  </PopoverPrimitive.Portal>\r\n))",
              "start": 14,
              "end": 30,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/progress.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-progress",
              "elements": [
                "ProgressPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Progress",
              "type": "named",
              "from": "",
              "namespace": "Progress"
            }
          ],
          "blocks": [
            {
              "hash": "7f007d55255d3b1561e173d160daa3f932e9c57f94f5c5e1696f1b5e41ae9bec",
              "name": "Progress",
              "kind": "VariableStatement",
              "content": "const Progress = React.forwardRef<\r\n  React.ElementRef<typeof ProgressPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\r\n>(({ className, value, ...props }, ref) => (\r\n  <ProgressPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative h-2 w-full overflow-hidden rounded-full bg-primary/20\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ProgressPrimitive.Indicator\r\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\r\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\r\n    />\r\n  </ProgressPrimitive.Root>\r\n))",
              "start": 8,
              "end": 25,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/radio-group.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "CheckIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-radio-group",
              "elements": [
                "RadioGroupPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "RadioGroup",
              "type": "named",
              "from": "",
              "namespace": "RadioGroup"
            },
            {
              "name": "RadioGroupItem",
              "type": "named",
              "from": "",
              "namespace": "RadioGroupItem"
            }
          ],
          "blocks": [
            {
              "hash": "3cc9ba4ddc69fb7983efbf34ba7438232730ce4338fe7b191562c3378fee8645",
              "name": "RadioGroup",
              "kind": "VariableStatement",
              "content": "const RadioGroup = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Root\r\n      className={cn(\"grid gap-2\", className)}\r\n      {...props}\r\n      ref={ref}\r\n    />\r\n  )\r\n})",
              "start": 9,
              "end": 20,
              "dependencies": []
            },
            {
              "hash": "43f353fc2d15772fdbc1b564715b6fd49436d6ff408f678530e640f59982cb05",
              "name": "RadioGroupItem",
              "kind": "VariableStatement",
              "content": "const RadioGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\r\n>(({ className, ...props }, ref) => {\r\n  return (\r\n    <RadioGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary shadow focus:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\r\n        <CheckIcon className=\"h-3.5 w-3.5 fill-primary\" />\r\n      </RadioGroupPrimitive.Indicator>\r\n    </RadioGroupPrimitive.Item>\r\n  )\r\n})",
              "start": 23,
              "end": 41,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/resizable.tsx",
          "imports": [
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "DragHandleDots2Icon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react-resizable-panels",
              "elements": [
                "ResizablePrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ResizablePanelGroup",
              "type": "named",
              "from": "",
              "namespace": "ResizablePanelGroup"
            },
            {
              "name": "ResizablePanel",
              "type": "named",
              "from": "",
              "namespace": "ResizablePanel"
            },
            {
              "name": "ResizableHandle",
              "type": "named",
              "from": "",
              "namespace": "ResizableHandle"
            }
          ],
          "blocks": [
            {
              "hash": "e7e021a843b8227ca3a7527a5faa051d4888535590fddf0ec54c36fac999deba",
              "name": "ResizablePanelGroup",
              "kind": "VariableStatement",
              "content": "const ResizablePanelGroup = ({\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\r\n  <ResizablePrimitive.PanelGroup\r\n    className={cn(\r\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 8,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "b69728f0c2708f8d7504f7a07887ff50e61a877b9b0083a26417088a0be6e0f0",
              "name": "ResizablePanel",
              "kind": "VariableStatement",
              "content": "const ResizablePanel = ResizablePrimitive.Panel",
              "start": 21,
              "end": 21,
              "dependencies": []
            },
            {
              "hash": "8712e1b333bedb36b1e877dd53543c1d19db7c075d4aa3bef3f2c0866fe20b36",
              "name": "ResizableHandle",
              "kind": "VariableStatement",
              "content": "const ResizableHandle = ({\r\n  withHandle,\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\r\n  withHandle?: boolean\r\n}) => (\r\n  <ResizablePrimitive.PanelResizeHandle\r\n    className={cn(\r\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {withHandle && (\r\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\r\n        <DragHandleDots2Icon className=\"h-2.5 w-2.5\" />\r\n      </div>\r\n    )}\r\n  </ResizablePrimitive.PanelResizeHandle>\r\n)",
              "start": 23,
              "end": 43,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/scroll-area.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-scroll-area",
              "elements": [
                "ScrollAreaPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ScrollArea",
              "type": "named",
              "from": "",
              "namespace": "ScrollArea"
            },
            {
              "name": "ScrollBar",
              "type": "named",
              "from": "",
              "namespace": "ScrollBar"
            },
            {
              "name": "ScrollAreaGrab",
              "type": "named",
              "from": "",
              "namespace": "ScrollAreaGrab"
            }
          ],
          "blocks": [
            {
              "hash": "721f464169c89fdb1e4feb79e4cc0b9505c74307c3490a3fe55b29009d7d4cc7",
              "name": "ScrollArea",
              "kind": "VariableStatement",
              "content": "const ScrollArea = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => (\r\n  <ScrollAreaPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"relative overflow-hidden\", className)}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\r\n      {children}\r\n    </ScrollAreaPrimitive.Viewport>\r\n    <ScrollBar />\r\n    <ScrollAreaPrimitive.Corner />\r\n  </ScrollAreaPrimitive.Root>\r\n));",
              "start": 8,
              "end": 23,
              "dependencies": []
            },
            {
              "hash": "4e807325bb4b07b4f938c32b772ce9c03591953478fc12810b0305dbd2b69aef",
              "name": "ScrollBar",
              "kind": "VariableStatement",
              "content": "const ScrollBar = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\r\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\r\n    ref={ref}\r\n    orientation={orientation}\r\n    className={cn(\r\n      \"flex touch-none select-none transition-colors\",\r\n      orientation === \"vertical\" &&\r\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\r\n      orientation === \"horizontal\" &&\r\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\r\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\r\n));",
              "start": 26,
              "end": 45,
              "dependencies": []
            },
            {
              "hash": "636838e14cdb3e4d287f250188a6651bea50c4ab98e4f362045313608143fd4e",
              "name": "ScrollAreaGrab",
              "kind": "VariableStatement",
              "content": "const ScrollAreaGrab = React.forwardRef<\r\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\r\n>(({ className, children, ...props }, ref) => {\r\n  const tabsRef = React.useRef<HTMLDivElement | null>(null);\r\n  const [isDragging, setIsDragging] = React.useState(false);\r\n  const [startX, setStartX] = React.useState(0);\r\n  const [scrollLeft, setScrollLeft] = React.useState(0);\r\n  const [isNormalClick, setIsNormalClick] = React.useState(true);\r\n\r\n  const handleMouseDown: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n    const offsetLeft = tabsRef.current?.offsetLeft || 0;\r\n    setIsDragging(true);\r\n    setIsNormalClick(true);\r\n    setStartX(e.pageX - offsetLeft);\r\n    setScrollLeft(tabsRef.current?.scrollLeft || 0);\r\n  };\r\n\r\n  const handleMouseMove: React.MouseEventHandler<HTMLDivElement> = (e) => {\r\n    const offsetLeft = tabsRef.current?.offsetLeft || 0;\r\n    if (!isDragging) return;\r\n    const x = e.pageX - offsetLeft;\r\n    if (x !== startX) {\r\n      setIsNormalClick(false);\r\n    }\r\n    const walk = (x - startX) * 1; // Adjust scroll speed here\r\n    if (tabsRef.current) {\r\n      tabsRef.current.scrollLeft = scrollLeft - walk;\r\n    }\r\n  };\r\n\r\n  const handleMouseUp: React.MouseEventHandler<HTMLDivElement> = () => {\r\n    setIsNormalClick(true);\r\n    setIsDragging(false);\r\n  };\r\n\r\n  const handleMouseLeave: React.MouseEventHandler<HTMLDivElement> = () => {\r\n    setIsNormalClick(true);\r\n    setIsDragging(false);\r\n  };\r\n\r\n  return (\r\n    <ScrollAreaPrimitive.Root\r\n      ref={ref}\r\n      className={cn(\"relative overflow-hidden\", className)}\r\n      {...props}\r\n    >\r\n      <ScrollAreaPrimitive.Viewport\r\n        ref={tabsRef}\r\n        className=\"h-full w-full rounded-[inherit] !overflow-hidden whitespace-nowrap flex\"\r\n        onMouseDown={handleMouseDown}\r\n        onMouseMove={handleMouseMove}\r\n        onMouseUp={handleMouseUp}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        <div className={cn(!isNormalClick && \"pointer-events-none\")}>\r\n          {children}\r\n        </div>\r\n      </ScrollAreaPrimitive.Viewport>\r\n      {/* <ScrollBar orientation=\"vertical\" /> */}\r\n      <ScrollAreaPrimitive.Corner />\r\n    </ScrollAreaPrimitive.Root>\r\n  );\r\n});",
              "start": 48,
              "end": 111,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "CaretSortIcon",
                "CheckIcon",
                "ChevronDownIcon",
                "ChevronUpIcon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-select",
              "elements": [
                "SelectPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Select",
              "type": "named",
              "from": "",
              "namespace": "Select"
            },
            {
              "name": "SelectGroup",
              "type": "named",
              "from": "",
              "namespace": "SelectGroup"
            },
            {
              "name": "SelectValue",
              "type": "named",
              "from": "",
              "namespace": "SelectValue"
            },
            {
              "name": "SelectTrigger",
              "type": "named",
              "from": "",
              "namespace": "SelectTrigger"
            },
            {
              "name": "SelectContent",
              "type": "named",
              "from": "",
              "namespace": "SelectContent"
            },
            {
              "name": "SelectLabel",
              "type": "named",
              "from": "",
              "namespace": "SelectLabel"
            },
            {
              "name": "SelectItem",
              "type": "named",
              "from": "",
              "namespace": "SelectItem"
            },
            {
              "name": "SelectSeparator",
              "type": "named",
              "from": "",
              "namespace": "SelectSeparator"
            },
            {
              "name": "SelectScrollUpButton",
              "type": "named",
              "from": "",
              "namespace": "SelectScrollUpButton"
            },
            {
              "name": "SelectScrollDownButton",
              "type": "named",
              "from": "",
              "namespace": "SelectScrollDownButton"
            }
          ],
          "blocks": [
            {
              "hash": "ae87c43851324ab07e8cb16dd7a20a65a7583d1b812ee04c3ac803be9919b785",
              "name": "Select",
              "kind": "VariableStatement",
              "content": "const Select = SelectPrimitive.Root",
              "start": 14,
              "end": 14,
              "dependencies": []
            },
            {
              "hash": "3ecba69a87fdf51ae2b11ab854ae7a65f16450f9daaa2cbe9ea1de41df908b0e",
              "name": "SelectGroup",
              "kind": "VariableStatement",
              "content": "const SelectGroup = SelectPrimitive.Group",
              "start": 16,
              "end": 16,
              "dependencies": []
            },
            {
              "hash": "e475235bdee6c4f324cee8816a51b406d8dbdca25bfd46a6210a8456bf704f84",
              "name": "SelectValue",
              "kind": "VariableStatement",
              "content": "const SelectValue = SelectPrimitive.Value",
              "start": 18,
              "end": 18,
              "dependencies": []
            },
            {
              "hash": "a6ca8bf8c9031eb5c3683546f02f30fb5deb871469b726188a5d4f1e8e13d655",
              "name": "SelectTrigger",
              "kind": "VariableStatement",
              "content": "const SelectTrigger = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex h-9 w-full items-center justify-between whitespace-nowrap rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-1 focus:ring-ring disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    {children}\r\n    <SelectPrimitive.Icon asChild>\r\n      <CaretSortIcon className=\"h-4 w-4 opacity-50\" />\r\n    </SelectPrimitive.Icon>\r\n  </SelectPrimitive.Trigger>\r\n))",
              "start": 20,
              "end": 37,
              "dependencies": []
            },
            {
              "hash": "e26aa2b6b96ec494848394819bc1756b282d2976cf12d19160e436f2a52184a7",
              "name": "SelectScrollUpButton",
              "kind": "VariableStatement",
              "content": "const SelectScrollUpButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollUpButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronUpIcon />\r\n  </SelectPrimitive.ScrollUpButton>\r\n))",
              "start": 40,
              "end": 54,
              "dependencies": []
            },
            {
              "hash": "d1d8d5bd30e3b27a415e8374e10ef7eb904a390750adc2ce4aba71f246268d1b",
              "name": "SelectScrollDownButton",
              "kind": "VariableStatement",
              "content": "const SelectScrollDownButton = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.ScrollDownButton\r\n    ref={ref}\r\n    className={cn(\r\n      \"flex cursor-default items-center justify-center py-1\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <ChevronDownIcon />\r\n  </SelectPrimitive.ScrollDownButton>\r\n))",
              "start": 57,
              "end": 71,
              "dependencies": []
            },
            {
              "hash": "59fc745e635e0408644afa36f9ff55e07b472fc387083b43e4dfcb5b3cdc0096",
              "name": "SelectContent",
              "kind": "VariableStatement",
              "content": "const SelectContent = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\r\n>(({ className, children, position = \"popper\", ...props }, ref) => (\r\n  <SelectPrimitive.Portal>\r\n    <SelectPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n        position === \"popper\" &&\r\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n        className\r\n      )}\r\n      position={position}\r\n      {...props}\r\n    >\r\n      <SelectScrollUpButton />\r\n      <SelectPrimitive.Viewport\r\n        className={cn(\r\n          \"p-1\",\r\n          position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\r\n        )}\r\n      >\r\n        {children}\r\n      </SelectPrimitive.Viewport>\r\n      <SelectScrollDownButton />\r\n    </SelectPrimitive.Content>\r\n  </SelectPrimitive.Portal>\r\n))",
              "start": 75,
              "end": 104,
              "dependencies": []
            },
            {
              "hash": "617bbb21722eab6c0c93342715b615f7de297154d33cc120583104eefdfed34d",
              "name": "SelectLabel",
              "kind": "VariableStatement",
              "content": "const SelectLabel = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Label>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Label\r\n    ref={ref}\r\n    className={cn(\"px-2 py-1.5 text-sm font-semibold\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 107,
              "end": 116,
              "dependencies": []
            },
            {
              "hash": "307d272154ac883b9e01e075bbb7e8137da1dec63b01a2c47f378ce3c27762b5",
              "name": "SelectItem",
              "kind": "VariableStatement",
              "content": "const SelectItem = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\r\n>(({ className, children, ...props }, ref) => (\r\n  <SelectPrimitive.Item\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-2 pr-8 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <span className=\"absolute right-2 flex h-3.5 w-3.5 items-center justify-center\">\r\n      <SelectPrimitive.ItemIndicator>\r\n        <CheckIcon className=\"h-4 w-4\" />\r\n      </SelectPrimitive.ItemIndicator>\r\n    </span>\r\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n  </SelectPrimitive.Item>\r\n))",
              "start": 119,
              "end": 138,
              "dependencies": []
            },
            {
              "hash": "1f7f22d541eb1b3c9369803c1e2bbc33605a0f47588093576022ac28daf413fd",
              "name": "SelectSeparator",
              "kind": "VariableStatement",
              "content": "const SelectSeparator = React.forwardRef<\r\n  React.ElementRef<typeof SelectPrimitive.Separator>,\r\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\r\n>(({ className, ...props }, ref) => (\r\n  <SelectPrimitive.Separator\r\n    ref={ref}\r\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 141,
              "end": 150,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/separator.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-separator",
              "elements": [
                "SeparatorPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Separator",
              "type": "named",
              "from": "",
              "namespace": "Separator"
            }
          ],
          "blocks": [
            {
              "hash": "cd7b5f93972879bff54d4d48679b91e10cf2175e189f91196c3e753a9a9a5d66",
              "name": "Separator",
              "kind": "VariableStatement",
              "content": "const Separator = React.forwardRef<\r\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\r\n>(\r\n  (\r\n    { className, orientation = \"horizontal\", decorative = true, ...props },\r\n    ref\r\n  ) => (\r\n    <SeparatorPrimitive.Root\r\n      ref={ref}\r\n      decorative={decorative}\r\n      orientation={orientation}\r\n      className={cn(\r\n        \"shrink-0 bg-border\",\r\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)",
              "start": 8,
              "end": 28,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/sheet.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-dialog",
              "elements": [
                "SheetPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "Cross2Icon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Sheet",
              "type": "named",
              "from": "",
              "namespace": "Sheet"
            },
            {
              "name": "SheetPortal",
              "type": "named",
              "from": "",
              "namespace": "SheetPortal"
            },
            {
              "name": "SheetOverlay",
              "type": "named",
              "from": "",
              "namespace": "SheetOverlay"
            },
            {
              "name": "SheetTrigger",
              "type": "named",
              "from": "",
              "namespace": "SheetTrigger"
            },
            {
              "name": "SheetClose",
              "type": "named",
              "from": "",
              "namespace": "SheetClose"
            },
            {
              "name": "SheetContent",
              "type": "named",
              "from": "",
              "namespace": "SheetContent"
            },
            {
              "name": "SheetHeader",
              "type": "named",
              "from": "",
              "namespace": "SheetHeader"
            },
            {
              "name": "SheetHeader",
              "type": "named",
              "from": "",
              "namespace": "SheetHeader"
            },
            {
              "name": "SheetFooter",
              "type": "named",
              "from": "",
              "namespace": "SheetFooter"
            },
            {
              "name": "SheetFooter",
              "type": "named",
              "from": "",
              "namespace": "SheetFooter"
            },
            {
              "name": "SheetTitle",
              "type": "named",
              "from": "",
              "namespace": "SheetTitle"
            },
            {
              "name": "SheetDescription",
              "type": "named",
              "from": "",
              "namespace": "SheetDescription"
            }
          ],
          "blocks": [
            {
              "hash": "341e916cacc7a4893262471752f64ae9b188fea4391ee35bfd79effbfc51c5e5",
              "name": "Sheet",
              "kind": "VariableStatement",
              "content": "const Sheet = SheetPrimitive.Root",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "3654a31026f23a57d8f7f97efdab93ea2cb3abb5dad1f4d2fe168cf50bff8ea5",
              "name": "SheetTrigger",
              "kind": "VariableStatement",
              "content": "const SheetTrigger = SheetPrimitive.Trigger",
              "start": 12,
              "end": 12,
              "dependencies": []
            },
            {
              "hash": "2204bcc8f53b1c036e3426b6cf66324fd910c1aeed00736b8185885cf25e7c7b",
              "name": "SheetClose",
              "kind": "VariableStatement",
              "content": "const SheetClose = SheetPrimitive.Close",
              "start": 14,
              "end": 14,
              "dependencies": []
            },
            {
              "hash": "72a961dad5aed31ffc17cabe3118ef4fcacd7e9abab5021aaaa528c254b4a284",
              "name": "SheetPortal",
              "kind": "VariableStatement",
              "content": "const SheetPortal = SheetPrimitive.Portal",
              "start": 16,
              "end": 16,
              "dependencies": []
            },
            {
              "hash": "5e09aaba056328096cd0c497a355d987a6b7213d39b0090bc95d3a222dd410bf",
              "name": "SheetOverlay",
              "kind": "VariableStatement",
              "content": "const SheetOverlay = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Overlay\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  />\r\n))",
              "start": 18,
              "end": 30,
              "dependencies": []
            },
            {
              "hash": "ac625f67e50ff678c1871e28a7602cbb2cc8554196cb90abb129d06152ceec0a",
              "name": "sheetVariants",
              "kind": "VariableStatement",
              "content": "const sheetVariants = cva(\r\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=closed]:duration-300 data-[state=open]:duration-500 data-[state=open]:animate-in data-[state=closed]:animate-out\",\r\n  {\r\n    variants: {\r\n      side: {\r\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\r\n        bottom:\r\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\r\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\r\n        right:\r\n          \"inset-y-0 right-0 h-full w-3/4 border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      side: \"right\",\r\n    },\r\n  }\r\n)",
              "start": 33,
              "end": 50,
              "dependencies": []
            },
            {
              "hash": "9695e5715d420bb2eee0d4281f5c98b6d14e93fab4508e35c884bda56ac43bda",
              "name": "SheetContentProps",
              "kind": "InterfaceDeclaration",
              "content": "interface SheetContentProps\r\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\r\n    VariantProps<typeof sheetVariants> {}",
              "start": 52,
              "end": 54,
              "dependencies": [
                {
                  "hash": "75fef9b7aa1ab6fb12e6c0d9dd6815e162750bc39df06fa66cb59e660534d396",
                  "name": "sheetVariants",
                  "kind": "VariableDeclaration",
                  "start": 33,
                  "end": 50,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/sheet.tsx"
                }
              ]
            },
            {
              "hash": "125c99196f5874a854c0773f8309ccd92a8f499907880c34e24270194b1a6dd3",
              "name": "SheetContent",
              "kind": "VariableStatement",
              "content": "const SheetContent = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Content>,\r\n  SheetContentProps\r\n>(({ side = \"right\", className, children, ...props }, ref) => (\r\n  <SheetPortal>\r\n    <SheetOverlay />\r\n    <SheetPrimitive.Content\r\n      ref={ref}\r\n      className={cn(sheetVariants({ side }), className)}\r\n      {...props}\r\n    >\r\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\r\n        <Cross2Icon className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </SheetPrimitive.Close>\r\n      {children}\r\n    </SheetPrimitive.Content>\r\n  </SheetPortal>\r\n))",
              "start": 56,
              "end": 74,
              "dependencies": []
            },
            {
              "hash": "a162dc5ba0436a46d2e599931a2bc834a8998d5f1750a16b8689bf72971001bf",
              "name": "SheetHeader",
              "kind": "VariableStatement",
              "content": "const SheetHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-2 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 77,
              "end": 88,
              "dependencies": []
            },
            {
              "hash": "53978ef34e74b5fea05396f947e8238efd7e58502624fa9cb97a1f8c42ccecb9",
              "name": "SheetFooter",
              "kind": "VariableStatement",
              "content": "const SheetFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)",
              "start": 91,
              "end": 102,
              "dependencies": []
            },
            {
              "hash": "e6ad4201ce2f44149f710cc6f356232e354d22ab26ff9c4d66884a4f21a1304a",
              "name": "SheetTitle",
              "kind": "VariableStatement",
              "content": "const SheetTitle = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 105,
              "end": 114,
              "dependencies": []
            },
            {
              "hash": "7efd10dffd3a1214fd5b30fc20bc89c9f007ecd1f92349d8cbec5e7f7a1bf62a",
              "name": "SheetDescription",
              "kind": "VariableStatement",
              "content": "const SheetDescription = React.forwardRef<\r\n  React.ElementRef<typeof SheetPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <SheetPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 117,
              "end": 126,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/skeleton.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Skeleton",
              "type": "named",
              "from": "",
              "namespace": "Skeleton"
            }
          ],
          "blocks": [
            {
              "hash": "593917a406deb93928ef44f9dbb3403eb8371336b3623917a5222cd7851d3203",
              "name": "Skeleton",
              "kind": "FunctionDeclaration",
              "content": "function Skeleton({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) {\r\n  return (\r\n    <div\r\n      className={cn(\"animate-pulse rounded-md bg-primary/10\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n}",
              "start": 3,
              "end": 13,
              "dependencies": [
                {
                  "hash": "50a5d1cc497273db473663144c39f3a882896d5b4f94d3130019158d1c83b59c",
                  "name": "cn",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 6,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/slider.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-slider",
              "elements": [
                "SliderPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Slider",
              "type": "named",
              "from": "",
              "namespace": "Slider"
            }
          ],
          "blocks": [
            {
              "hash": "86902f145de10ef34e264c1aca62d3f95293e30b50b08a8d0b95d768fda6e7cd",
              "name": "Slider",
              "kind": "VariableStatement",
              "content": "const Slider = React.forwardRef<\r\n  React.ElementRef<typeof SliderPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SliderPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\r\n      \"relative flex w-full touch-none select-none items-center\",\r\n      className\r\n    )}\r\n    {...props}\r\n  >\r\n    <SliderPrimitive.Track className=\"relative h-1.5 w-full grow overflow-hidden rounded-full bg-primary/20\">\r\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\r\n    </SliderPrimitive.Track>\r\n    <SliderPrimitive.Thumb className=\"block h-4 w-4 rounded-full border border-primary/50 bg-background shadow transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\" />\r\n  </SliderPrimitive.Root>\r\n))",
              "start": 8,
              "end": 25,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/sonner.tsx",
          "imports": [
            {
              "moduleSpecifier": "next-themes",
              "elements": [
                "useTheme"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "sonner",
              "elements": [
                "Toaster"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Toaster",
              "type": "named",
              "from": "",
              "namespace": "Toaster"
            }
          ],
          "blocks": [
            {
              "hash": "49e3ab3f0ddc098412a936b06b2ae65585c11ffc5d5a28640cf8e1046d30ae32",
              "name": "ToasterProps",
              "kind": "TypeAliasDeclaration",
              "content": "type ToasterProps = React.ComponentProps<typeof Sonner>",
              "start": 6,
              "end": 6,
              "dependencies": []
            },
            {
              "hash": "4ab57e60eb1d3a736de3eeaa6dae5f38a5dc3b41c2695ba23db254d564a7b83e",
              "name": "Toaster",
              "kind": "VariableStatement",
              "content": "const Toaster = ({ ...props }: ToasterProps) => {\r\n  const { theme = \"system\" } = useTheme()\r\n\r\n  return (\r\n    <Sonner\r\n      theme={theme as ToasterProps[\"theme\"]}\r\n      className=\"toaster group\"\r\n      toastOptions={{\r\n        classNames: {\r\n          toast:\r\n            \"group toast group-[.toaster]:bg-background group-[.toaster]:text-foreground group-[.toaster]:border-border group-[.toaster]:shadow-lg\",\r\n          description: \"group-[.toast]:text-muted-foreground\",\r\n          actionButton:\r\n            \"group-[.toast]:bg-primary group-[.toast]:text-primary-foreground\",\r\n          cancelButton:\r\n            \"group-[.toast]:bg-muted group-[.toast]:text-muted-foreground\",\r\n        },\r\n      }}\r\n      {...props}\r\n    />\r\n  )\r\n}",
              "start": 8,
              "end": 29,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/switch.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-switch",
              "elements": [
                "SwitchPrimitives"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Switch",
              "type": "named",
              "from": "",
              "namespace": "Switch"
            }
          ],
          "blocks": [
            {
              "hash": "2ec5ffc414bc75d40ff59f9a40fb3b8e0bb88c5dca1e9fbc28ba025349ebc9a4",
              "name": "Switch",
              "kind": "VariableStatement",
              "content": "const Switch = React.forwardRef<\r\n  React.ElementRef<typeof SwitchPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\r\n>(({ className, ...props }, ref) => (\r\n  <SwitchPrimitives.Root\r\n    className={cn(\r\n      \"peer inline-flex h-5 w-9 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent shadow-sm transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\r\n      className\r\n    )}\r\n    {...props}\r\n    ref={ref}\r\n  >\r\n    <SwitchPrimitives.Thumb\r\n      className={cn(\r\n        \"pointer-events-none block h-4 w-4 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-4 data-[state=unchecked]:translate-x-0\"\r\n      )}\r\n    />\r\n  </SwitchPrimitives.Root>\r\n))",
              "start": 8,
              "end": 26,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Table",
              "type": "named",
              "from": "",
              "namespace": "Table"
            },
            {
              "name": "TableHeader",
              "type": "named",
              "from": "",
              "namespace": "TableHeader"
            },
            {
              "name": "TableBody",
              "type": "named",
              "from": "",
              "namespace": "TableBody"
            },
            {
              "name": "TableFooter",
              "type": "named",
              "from": "",
              "namespace": "TableFooter"
            },
            {
              "name": "TableHead",
              "type": "named",
              "from": "",
              "namespace": "TableHead"
            },
            {
              "name": "TableRow",
              "type": "named",
              "from": "",
              "namespace": "TableRow"
            },
            {
              "name": "TableCell",
              "type": "named",
              "from": "",
              "namespace": "TableCell"
            },
            {
              "name": "TableCaption",
              "type": "named",
              "from": "",
              "namespace": "TableCaption"
            }
          ],
          "blocks": [
            {
              "hash": "de8ddee119194b2fe44d3da877e443988c5c283d574fd9bec37d3cd1e797530f",
              "name": "Table",
              "kind": "VariableStatement",
              "content": "const Table = React.forwardRef<\r\n  HTMLTableElement,\r\n  React.HTMLAttributes<HTMLTableElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div className=\"relative w-full overflow-auto\">\r\n    <table\r\n      ref={ref}\r\n      className={cn(\"w-full caption-bottom text-sm\", className)}\r\n      {...props}\r\n    />\r\n  </div>\r\n))",
              "start": 5,
              "end": 16,
              "dependencies": []
            },
            {
              "hash": "5df194df21f89e860a5f678dc1520f9a8cecda6296ac5a6148af7f3ab72fdd36",
              "name": "TableHeader",
              "kind": "VariableStatement",
              "content": "const TableHeader = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\r\n))",
              "start": 19,
              "end": 24,
              "dependencies": []
            },
            {
              "hash": "7955fff31bcfc0dc838338632f66c09d2050b0e05fcca88c8c4e3a25380b3681",
              "name": "TableBody",
              "kind": "VariableStatement",
              "content": "const TableBody = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tbody\r\n    ref={ref}\r\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 27,
              "end": 36,
              "dependencies": []
            },
            {
              "hash": "2ffe692c1c7880cb52a7848a2d9806c8acb6adbc6bf9674178c4952c8b0738c2",
              "name": "TableFooter",
              "kind": "VariableStatement",
              "content": "const TableFooter = React.forwardRef<\r\n  HTMLTableSectionElement,\r\n  React.HTMLAttributes<HTMLTableSectionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tfoot\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 39,
              "end": 51,
              "dependencies": []
            },
            {
              "hash": "b67bea6af4c759838cead1c777a5806d8c62bbcaf234c482fe8618aa8c666649",
              "name": "TableRow",
              "kind": "VariableStatement",
              "content": "const TableRow = React.forwardRef<\r\n  HTMLTableRowElement,\r\n  React.HTMLAttributes<HTMLTableRowElement>\r\n>(({ className, ...props }, ref) => (\r\n  <tr\r\n    ref={ref}\r\n    className={cn(\r\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 54,
              "end": 66,
              "dependencies": []
            },
            {
              "hash": "aa8183cada5b8b4c9233d1dc3117a90520cbe0edf5c80d00e004b3e49b559769",
              "name": "TableHead",
              "kind": "VariableStatement",
              "content": "const TableHead = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.ThHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <th\r\n    ref={ref}\r\n    className={cn(\r\n      \"h-10 px-2 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 69,
              "end": 81,
              "dependencies": []
            },
            {
              "hash": "f916650d75eb4806d3087314ccb398be028f802adbd52025a097bc5114af4521",
              "name": "TableCell",
              "kind": "VariableStatement",
              "content": "const TableCell = React.forwardRef<\r\n  HTMLTableCellElement,\r\n  React.TdHTMLAttributes<HTMLTableCellElement>\r\n>(({ className, ...props }, ref) => (\r\n  <td\r\n    ref={ref}\r\n    className={cn(\r\n      \"p-2 align-middle [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 84,
              "end": 96,
              "dependencies": []
            },
            {
              "hash": "d34237927a0a4fe6cccddab1725e5157159175cbb665e47474192ad9d38a4895",
              "name": "TableCaption",
              "kind": "VariableStatement",
              "content": "const TableCaption = React.forwardRef<\r\n  HTMLTableCaptionElement,\r\n  React.HTMLAttributes<HTMLTableCaptionElement>\r\n>(({ className, ...props }, ref) => (\r\n  <caption\r\n    ref={ref}\r\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 99,
              "end": 108,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tabs.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-tabs",
              "elements": [
                "TabsPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Tabs",
              "type": "named",
              "from": "",
              "namespace": "Tabs"
            },
            {
              "name": "TabsList",
              "type": "named",
              "from": "",
              "namespace": "TabsList"
            },
            {
              "name": "TabsTrigger",
              "type": "named",
              "from": "",
              "namespace": "TabsTrigger"
            },
            {
              "name": "TabsContent",
              "type": "named",
              "from": "",
              "namespace": "TabsContent"
            }
          ],
          "blocks": [
            {
              "hash": "3e0f20e60e54af6e9dd0bc4f6f0427b6d780b405158b3b8342d67c25425293cf",
              "name": "Tabs",
              "kind": "VariableStatement",
              "content": "const Tabs = TabsPrimitive.Root",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "8da8f318a8deac0068aa9d50b41a25943e44ff377a9b0fdd0527fcce7223129d",
              "name": "TabsList",
              "kind": "VariableStatement",
              "content": "const TabsList = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.List>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.List\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-9 items-center justify-center rounded-lg bg-muted p-1 text-muted-foreground\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 10,
              "end": 22,
              "dependencies": []
            },
            {
              "hash": "5c261d7086e40dc419c455e90b641c8aa9d5d6f20fa4d2d0973856ce214fd786",
              "name": "TabsTrigger",
              "kind": "VariableStatement",
              "content": "const TabsTrigger = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Trigger\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-md px-3 py-1 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 25,
              "end": 37,
              "dependencies": []
            },
            {
              "hash": "fa5e93640b0b0a741307118432396080507768eb1b1c6f8ffb6b8a2923d95559",
              "name": "TabsContent",
              "kind": "VariableStatement",
              "content": "const TabsContent = React.forwardRef<\r\n  React.ElementRef<typeof TabsPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\r\n>(({ className, ...props }, ref) => (\r\n  <TabsPrimitive.Content\r\n    ref={ref}\r\n    className={cn(\r\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 40,
              "end": 52,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/textarea.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "TextareaProps",
              "type": "named",
              "from": "",
              "namespace": "TextareaProps"
            },
            {
              "name": "Textarea",
              "type": "named",
              "from": "",
              "namespace": "Textarea"
            }
          ],
          "blocks": [
            {
              "hash": "461f406802e2ccac1f3420bfebd3dc962189b33a71c7725d03fd430e2a6e1d3f",
              "name": "TextareaProps",
              "kind": "TypeAliasDeclaration",
              "content": "export type TextareaProps = React.TextareaHTMLAttributes<HTMLTextAreaElement>;",
              "start": 5,
              "end": 5,
              "dependencies": []
            },
            {
              "hash": "4a5f62bbf4f671269f208df62bd042e78bfa324c19cfe401adeac6af62207e12",
              "name": "Textarea",
              "kind": "VariableStatement",
              "content": "const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);",
              "start": 7,
              "end": 20,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-icons",
              "elements": [
                "Cross2Icon"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-toast",
              "elements": [
                "ToastPrimitives"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ToastProps",
              "type": "named",
              "from": "",
              "namespace": "ToastProps"
            },
            {
              "name": "ToastActionElement",
              "type": "named",
              "from": "",
              "namespace": "ToastActionElement"
            },
            {
              "name": "ToastProvider",
              "type": "named",
              "from": "",
              "namespace": "ToastProvider"
            },
            {
              "name": "ToastViewport",
              "type": "named",
              "from": "",
              "namespace": "ToastViewport"
            },
            {
              "name": "Toast",
              "type": "named",
              "from": "",
              "namespace": "Toast"
            },
            {
              "name": "ToastTitle",
              "type": "named",
              "from": "",
              "namespace": "ToastTitle"
            },
            {
              "name": "ToastDescription",
              "type": "named",
              "from": "",
              "namespace": "ToastDescription"
            },
            {
              "name": "ToastClose",
              "type": "named",
              "from": "",
              "namespace": "ToastClose"
            },
            {
              "name": "ToastAction",
              "type": "named",
              "from": "",
              "namespace": "ToastAction"
            }
          ],
          "blocks": [
            {
              "hash": "42ce82c5bb2e8093adc8f9ac014914ec24846ac34e4b75cacd8ac2dfa0c575de",
              "name": "ToastProvider",
              "kind": "VariableStatement",
              "content": "const ToastProvider = ToastPrimitives.Provider",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "16f71c590ce3e819f6dfcd1c4483f7377a381fed72f03a61fe606dd8954d4bd7",
              "name": "ToastViewport",
              "kind": "VariableStatement",
              "content": "const ToastViewport = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Viewport\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 12,
              "end": 24,
              "dependencies": []
            },
            {
              "hash": "15b57d05c6e47f8aa57a025cd288a41794628a93e269dd330e7ee6984bbff3b2",
              "name": "toastVariants",
              "kind": "VariableStatement",
              "content": "const toastVariants = cva(\r\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-2 overflow-hidden rounded-md border p-4 pr-6 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"border bg-background text-foreground\",\r\n        destructive:\r\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n    },\r\n  }\r\n)",
              "start": 27,
              "end": 41,
              "dependencies": []
            },
            {
              "hash": "147111075cec03516b1b6224d3b0ea74ab442e2b58185031b4f0e7c1a35d36ff",
              "name": "Toast",
              "kind": "VariableStatement",
              "content": "const Toast = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\r\n    VariantProps<typeof toastVariants>\r\n>(({ className, variant, ...props }, ref) => {\r\n  return (\r\n    <ToastPrimitives.Root\r\n      ref={ref}\r\n      className={cn(toastVariants({ variant }), className)}\r\n      {...props}\r\n    />\r\n  )\r\n})",
              "start": 43,
              "end": 55,
              "dependencies": []
            },
            {
              "hash": "b5a41e1dae87c77bb568cc576a4ff9e983a67a6522da7d3988dfce45fbd20e89",
              "name": "ToastAction",
              "kind": "VariableStatement",
              "content": "const ToastAction = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Action>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Action\r\n    ref={ref}\r\n    className={cn(\r\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium transition-colors hover:bg-secondary focus:outline-none focus:ring-1 focus:ring-ring disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 58,
              "end": 70,
              "dependencies": []
            },
            {
              "hash": "5cdb93a148f1c752ea89a60ea7992a6fd096a5f82ce5a80aac509237852d748f",
              "name": "ToastClose",
              "kind": "VariableStatement",
              "content": "const ToastClose = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Close>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Close\r\n    ref={ref}\r\n    className={cn(\r\n      \"absolute right-1 top-1 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-1 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\r\n      className\r\n    )}\r\n    toast-close=\"\"\r\n    {...props}\r\n  >\r\n    <Cross2Icon className=\"h-4 w-4\" />\r\n  </ToastPrimitives.Close>\r\n))",
              "start": 73,
              "end": 88,
              "dependencies": []
            },
            {
              "hash": "21557dd3150d85c43919cc385cf25e070fdce1bdae48cfd0a9d79f21e5d9dff3",
              "name": "ToastTitle",
              "kind": "VariableStatement",
              "content": "const ToastTitle = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Title>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Title\r\n    ref={ref}\r\n    className={cn(\"text-sm font-semibold [&+div]:text-xs\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 91,
              "end": 100,
              "dependencies": []
            },
            {
              "hash": "6659ebcfb1f6974cab7809f4f0cd5a397a08c026d0396daf80ea5e957e54a357",
              "name": "ToastDescription",
              "kind": "VariableStatement",
              "content": "const ToastDescription = React.forwardRef<\r\n  React.ElementRef<typeof ToastPrimitives.Description>,\r\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <ToastPrimitives.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm opacity-90\", className)}\r\n    {...props}\r\n  />\r\n))",
              "start": 103,
              "end": 112,
              "dependencies": []
            },
            {
              "hash": "2dfbb43e28a0b59a36104544ae483969bd925e40a7b4434181173fe5d497e1cc",
              "name": "ToastProps",
              "kind": "TypeAliasDeclaration",
              "content": "type ToastProps = React.ComponentPropsWithoutRef<typeof Toast>",
              "start": 115,
              "end": 115,
              "dependencies": [
                {
                  "hash": "20784d98b9df09e953bcf2785597c1995b835d889d37b2ae7f3d086bfae544de",
                  "name": "Toast",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 55,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                }
              ]
            },
            {
              "hash": "86de519729a30aac7fbbd73bce9bfb5daf9eb36723d2f4a2aa1a6734035bfe9e",
              "name": "ToastActionElement",
              "kind": "TypeAliasDeclaration",
              "content": "type ToastActionElement = React.ReactElement<typeof ToastAction>",
              "start": 117,
              "end": 117,
              "dependencies": [
                {
                  "hash": "69c87c837779e819b46aacec0388c8c4c547524f876e76b368c31bb1e8cdc342",
                  "name": "ToastAction",
                  "kind": "VariableDeclaration",
                  "start": 58,
                  "end": 70,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toaster.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts",
              "elements": [
                "useToast"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx",
              "elements": [
                "Toast",
                "ToastClose",
                "ToastDescription",
                "ToastProvider",
                "ToastTitle",
                "ToastViewport"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Toaster",
              "type": "named",
              "from": "",
              "namespace": "Toaster"
            }
          ],
          "blocks": [
            {
              "hash": "269a6a40fe5ced8cc879f93a89b714a978d93aeb4f5f01e84a787fe5c935808f",
              "name": "Toaster",
              "kind": "FunctionDeclaration",
              "content": "export function Toaster() {\r\n  const { toasts } = useToast()\r\n\r\n  return (\r\n    <ToastProvider>\r\n      {toasts.map(function ({ id, title, description, action, ...props }) {\r\n        return (\r\n          <Toast key={id} {...props}>\r\n            <div className=\"grid gap-1\">\r\n              {title && <ToastTitle>{title}</ToastTitle>}\r\n              {description && (\r\n                <ToastDescription>{description}</ToastDescription>\r\n              )}\r\n            </div>\r\n            {action}\r\n            <ToastClose />\r\n          </Toast>\r\n        )\r\n      })}\r\n      <ToastViewport />\r\n    </ToastProvider>\r\n  )\r\n}",
              "start": 13,
              "end": 35,
              "dependencies": [
                {
                  "hash": "de345c813280db3d258a2abd4c830ae9e379a81add9c027cb6cb620ca649c52d",
                  "name": "useToast",
                  "kind": "FunctionDeclaration",
                  "start": 172,
                  "end": 191,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "f39bbc828aff0c9ef741252943680cd24dacbbf0ec7f0c67ca8f8b3a36cb5ab0",
                  "name": "ToastProvider",
                  "kind": "VariableDeclaration",
                  "start": 10,
                  "end": 10,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                },
                {
                  "hash": "20784d98b9df09e953bcf2785597c1995b835d889d37b2ae7f3d086bfae544de",
                  "name": "Toast",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 55,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                },
                {
                  "hash": "8ca46b4869ad9212fb4f9b0043fabdb77bd7742e7c863d1a4faf61041ed7a4ef",
                  "name": "ToastTitle",
                  "kind": "VariableDeclaration",
                  "start": 91,
                  "end": 100,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                },
                {
                  "hash": "01299c4258ab8f0f1044de3a9f8831d4a4c4b5f0103c94ff77cbc5db87ec956c",
                  "name": "ToastDescription",
                  "kind": "VariableDeclaration",
                  "start": 103,
                  "end": 112,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                },
                {
                  "hash": "aed4217598715ff678073bc6472464ad55e6f54f8d894d12b45b2daa77f38176",
                  "name": "ToastClose",
                  "kind": "VariableDeclaration",
                  "start": 73,
                  "end": 88,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                },
                {
                  "hash": "2e918687a7b3ada7b44e63a438bf3322fddec628414231a52cb9dfcda36a7cc7",
                  "name": "ToastViewport",
                  "kind": "VariableDeclaration",
                  "start": 12,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toast.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toggle-group.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-toggle-group",
              "elements": [
                "ToggleGroupPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toggle.tsx",
              "elements": [
                "toggleVariants"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "ToggleGroup",
              "type": "named",
              "from": "",
              "namespace": "ToggleGroup"
            },
            {
              "name": "ToggleGroupItem",
              "type": "named",
              "from": "",
              "namespace": "ToggleGroupItem"
            }
          ],
          "blocks": [
            {
              "hash": "b45d85e59526cb4af90bb66885aa5029b3d308091cd0d2b32533dca401927381",
              "name": "ToggleGroupContext",
              "kind": "VariableStatement",
              "content": "const ToggleGroupContext = React.createContext<\r\n  VariantProps<typeof toggleVariants>\r\n>({\r\n  size: \"default\",\r\n  variant: \"default\",\r\n})",
              "start": 10,
              "end": 15,
              "dependencies": []
            },
            {
              "hash": "9ca0651f37db354ca828117cf9759791f0d3227a382d97318ba98eaf1beeb98a",
              "name": "ToggleGroup",
              "kind": "VariableStatement",
              "content": "const ToggleGroup = React.forwardRef<\r\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\r\n    VariantProps<typeof toggleVariants>\r\n>(({ className, variant, size, children, ...props }, ref) => (\r\n  <ToggleGroupPrimitive.Root\r\n    ref={ref}\r\n    className={cn(\"flex items-center justify-center gap-1\", className)}\r\n    {...props}\r\n  >\r\n    <ToggleGroupContext.Provider value={{ variant, size }}>\r\n      {children}\r\n    </ToggleGroupContext.Provider>\r\n  </ToggleGroupPrimitive.Root>\r\n))",
              "start": 17,
              "end": 31,
              "dependencies": []
            },
            {
              "hash": "76c252f7ac3f82bbe305ed79f60b7737be54b133a670f16b7a5b5830a6357756",
              "name": "ToggleGroupItem",
              "kind": "VariableStatement",
              "content": "const ToggleGroupItem = React.forwardRef<\r\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\r\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\r\n    VariantProps<typeof toggleVariants>\r\n>(({ className, children, variant, size, ...props }, ref) => {\r\n  const context = React.useContext(ToggleGroupContext)\r\n\r\n  return (\r\n    <ToggleGroupPrimitive.Item\r\n      ref={ref}\r\n      className={cn(\r\n        toggleVariants({\r\n          variant: context.variant || variant,\r\n          size: context.size || size,\r\n        }),\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </ToggleGroupPrimitive.Item>\r\n  )\r\n})",
              "start": 35,
              "end": 57,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/toggle.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-toggle",
              "elements": [
                "TogglePrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "class-variance-authority",
              "elements": [
                "cva",
                "VariantProps"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Toggle",
              "type": "named",
              "from": "",
              "namespace": "Toggle"
            },
            {
              "name": "toggleVariants",
              "type": "named",
              "from": "",
              "namespace": "toggleVariants"
            }
          ],
          "blocks": [
            {
              "hash": "77c5395cff27078c9e567d83f633495fda4d1f468d96de5a72dc9131d7008b86",
              "name": "toggleVariants",
              "kind": "VariableStatement",
              "content": "const toggleVariants = cva(\r\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: \"bg-transparent\",\r\n        outline:\r\n          \"border border-input bg-transparent shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-3\",\r\n        sm: \"h-8 px-2\",\r\n        lg: \"h-10 px-3\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)",
              "start": 9,
              "end": 29,
              "dependencies": []
            },
            {
              "hash": "fd02ed7c03d103aae5c6f316843895d76a2577282b62fc086f5512eeeef6f0c4",
              "name": "Toggle",
              "kind": "VariableStatement",
              "content": "const Toggle = React.forwardRef<\r\n  React.ElementRef<typeof TogglePrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\r\n    VariantProps<typeof toggleVariants>\r\n>(({ className, variant, size, ...props }, ref) => (\r\n  <TogglePrimitive.Root\r\n    ref={ref}\r\n    className={cn(toggleVariants({ variant, size, className }))}\r\n    {...props}\r\n  />\r\n))",
              "start": 31,
              "end": 41,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tooltip.tsx",
          "imports": [
            {
              "moduleSpecifier": "react",
              "elements": [
                "React"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "@radix-ui/react-tooltip",
              "elements": [
                "TooltipPrimitive"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/utils.ts",
              "elements": [
                "cn"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "Tooltip",
              "type": "named",
              "from": "",
              "namespace": "Tooltip"
            },
            {
              "name": "TooltipTrigger",
              "type": "named",
              "from": "",
              "namespace": "TooltipTrigger"
            },
            {
              "name": "TooltipContent",
              "type": "named",
              "from": "",
              "namespace": "TooltipContent"
            },
            {
              "name": "TooltipProvider",
              "type": "named",
              "from": "",
              "namespace": "TooltipProvider"
            }
          ],
          "blocks": [
            {
              "hash": "322d711d88b4b19579d0367afc5a343db8a03e6e7ef46e8e4401644d5381a73d",
              "name": "TooltipProvider",
              "kind": "VariableStatement",
              "content": "const TooltipProvider = TooltipPrimitive.Provider",
              "start": 8,
              "end": 8,
              "dependencies": []
            },
            {
              "hash": "0561e4a5f3cee11e0b25ca5ddc73f74458a158c9400c0cd1022557bb1c59a3db",
              "name": "Tooltip",
              "kind": "VariableStatement",
              "content": "const Tooltip = TooltipPrimitive.Root",
              "start": 10,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "22e1bf1499f64bbd6d11df3fba5031325e52a444ac189bd7362cbce847841fa5",
              "name": "TooltipTrigger",
              "kind": "VariableStatement",
              "content": "const TooltipTrigger = TooltipPrimitive.Trigger",
              "start": 12,
              "end": 12,
              "dependencies": []
            },
            {
              "hash": "f0d18c1ffe86173f32a7cc85db51557df43284f572d3a9077ad74f0afb791c01",
              "name": "TooltipContent",
              "kind": "VariableStatement",
              "content": "const TooltipContent = React.forwardRef<\r\n  React.ElementRef<typeof TooltipPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\r\n>(({ className, sideOffset = 4, ...props }, ref) => (\r\n  <TooltipPrimitive.Content\r\n    ref={ref}\r\n    sideOffset={sideOffset}\r\n    className={cn(\r\n      \"z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))",
              "start": 14,
              "end": 27,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/page.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts",
              "elements": [
                "getRepository"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h3.tsx",
              "elements": [
                "H3"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
              "elements": [
                "Card",
                "CardContent",
                "CardDescription",
                "CardHeader",
                "CardTitle"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tabs.tsx",
              "elements": [
                "Tabs",
                "TabsContent",
                "TabsList"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "auth"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/tab-button.tsx",
              "elements": [
                "TabButton"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/index.tsx",
              "elements": [
                "RepositoryConfigForm"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts",
              "elements": [
                "getRepositoryConfigAction"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "default",
              "type": "default",
              "from": "",
              "namespace": "default"
            }
          ],
          "blocks": [
            {
              "hash": "be32b7c65eb8e0a5cf0041d4d2b4821ac9830ea84ad0fc92d45364f6e33c32eb",
              "name": "Page",
              "kind": "FunctionDeclaration",
              "content": "export default async function Page({\r\n  params: {\r\n    repository: [owner, repository],\r\n  },\r\n  searchParams: { tab = \"dash\" },\r\n}: {\r\n  params: { repository: [string, string] };\r\n  searchParams: { tab: \"dash\" | \"bot\" | \"context\" | \"graph\" | \"config\" };\r\n}) {\r\n  const session = await auth();\r\n  const repo = await getRepository(\r\n    session!.user.access_token,\r\n    owner,\r\n    repository\r\n  );\r\n  const repoConfig = await getRepositoryConfigAction(owner, repo.id);\r\n\r\n  return (\r\n    <Tabs defaultValue={tab}>\r\n      <TabsList className=\"flex justify-start gap-2\">\r\n        <H3 className=\"max-w-48 block truncate m-2\">\r\n          {repo.name}{\" \"}\r\n          <span className=\"text-sm text-muted-foreground\">{repo.owner}</span>\r\n        </H3>\r\n        <TabButton value=\"dash\">Dashboard</TabButton>\r\n        <TabButton value=\"bot\">Bots</TabButton>\r\n        <TabButton value=\"context\">Contexto</TabButton>\r\n        <TabButton value=\"graph\">Grafo. Dependência</TabButton>\r\n        <TabButton value=\"config\">Configuração</TabButton>\r\n      </TabsList>\r\n      <TabsContent value=\"dash\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Dashboard</CardTitle>\r\n            <CardDescription></CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\"></CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n\r\n      <TabsContent value=\"bot\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Bots</CardTitle>\r\n            <CardDescription></CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\"></CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n\r\n      <TabsContent value=\"context\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Contexto</CardTitle>\r\n            <CardDescription></CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\"></CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n\r\n      <TabsContent value=\"graph\">\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Grafo de Dependência</CardTitle>\r\n            <CardDescription></CardDescription>\r\n          </CardHeader>\r\n          <CardContent className=\"space-y-2\"></CardContent>\r\n        </Card>\r\n      </TabsContent>\r\n\r\n      <TabsContent value=\"config\">\r\n        <RepositoryConfigForm\r\n          defaultValues={{\r\n            id: repo.id,\r\n            owner: repo.owner,\r\n            name: repo.name,\r\n            api_token: repoConfig?.api_token || \"\",\r\n            is_batch_api: repoConfig?.is_batch_api || true,\r\n          }}\r\n        />\r\n      </TabsContent>\r\n    </Tabs>\r\n  );\r\n}",
              "start": 16,
              "end": 99,
              "dependencies": [
                {
                  "hash": "5b842992e8d25f7653d0632de2cfb3410d8a9242fe83e94220729d35cc138c49",
                  "name": "session",
                  "kind": "VariableDeclaration",
                  "start": 25,
                  "end": 25,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/page.tsx"
                },
                {
                  "hash": "173601e4bc3b4155e5a2c343196645aad30bc21461b714cafa78527823165af2",
                  "name": "repo",
                  "kind": "VariableDeclaration",
                  "start": 26,
                  "end": 30,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/page.tsx"
                },
                {
                  "hash": "ed4a82a899c1e53499e6509d8da632eb6b35f516c183efdaa5862dd2cfdf176e",
                  "name": "getRepository",
                  "kind": "FunctionDeclaration",
                  "start": 124,
                  "end": 146,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "51fc8a807019b82f62698042aebbeb5046a9c964e5da7cd0751b191b70bbaacc",
                  "name": "repoConfig",
                  "kind": "VariableDeclaration",
                  "start": 31,
                  "end": 31,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/page.tsx"
                },
                {
                  "hash": "cdc2fec79261e2c58b636e20a54c97341ccca1184f1f1518efcf1635994e0949",
                  "name": "getRepositoryConfigAction",
                  "kind": "FunctionDeclaration",
                  "start": 30,
                  "end": 48,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "ba5732a38d2fc44eecd1a34710cd92ec2d2e5f66cefee93c49ff277f7a33a154",
                  "name": "Tabs",
                  "kind": "VariableDeclaration",
                  "start": 8,
                  "end": 8,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tabs.tsx"
                },
                {
                  "hash": "7e240a60a1a7c3c6477699e9f1cc4e686114e775e906a95ad4155474d44e278e",
                  "name": "TabsList",
                  "kind": "VariableDeclaration",
                  "start": 10,
                  "end": 22,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tabs.tsx"
                },
                {
                  "hash": "c22f7c22cfd2571c92f49d14047c5fd96156578807046defd4d7ddcb64bbc213",
                  "name": "H3",
                  "kind": "FunctionDeclaration",
                  "start": 4,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/typography/h3.tsx"
                },
                {
                  "hash": "58a59f966119041d351e6d29974cbed935c2f8e8caec37ee86682f2c84e2eb7c",
                  "name": "TabButton",
                  "kind": "VariableDeclaration",
                  "start": 11,
                  "end": 32,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/tab-button.tsx"
                },
                {
                  "hash": "20d97cdaaae1b74eddc6c79dc5c4f85341ba7673cd11ecd4a89e40286084424c",
                  "name": "TabsContent",
                  "kind": "VariableDeclaration",
                  "start": 40,
                  "end": 52,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tabs.tsx"
                },
                {
                  "hash": "d95f1ea377f687c32187f1c0b3096fe0c9afc4871de2d5254fa212e4f4c7bef7",
                  "name": "Card",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "55388ca293052505bd767d3017f5401218c34102de4a8c6831023ea0dcbd73ea",
                  "name": "CardHeader",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "658972b7423a22294a8afd8caef27fc9c7565116159ad39a620a382743e50526",
                  "name": "CardTitle",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "89e88d1d3c971007ef909b958a638e1d97663ce76357a3838c6cf0ec6977555b",
                  "name": "CardDescription",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "6c6e7dacf54de308947ee6b098bfe08150972f61d03086cc818ff178dc3ce5fb",
                  "name": "CardContent",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 61,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "578f39c30a40e673ba175f6a45cc8d2dbfc4503677b1b1e034e0b9d4548afd08",
                  "name": "RepositoryConfigForm",
                  "kind": "FunctionDeclaration",
                  "start": 29,
                  "end": 118,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/index.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/repository/[...repository]/tab-button.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/tabs.tsx",
              "elements": [
                "TabsTrigger"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next/navigation",
              "elements": [
                "usePathname",
                "useRouter",
                "useSearchParams"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react",
              "elements": [
                "forwardRef",
                "ReactNode"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "TabButton",
              "type": "named",
              "from": "",
              "namespace": "TabButton"
            }
          ],
          "blocks": [
            {
              "hash": "e649aeccf63a3878201833193ff99d212ada24113666f732d904c2d0e1c28316",
              "name": "TabButonProps",
              "kind": "TypeAliasDeclaration",
              "content": "type TabButonProps = {\r\n  value: string;\r\n  children: ReactNode;\r\n};",
              "start": 7,
              "end": 10,
              "dependencies": []
            },
            {
              "hash": "807015a7b585041c827f1be3a8099cb0fda55e825fc6f9a3a8a212fddedfdbc8",
              "name": "TabButton",
              "kind": "VariableStatement",
              "content": "export const TabButton = forwardRef<HTMLButtonElement, TabButonProps>(\r\n  ({ value, children }: TabButonProps, ref) => {\r\n    const pathname = usePathname();\r\n    const router = useRouter();\r\n    const searchParams = useSearchParams();\r\n\r\n    const handleClick = () => {\r\n      const params = new URLSearchParams(searchParams);\r\n      params.set(\"tab\", value);\r\n      if (params.get(\"tab\") === \"dash\") {\r\n        params.delete(\"tab\");\r\n      }\r\n      router.push(`${pathname}?${params.toString()}`);\r\n    };\r\n\r\n    return (\r\n      <TabsTrigger ref={ref} value={value} onClick={handleClick}>\r\n        {children}\r\n      </TabsTrigger>\r\n    );\r\n  }\r\n);",
              "start": 11,
              "end": 32,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/user/config/page.tsx",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts",
              "elements": [
                "getUserInstalledRepos"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts",
              "elements": [
                "getUserConfigAction"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx",
              "elements": [
                "UserConfigForm"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "auth"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "default",
              "type": "default",
              "from": "",
              "namespace": "default"
            }
          ],
          "blocks": [
            {
              "hash": "41a2896a9e29d1517f652ac968377c02630f463838ec782ec93229fcf805586c",
              "name": "Page",
              "kind": "FunctionDeclaration",
              "content": "export default async function Page() {\r\n  const session = await auth();\r\n  const config = await getUserConfigAction(session?.user.username);\r\n  const installations = await getUserInstalledRepos(\r\n    session?.user.access_token,\r\n    {}\r\n  );\r\n\r\n  return (\r\n    <UserConfigForm\r\n      installations={installations}\r\n      defaultValues={{\r\n        api_token: config?.api_token || \"\",\r\n        is_batch_api: config?.is_batch_api || true,\r\n        budget: config?.budget || 0,\r\n        allocations: config?.allocations || [],\r\n      }}\r\n    />\r\n  );\r\n}",
              "start": 6,
              "end": 25,
              "dependencies": [
                {
                  "hash": "a17c472cab8f2839c63f8461c912a96bef30e7d2189ccba07c709a689180fd5d",
                  "name": "session",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 7,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/user/config/page.tsx"
                },
                {
                  "hash": "32da9f3d58dfb5b47c8801ec3b33fa4c41abf42fe46ebe5ee3c86728f1526094",
                  "name": "config",
                  "kind": "VariableDeclaration",
                  "start": 8,
                  "end": 8,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/user/config/page.tsx"
                },
                {
                  "hash": "d6ae6ec78d3e385e008dc2bd168691423749bd27d398c3d9d4788714baa18e6f",
                  "name": "getUserConfigAction",
                  "kind": "FunctionDeclaration",
                  "start": 30,
                  "end": 52,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "46a63fd30fda181df4a8118f83634f3406d4c2fdda9772b16d97feb534fd2593",
                  "name": "installations",
                  "kind": "VariableDeclaration",
                  "start": 9,
                  "end": 12,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/user/config/page.tsx"
                },
                {
                  "hash": "906abbc7290c991d75f39a27ffdc29562905ffcc3e0d546871780a2c63839c9f",
                  "name": "getUserInstalledRepos",
                  "kind": "FunctionDeclaration",
                  "start": 148,
                  "end": 194,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/github.actions.ts"
                },
                {
                  "hash": "c5608238b49d8f8f8e3f19681c62afa5b2f02b86ffb0d7f5c63f6da6017cf470",
                  "name": "UserConfigForm",
                  "kind": "FunctionDeclaration",
                  "start": 48,
                  "end": 371,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/index.tsx",
          "imports": [
            {
              "moduleSpecifier": "@hookform/resolvers/zod",
              "elements": [
                "zodResolver"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react-hook-form",
              "elements": [
                "useForm"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx",
              "elements": [
                "Form",
                "FormControl",
                "FormDescription",
                "FormField",
                "FormItem",
                "FormLabel",
                "FormMessage"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx",
              "elements": [
                "Input"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/switch.tsx",
              "elements": [
                "Switch"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
              "elements": [
                "Card",
                "CardContent",
                "CardDescription",
                "CardFooter",
                "CardHeader",
                "CardTitle"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts",
              "elements": [
                "useToast"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts",
              "elements": [
                "RepositoryConfig",
                "repositoryConfigSchema"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts",
              "elements": [
                "saveRepositoryConfigAction"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "RepositoryConfigForm",
              "type": "named",
              "from": "",
              "namespace": "RepositoryConfigForm"
            }
          ],
          "blocks": [
            {
              "hash": "578f39c30a40e673ba175f6a45cc8d2dbfc4503677b1b1e034e0b9d4548afd08",
              "name": "RepositoryConfigForm",
              "kind": "FunctionDeclaration",
              "content": "export function RepositoryConfigForm({\r\n  defaultValues,\r\n}: {\r\n  defaultValues?: RepositoryConfig;\r\n}) {\r\n  const { toast } = useToast();\r\n  const form = useForm<RepositoryConfig>({\r\n    resolver: zodResolver(repositoryConfigSchema),\r\n    defaultValues: {\r\n      ...(defaultValues || {}),\r\n    },\r\n    reValidateMode: \"onChange\",\r\n  });\r\n\r\n  async function onSubmit(values: RepositoryConfig) {\r\n    try {\r\n      await saveRepositoryConfigAction(values.id, values.owner, values);\r\n\r\n      toast({\r\n        description: \"Configurações salvas com sucesso!\",\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({\r\n        variant: \"destructive\",\r\n        description: \"Algo errado aconteceu!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle>Configurações do Repositório</CardTitle>\r\n        <CardDescription>\r\n          Defina configuração especifica para esse repositório.\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)}>\r\n          <CardContent className=\"space-y-6\">\r\n            <div>{JSON.stringify(form.formState.errors)}</div>\r\n            <FormField\r\n              control={form.control}\r\n              name=\"api_token\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>OpenAI API Token</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      type=\"password\"\r\n                      placeholder=\"Insira seu token da API OpenAI\"\r\n                      {...field}\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <FormField\r\n              control={form.control}\r\n              name=\"is_batch_api\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <FormLabel className=\"text-base\">Usa Batch API</FormLabel>\r\n                    <FormDescription>\r\n                      Ative para usar a API em lote, 50% de desconto.\r\n                    </FormDescription>\r\n                  </div>\r\n                  <FormControl>\r\n                    <Switch\r\n                      checked={field.value}\r\n                      onCheckedChange={field.onChange}\r\n                    />\r\n                  </FormControl>\r\n                </FormItem>\r\n              )}\r\n            />\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button type=\"submit\" className=\"w-full\">\r\n              Salvar Configurações\r\n            </Button>\r\n          </CardFooter>\r\n        </form>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}",
              "start": 29,
              "end": 118,
              "dependencies": [
                {
                  "hash": "8233d091da4a59c9880178f2b51bd62344fa6f0c71e571beb2a190a67b41fdfa",
                  "name": "RepositoryConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 13,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts"
                },
                {
                  "hash": "de345c813280db3d258a2abd4c830ae9e379a81add9c027cb6cb620ca649c52d",
                  "name": "useToast",
                  "kind": "FunctionDeclaration",
                  "start": 172,
                  "end": 191,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "cf487fc1e9f0f315d6254cfb5e40e3898469ff042111ddca19f030ce03a205fd",
                  "name": "form",
                  "kind": "VariableDeclaration",
                  "start": 35,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/index.tsx"
                },
                {
                  "hash": "f0c582db269286f99e24e28b508a8fb725a49f86caa7cf700421df725949ce30",
                  "name": "repositoryConfigSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts"
                },
                {
                  "hash": "3c0d82c5f9399076e05f3fbd7e2ff24f335d851ed3b7e24ccb5b66cdf5f2e0f8",
                  "name": "onSubmit",
                  "kind": "FunctionDeclaration",
                  "start": 43,
                  "end": 57,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/index.tsx"
                },
                {
                  "hash": "1fdfe13beeb627fc9f06ce786f61dfc2edb22b67f396abd6d9b7c08040edb6f1",
                  "name": "saveRepositoryConfigAction",
                  "kind": "FunctionDeclaration",
                  "start": 10,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/repository.actions.ts"
                },
                {
                  "hash": "f7c4d0bcf54c04368dc6f65f63235d7764b187bc3e259cb4db674e23ef670d8c",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 50,
                  "end": 50,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/index.tsx"
                },
                {
                  "hash": "d95f1ea377f687c32187f1c0b3096fe0c9afc4871de2d5254fa212e4f4c7bef7",
                  "name": "Card",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "55388ca293052505bd767d3017f5401218c34102de4a8c6831023ea0dcbd73ea",
                  "name": "CardHeader",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "658972b7423a22294a8afd8caef27fc9c7565116159ad39a620a382743e50526",
                  "name": "CardTitle",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "89e88d1d3c971007ef909b958a638e1d97663ce76357a3838c6cf0ec6977555b",
                  "name": "CardDescription",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "c9a5d341cca8c045704b0df225755310a78dd810aa280ee3fd4f44b6f843ca30",
                  "name": "Form",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 18,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "6c6e7dacf54de308947ee6b098bfe08150972f61d03086cc818ff178dc3ce5fb",
                  "name": "CardContent",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 61,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "7cfde21aba35a36633479c6bdc1c4dfc68605ce13eded2b403a27f6c45b4bf13",
                  "name": "FormField",
                  "kind": "VariableDeclaration",
                  "start": 31,
                  "end": 42,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "cd425e62e2adab11de25bd6a2c9e95d7e662652d19387fda9845bd83d28a9d77",
                  "name": "FormItem",
                  "kind": "VariableDeclaration",
                  "start": 75,
                  "end": 86,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "7a729cc5906642b3c0e80550a3a81e2679fc000bac732e2441b41cd61b53fe4e",
                  "name": "FormLabel",
                  "kind": "VariableDeclaration",
                  "start": 89,
                  "end": 103,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "a4a2ee5a5182faf2d8c973fb7e7ff768494d65112cbca37f77e85a255eb0c341",
                  "name": "FormControl",
                  "kind": "VariableDeclaration",
                  "start": 106,
                  "end": 125,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "0909164de260e60e39d676ec1a4910d5bd1f8f17d1582ac7afca9b3ad01937f3",
                  "name": "Input",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx"
                },
                {
                  "hash": "1c215fb25281c2a4fcee6ccd9001013ea9b0271d6d60bf78e049283ca5edbea7",
                  "name": "FormMessage",
                  "kind": "VariableDeclaration",
                  "start": 145,
                  "end": 166,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "53293b0c906854070ab7c35fcccfb81c09e72450d9212fc3552a21584a299fe0",
                  "name": "FormDescription",
                  "kind": "VariableDeclaration",
                  "start": 128,
                  "end": 142,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "cf16ce11900c1aeedee036ea3eb6e3a898cfd9bba080badf304279b14f2f6a12",
                  "name": "Switch",
                  "kind": "VariableDeclaration",
                  "start": 8,
                  "end": 26,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/switch.tsx"
                },
                {
                  "hash": "296621d7e1f7bbd75602cc81c1a18e3422043ef462b5205ba40c72e9c1fdee63",
                  "name": "CardFooter",
                  "kind": "VariableDeclaration",
                  "start": 64,
                  "end": 73,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts",
          "imports": [
            {
              "moduleSpecifier": "zod",
              "elements": [
                "z"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "repositoryConfigSchema",
              "type": "named",
              "from": "",
              "namespace": "repositoryConfigSchema"
            },
            {
              "name": "RepositoryConfig",
              "type": "named",
              "from": "",
              "namespace": "RepositoryConfig"
            }
          ],
          "blocks": [
            {
              "hash": "d288b4248c383e24c3bc363f0ec8671e93f15824603d9c49af06cb19012780ad",
              "name": "repositoryConfigSchema",
              "kind": "VariableStatement",
              "content": "export const repositoryConfigSchema = z.object({\r\n  id: z.number(),\r\n  name: z.string(),\r\n  owner: z.string(),\r\n  api_token: z.string().min(1, {\r\n    message: \"O token da API é obrigatório.\",\r\n  }),\r\n  is_batch_api: z.boolean(),\r\n});",
              "start": 3,
              "end": 11,
              "dependencies": []
            },
            {
              "hash": "8233d091da4a59c9880178f2b51bd62344fa6f0c71e571beb2a190a67b41fdfa",
              "name": "RepositoryConfig",
              "kind": "TypeAliasDeclaration",
              "content": "export type RepositoryConfig = z.infer<typeof repositoryConfigSchema>;",
              "start": 13,
              "end": 13,
              "dependencies": [
                {
                  "hash": "f0c582db269286f99e24e28b508a8fb725a49f86caa7cf700421df725949ce30",
                  "name": "repositoryConfigSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/repository-config/schema.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx",
          "imports": [
            {
              "moduleSpecifier": "@hookform/resolvers/zod",
              "elements": [
                "zodResolver"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react-hook-form",
              "elements": [
                "useFieldArray",
                "useForm"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx",
              "elements": [
                "Button"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx",
              "elements": [
                "Form",
                "FormControl",
                "FormDescription",
                "FormField",
                "FormItem",
                "FormLabel",
                "FormMessage"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx",
              "elements": [
                "Input"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/switch.tsx",
              "elements": [
                "Switch"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx",
              "elements": [
                "Card",
                "CardContent",
                "CardDescription",
                "CardFooter",
                "CardHeader",
                "CardTitle"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts",
              "elements": [
                "UserConfig",
                "userConfigSchema"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next-auth/react",
              "elements": [
                "useSession"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "react",
              "elements": [
                "useEffect",
                "useMemo"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx",
              "elements": [
                "Table",
                "TableBody",
                "TableCell",
                "TableHead",
                "TableHeader",
                "TableRow"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx",
              "elements": [
                "Select",
                "SelectContent",
                "SelectItem",
                "SelectTrigger",
                "SelectValue"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "lucide-react",
              "elements": [
                "Plus",
                "Trash2"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts",
              "elements": [
                "useToast"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts",
              "elements": [
                "saveUserConfigAction"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/schemas.ts",
              "elements": [
                "Installation"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "UserConfigForm",
              "type": "named",
              "from": "",
              "namespace": "UserConfigForm"
            }
          ],
          "blocks": [
            {
              "hash": "c5608238b49d8f8f8e3f19681c62afa5b2f02b86ffb0d7f5c63f6da6017cf470",
              "name": "UserConfigForm",
              "kind": "FunctionDeclaration",
              "content": "export function UserConfigForm({\r\n  installations,\r\n  defaultValues,\r\n}: {\r\n  installations: Installation[];\r\n  defaultValues?: UserConfig;\r\n}) {\r\n  const { toast } = useToast();\r\n  const { data: session } = useSession();\r\n  const form = useForm<UserConfig>({\r\n    resolver: zodResolver(userConfigSchema),\r\n    defaultValues: {\r\n      api_token: defaultValues?.api_token || \"\",\r\n      is_batch_api: defaultValues?.is_batch_api || true,\r\n      budget: defaultValues?.budget || 0.0,\r\n      allocations: [\r\n        ...((defaultValues?.allocations || []) as UserConfig[\"allocations\"]),\r\n      ],\r\n    },\r\n    reValidateMode: \"onChange\",\r\n  });\r\n  const { fields, append, remove } = useFieldArray({\r\n    control: form.control,\r\n    name: \"allocations\",\r\n  });\r\n\r\n  const budget = form.watch(\"budget\");\r\n  const allocations = form.watch(\"allocations\");\r\n\r\n  const availableRepositories = useMemo(() => {\r\n    return installations.filter((installation) =>\r\n      allocations.every(\r\n        (alloc) => Number(alloc.id) != installation.repository_id\r\n      )\r\n    );\r\n  }, [allocations, installations]);\r\n\r\n  useEffect(() => {\r\n    const totalAllocated = allocations.reduce(\r\n      (sum, allocation) => sum + allocation.budget,\r\n      0\r\n    );\r\n    if (totalAllocated > budget) {\r\n      form.setError(\"budget\", {\r\n        type: \"manual\",\r\n        message:\r\n          \"O orçamento geral não pode ser menor que a soma das alocações.\",\r\n      });\r\n    } else {\r\n      form.clearErrors(\"budget\");\r\n    }\r\n  }, [allocations, budget, form]);\r\n\r\n  const addLine = () => {\r\n    append({ id: \"\", budget: 0.0 });\r\n  };\r\n\r\n  async function onSubmit(values: UserConfig) {\r\n    try {\r\n      await saveUserConfigAction(session!.user.username, values);\r\n\r\n      toast({\r\n        description: \"Configurações salvas com sucesso!\",\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n      toast({\r\n        variant: \"destructive\",\r\n        description: \"Algo errado aconteceu!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleBudgetChange = (index: number, value: number) => {\r\n    const newAllocations = [...allocations];\r\n    newAllocations[index].budget = Number(value);\r\n\r\n    const totalAllocated = newAllocations.reduce(\r\n      (sum, allocation) => sum + Number(allocation.budget),\r\n      0\r\n    );\r\n    if (totalAllocated > Number(budget)) {\r\n      form.setError(`allocations.${index}.budget`, {\r\n        type: \"manual\",\r\n        message: \"A soma das alocações não pode exceder o orçamento geral.\",\r\n      });\r\n    } else {\r\n      form.clearErrors(`allocations.${index}.budget`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"w-full max-w-2xl mx-auto\">\r\n      <CardHeader>\r\n        <CardTitle>Configurações do Usuário</CardTitle>\r\n        <CardDescription>\r\n          Ajuste suas preferências e configurações da API\r\n        </CardDescription>\r\n      </CardHeader>\r\n      <Form {...form}>\r\n        <form onSubmit={form.handleSubmit(onSubmit)}>\r\n          <CardContent className=\"space-y-6\">\r\n            <FormField\r\n              control={form.control}\r\n              name=\"api_token\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>OpenAI API Token</FormLabel>\r\n                  <FormControl>\r\n                    <Input\r\n                      type=\"password\"\r\n                      placeholder=\"Insira seu token da API OpenAI\"\r\n                      {...field}\r\n                    />\r\n                  </FormControl>\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <FormField\r\n              control={form.control}\r\n              name=\"is_batch_api\"\r\n              render={({ field }) => (\r\n                <FormItem className=\"flex flex-row items-center justify-between rounded-lg border p-4\">\r\n                  <div className=\"space-y-0.5\">\r\n                    <FormLabel className=\"text-base\">Usa Batch API</FormLabel>\r\n                    <FormDescription>\r\n                      Ative para usar a API em lote, 50% de desconto.\r\n                    </FormDescription>\r\n                  </div>\r\n                  <FormControl>\r\n                    <Switch\r\n                      checked={field.value}\r\n                      onCheckedChange={field.onChange}\r\n                    />\r\n                  </FormControl>\r\n                </FormItem>\r\n              )}\r\n            />\r\n\r\n            <FormField\r\n              control={form.control}\r\n              name=\"budget\"\r\n              render={({ field }) => (\r\n                <FormItem>\r\n                  <FormLabel>Orçamento Mensal</FormLabel>\r\n                  <div className=\"flex flex-1 gap-2\">\r\n                    <FormControl>\r\n                      <Input\r\n                        type=\"number\"\r\n                        placeholder=\"Insira seu orçamento\"\r\n                        className=\"flex-1\"\r\n                        {...field}\r\n                        onChange={(e) => {\r\n                          const value = parseFloat(e.target.value);\r\n                          const totalAllocated = allocations.reduce(\r\n                            (sum, allocation) =>\r\n                              sum + Number(allocation.budget),\r\n                            0.0\r\n                          );\r\n                          if (value < totalAllocated) {\r\n                            form.setError(\"budget\", {\r\n                              type: \"manual\",\r\n                              message:\r\n                                \"O orçamento geral não pode ser menor que a soma das alocações.\",\r\n                            });\r\n                          } else {\r\n                            field.onChange(value);\r\n                            form.clearErrors(\"budget\");\r\n                          }\r\n                        }}\r\n                      />\r\n                    </FormControl>\r\n                    <Button type=\"button\" onClick={addLine}>\r\n                      <Plus className=\"h-4 w-4 mr-2\" /> Add\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <FormMessage />\r\n                </FormItem>\r\n              )}\r\n            />\r\n            <div className=\"overflow-x-auto\">\r\n              <Table>\r\n                <TableHeader>\r\n                  <TableRow>\r\n                    <TableHead className=\"w-[60%]\">Repositório</TableHead>\r\n                    <TableHead className=\"w-[20%]\">Orçamento</TableHead>\r\n                    <TableHead className=\"w-[10%] text-right\">%</TableHead>\r\n                    <TableHead className=\"w-[10%]\"></TableHead>\r\n                  </TableRow>\r\n                </TableHeader>\r\n                <TableBody>\r\n                  {fields.map((field, index) => (\r\n                    <TableRow key={field.id}>\r\n                      <TableCell className=\"max-w-0\">\r\n                        <FormField\r\n                          control={form.control}\r\n                          name={`allocations.${index}.id`}\r\n                          render={({ field }) => (\r\n                            <FormItem>\r\n                              <Select\r\n                                onValueChange={field.onChange}\r\n                                defaultValue={field.value}\r\n                              >\r\n                                <FormControl>\r\n                                  <SelectTrigger>\r\n                                    <SelectValue placeholder=\"Selecione um repositório\" />\r\n                                  </SelectTrigger>\r\n                                </FormControl>\r\n                                <SelectContent>\r\n                                  {[\r\n                                    ...(installations.filter(\r\n                                      (repo) =>\r\n                                        `${repo.repository_id}` == field.value\r\n                                    ) || []),\r\n                                    ...availableRepositories.filter(\r\n                                      (repo) =>\r\n                                        `${repo.repository_id}` != field.value\r\n                                    ),\r\n                                  ].map((repo) => (\r\n                                    <SelectItem\r\n                                      key={repo.repository_id}\r\n                                      value={String(repo.repository_id)}\r\n                                    >\r\n                                      <span className=\"block truncate\">\r\n                                        {repo.full_name}\r\n                                      </span>\r\n                                    </SelectItem>\r\n                                  ))}\r\n                                </SelectContent>\r\n                              </Select>\r\n                              <FormMessage />\r\n                            </FormItem>\r\n                          )}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <FormField\r\n                          control={form.control}\r\n                          name={`allocations.${index}.budget`}\r\n                          render={({ field }) => (\r\n                            <FormItem>\r\n                              <FormControl>\r\n                                <Input\r\n                                  type=\"number\"\r\n                                  className=\"w-full\"\r\n                                  {...field}\r\n                                  onChange={(e) => {\r\n                                    field.onChange(e);\r\n                                    const value = parseFloat(e.target.value);\r\n                                    handleBudgetChange(index, value);\r\n                                  }}\r\n                                />\r\n                              </FormControl>\r\n                              <FormMessage />\r\n                            </FormItem>\r\n                          )}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell className=\"text-right\">\r\n                        {(\r\n                          ((Number(allocations[index]?.budget) || 0.0) /\r\n                            Math.max(1.0, Number(budget))) *\r\n                          100.0\r\n                        ).toFixed(2)}\r\n                        %\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"ghost\"\r\n                          size=\"icon\"\r\n                          onClick={() => remove(index)}\r\n                        >\r\n                          <Trash2 className=\"h-4 w-4\" />\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                  <TableRow>\r\n                    <TableCell className=\"max-w-0 text-right\">\r\n                      <span className=\"block truncate\">\r\n                        Compartilhado com restante dos projetos\r\n                      </span>\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      ${\" \"}\r\n                      {(\r\n                        Number(budget) -\r\n                        allocations.reduce(\r\n                          (acc, cur) => acc + Number(cur.budget),\r\n                          0.0\r\n                        )\r\n                      ).toFixed(2)}\r\n                    </TableCell>\r\n                    <TableCell className=\"text-right\">\r\n                      {(\r\n                        ((Number(budget) -\r\n                          allocations.reduce(\r\n                            (acc, cur) => acc + Number(cur.budget),\r\n                            0.0\r\n                          )) /\r\n                          Math.max(1.0, Number(budget))) *\r\n                        100.0\r\n                      ).toFixed(2)}\r\n                      %\r\n                    </TableCell>\r\n                    <TableCell></TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </div>\r\n          </CardContent>\r\n          <CardFooter>\r\n            <Button type=\"submit\" className=\"w-full\">\r\n              Salvar Configurações\r\n            </Button>\r\n          </CardFooter>\r\n        </form>\r\n      </Form>\r\n    </Card>\r\n  );\r\n}",
              "start": 48,
              "end": 371,
              "dependencies": [
                {
                  "hash": "e5a1c6b72053d296fd036f5bc8406ac8ed13c3b3da45dd4491d574c8097b0b4e",
                  "name": "Installation",
                  "kind": "TypeAliasDeclaration",
                  "start": 11,
                  "end": 11,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/schemas.ts"
                },
                {
                  "hash": "536b44b206970d7ce2ab72d80a02f7a1c536981945aa1ca6f569c76d243a21a0",
                  "name": "UserConfig",
                  "kind": "TypeAliasDeclaration",
                  "start": 21,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts"
                },
                {
                  "hash": "de345c813280db3d258a2abd4c830ae9e379a81add9c027cb6cb620ca649c52d",
                  "name": "useToast",
                  "kind": "FunctionDeclaration",
                  "start": 172,
                  "end": 191,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/hooks/use-toast.ts"
                },
                {
                  "hash": "f08d7681e728a66b6bf593cf3a43c8b317cd5c725b403062edd6e5e162011ce6",
                  "name": "form",
                  "kind": "VariableDeclaration",
                  "start": 57,
                  "end": 68,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "dda66d125cc288a89efcd403ec4fb4d4b10c86f83d18223d1e4391bd294271e4",
                  "name": "userConfigSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts"
                },
                {
                  "hash": "0a8304d470897c6f0cdcf3fc161040424b1d71ceda23d54b841b48d5e4bc4820",
                  "name": "budget",
                  "kind": "VariableDeclaration",
                  "start": 74,
                  "end": 74,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "03e7253f72ef818a1716156dccbf140de9b804d0abc652f67bc0deb024a20e96",
                  "name": "allocations",
                  "kind": "VariableDeclaration",
                  "start": 75,
                  "end": 75,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "39656e612c2ddd5fb98d2b13530f2e9608c89825a172d5c2eef31e06516c5138",
                  "name": "availableRepositories",
                  "kind": "VariableDeclaration",
                  "start": 77,
                  "end": 83,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "6c2eb3a7c7b815f86a1ea3623c678a6f2228ef3f81329f754d52e7292c6be662",
                  "name": "totalAllocated",
                  "kind": "VariableDeclaration",
                  "start": 86,
                  "end": 89,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "a1356cba8b5f78e30422d8d1f2ee90cc9fb5cb7fce9abf8f928cbe4c993d871a",
                  "name": "addLine",
                  "kind": "VariableDeclaration",
                  "start": 101,
                  "end": 103,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "fd9c97fd0b9537e3c9b810296e48ac006ba7b065c565d6f5aff5c318aa99e7de",
                  "name": "onSubmit",
                  "kind": "FunctionDeclaration",
                  "start": 105,
                  "end": 119,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "ed7833701969aaf6c4ce092ddfb76bacf6cd4bfda418b0537de413d3592d0182",
                  "name": "saveUserConfigAction",
                  "kind": "FunctionDeclaration",
                  "start": 10,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/user.actions.ts"
                },
                {
                  "hash": "a8b0164b2498f87bebcc35e29cc3965bd333b1ca936632688ffdf48bf8ad0eb6",
                  "name": "error",
                  "kind": "VariableDeclaration",
                  "start": 112,
                  "end": 112,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "ac5a1a6ae53af3ad0895dd2623b512c4ede1e6ff4e042a57d8cf82d1347fdcce",
                  "name": "handleBudgetChange",
                  "kind": "VariableDeclaration",
                  "start": 121,
                  "end": 137,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "634e898cc50af90483416c5feda38abe0b8819a58c244d69f7b4a954c61432ce",
                  "name": "newAllocations",
                  "kind": "VariableDeclaration",
                  "start": 122,
                  "end": 122,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "44391d3b1d7fd8a23b077a1dbecb069b6a1a55421faeaf796d7e61f82bb2c0eb",
                  "name": "totalAllocated",
                  "kind": "VariableDeclaration",
                  "start": 125,
                  "end": 128,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "d95f1ea377f687c32187f1c0b3096fe0c9afc4871de2d5254fa212e4f4c7bef7",
                  "name": "Card",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 17,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "55388ca293052505bd767d3017f5401218c34102de4a8c6831023ea0dcbd73ea",
                  "name": "CardHeader",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 29,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "658972b7423a22294a8afd8caef27fc9c7565116159ad39a620a382743e50526",
                  "name": "CardTitle",
                  "kind": "VariableDeclaration",
                  "start": 32,
                  "end": 41,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "89e88d1d3c971007ef909b958a638e1d97663ce76357a3838c6cf0ec6977555b",
                  "name": "CardDescription",
                  "kind": "VariableDeclaration",
                  "start": 44,
                  "end": 53,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "c9a5d341cca8c045704b0df225755310a78dd810aa280ee3fd4f44b6f843ca30",
                  "name": "Form",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 18,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "6c6e7dacf54de308947ee6b098bfe08150972f61d03086cc818ff178dc3ce5fb",
                  "name": "CardContent",
                  "kind": "VariableDeclaration",
                  "start": 56,
                  "end": 61,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                },
                {
                  "hash": "7cfde21aba35a36633479c6bdc1c4dfc68605ce13eded2b403a27f6c45b4bf13",
                  "name": "FormField",
                  "kind": "VariableDeclaration",
                  "start": 31,
                  "end": 42,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "cd425e62e2adab11de25bd6a2c9e95d7e662652d19387fda9845bd83d28a9d77",
                  "name": "FormItem",
                  "kind": "VariableDeclaration",
                  "start": 75,
                  "end": 86,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "7a729cc5906642b3c0e80550a3a81e2679fc000bac732e2441b41cd61b53fe4e",
                  "name": "FormLabel",
                  "kind": "VariableDeclaration",
                  "start": 89,
                  "end": 103,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "a4a2ee5a5182faf2d8c973fb7e7ff768494d65112cbca37f77e85a255eb0c341",
                  "name": "FormControl",
                  "kind": "VariableDeclaration",
                  "start": 106,
                  "end": 125,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "0909164de260e60e39d676ec1a4910d5bd1f8f17d1582ac7afca9b3ad01937f3",
                  "name": "Input",
                  "kind": "VariableDeclaration",
                  "start": 7,
                  "end": 21,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/input.tsx"
                },
                {
                  "hash": "1c215fb25281c2a4fcee6ccd9001013ea9b0271d6d60bf78e049283ca5edbea7",
                  "name": "FormMessage",
                  "kind": "VariableDeclaration",
                  "start": 145,
                  "end": 166,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "53293b0c906854070ab7c35fcccfb81c09e72450d9212fc3552a21584a299fe0",
                  "name": "FormDescription",
                  "kind": "VariableDeclaration",
                  "start": 128,
                  "end": 142,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/form.tsx"
                },
                {
                  "hash": "cf16ce11900c1aeedee036ea3eb6e3a898cfd9bba080badf304279b14f2f6a12",
                  "name": "Switch",
                  "kind": "VariableDeclaration",
                  "start": 8,
                  "end": 26,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/switch.tsx"
                },
                {
                  "hash": "c34d33827ec3ae40bc27f34451ef4f2459f0cf83a7888c080cbf28390e2d8458",
                  "name": "value",
                  "kind": "VariableDeclaration",
                  "start": 202,
                  "end": 202,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "aa63e04b0213c3d9aa413757c06f6433aaed3a3c6228667411e6699631815d49",
                  "name": "totalAllocated",
                  "kind": "VariableDeclaration",
                  "start": 203,
                  "end": 207,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/index.tsx"
                },
                {
                  "hash": "56a7b1b89c0da010801e5b669d9c4f8facaaadf8720ebca8cdd804c0efe96280",
                  "name": "Button",
                  "kind": "VariableDeclaration",
                  "start": 43,
                  "end": 54,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/button.tsx"
                },
                {
                  "hash": "5298b6cf5fd0d8aad8788b0376c63538eb4721b84bd34f306ed70f9ee0257424",
                  "name": "Table",
                  "kind": "VariableDeclaration",
                  "start": 5,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx"
                },
                {
                  "hash": "4c16a1dbf063341d316a8b75ec4119bd8561fcdec7db424be79194e47266d6ce",
                  "name": "TableHeader",
                  "kind": "VariableDeclaration",
                  "start": 19,
                  "end": 24,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx"
                },
                {
                  "hash": "533ca4d42d9050961e4b79382d5e60fad641dc1cef13a3e494c089017a00d35c",
                  "name": "TableRow",
                  "kind": "VariableDeclaration",
                  "start": 54,
                  "end": 66,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx"
                },
                {
                  "hash": "c696eed9c88523e5c165aa937917a36d2569aa597e3a53a24d590643e2ee82d6",
                  "name": "TableHead",
                  "kind": "VariableDeclaration",
                  "start": 69,
                  "end": 81,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx"
                },
                {
                  "hash": "c67a3d91aad1847baa05c01d7d2943b78974ff4d1cc5666d7e9a2b234b9cd65c",
                  "name": "TableBody",
                  "kind": "VariableDeclaration",
                  "start": 27,
                  "end": 36,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx"
                },
                {
                  "hash": "391637a302a5f68687105681a2eb4c31c3205028e724f97acad4975683f27119",
                  "name": "TableCell",
                  "kind": "VariableDeclaration",
                  "start": 84,
                  "end": 96,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/table.tsx"
                },
                {
                  "hash": "3ff602e0ebf3e26ee7d0cf075d875bb06069227c68dc41e62ca5a793b29ea79a",
                  "name": "Select",
                  "kind": "VariableDeclaration",
                  "start": 14,
                  "end": 14,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx"
                },
                {
                  "hash": "6aca62ec6a7b00cf61061cdeb67dd9a580d7ef40b98dd17cdd350d84f25444ef",
                  "name": "SelectTrigger",
                  "kind": "VariableDeclaration",
                  "start": 20,
                  "end": 37,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx"
                },
                {
                  "hash": "b6ef50e12e359a5be8a5f3469e23e24901841b8ffc931d5cd5c483b2ec7a2b1e",
                  "name": "SelectValue",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 18,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx"
                },
                {
                  "hash": "84889663f5190efd20aa75af30e5fc1ba9df711f9729b93d56b3ebab2391b3da",
                  "name": "SelectContent",
                  "kind": "VariableDeclaration",
                  "start": 75,
                  "end": 104,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx"
                },
                {
                  "hash": "c0cf94d17e01d9bd0a8433218702154e8b2b29ae671ae0582a2c74a951ede631",
                  "name": "SelectItem",
                  "kind": "VariableDeclaration",
                  "start": 119,
                  "end": 138,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/select.tsx"
                },
                {
                  "hash": "296621d7e1f7bbd75602cc81c1a18e3422043ef462b5205ba40c72e9c1fdee63",
                  "name": "CardFooter",
                  "kind": "VariableDeclaration",
                  "start": 64,
                  "end": 73,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/ui/card.tsx"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts",
          "imports": [
            {
              "moduleSpecifier": "zod",
              "elements": [
                "z"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "userConfigSchema",
              "type": "named",
              "from": "",
              "namespace": "userConfigSchema"
            },
            {
              "name": "UserConfig",
              "type": "named",
              "from": "",
              "namespace": "UserConfig"
            }
          ],
          "blocks": [
            {
              "hash": "860b0568ccc25d1e2b088b4fb3c786a28d331944ed21b708e2e7de54b79ae300",
              "name": "userConfigSchema",
              "kind": "VariableStatement",
              "content": "export const userConfigSchema = z.object({\r\n  api_token: z.string().min(1, {\r\n    message: \"O token da API é obrigatório.\",\r\n  }),\r\n  is_batch_api: z.boolean(),\r\n  budget: z.coerce.number().refine((val) => Number(val) > 0, {\r\n    message: \"O orçamento deve ser um número positivo.\",\r\n  }),\r\n  allocations: z.array(\r\n    z.object({\r\n      id: z.string().min(1),\r\n      budget: z.coerce.number().refine((val) => Number(val) > 0, {\r\n        message: \"O orçamento deve ser um número positivo.\",\r\n      }),\r\n    })\r\n  ),\r\n});",
              "start": 3,
              "end": 19,
              "dependencies": []
            },
            {
              "hash": "536b44b206970d7ce2ab72d80a02f7a1c536981945aa1ca6f569c76d243a21a0",
              "name": "UserConfig",
              "kind": "TypeAliasDeclaration",
              "content": "export type UserConfig = z.infer<typeof userConfigSchema>;",
              "start": 21,
              "end": 21,
              "dependencies": [
                {
                  "hash": "dda66d125cc288a89efcd403ec4fb4d4b10c86f83d18223d1e4391bd294271e4",
                  "name": "userConfigSchema",
                  "kind": "VariableDeclaration",
                  "start": 3,
                  "end": 19,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/components/forms/user-config/schema.ts"
                }
              ]
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/auth/[...nextauth]/route.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/auth.ts",
              "elements": [
                "handlers"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "GET",
              "type": "named",
              "from": "",
              "namespace": "GET"
            },
            {
              "name": "POST",
              "type": "named",
              "from": "",
              "namespace": "POST"
            }
          ],
          "blocks": [
            {
              "hash": "599918eedd568b181ede7c16b93dca879c9c43025263ac828273685e8c16a625",
              "name": "{ GET, POST }",
              "kind": "VariableStatement",
              "content": "export const { GET, POST } = handlers;",
              "start": 2,
              "end": 2,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/github/setup/route.ts",
          "imports": [
            {
              "moduleSpecifier": "next/server",
              "elements": [
                "NextRequest"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "GET",
              "type": "named",
              "from": "",
              "namespace": "GET"
            }
          ],
          "blocks": [
            {
              "hash": "8cf854a304a3d37890f158e1ca040ebcff08da0a294b810346fdeb148e63e874",
              "name": "GET",
              "kind": "FunctionDeclaration",
              "content": "export async function GET(request: NextRequest) {\r\n  return Response.redirect(new URL(\"/\", request.url));\r\n}",
              "start": 3,
              "end": 5,
              "dependencies": []
            }
          ]
        },
        {
          "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts",
          "imports": [
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts",
              "elements": [
                "validateSignature"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts",
              "elements": [
                "connectRedis"
              ],
              "isDefault": false
            },
            {
              "moduleSpecifier": "next/server",
              "elements": [
                "NextRequest"
              ],
              "isDefault": false
            }
          ],
          "exports": [
            {
              "name": "POST",
              "type": "named",
              "from": "",
              "namespace": "POST"
            }
          ],
          "blocks": [
            {
              "hash": "5e1a1b5f3aad108eda7a5a9ba4dcb044c77102810a2fb7f26f5feca1a6d6f205",
              "name": "Repositories",
              "kind": "TypeAliasDeclaration",
              "content": "type Repositories = {\r\n  id: number;\r\n  node_id: string;\r\n  name: string;\r\n  full_name: string;\r\n  private: boolean;\r\n};",
              "start": 7,
              "end": 13,
              "dependencies": []
            },
            {
              "hash": "e3084ff758f31e993387d6e8aa8e1f6743dd5b76bcde46879f2e40c6464a6d82",
              "name": "POST",
              "kind": "FunctionDeclaration",
              "content": "export async function POST(req: NextRequest) {\r\n  const payload = await req.text();\r\n\r\n  const valid = await validateSignature(req, payload);\r\n  if (!valid) {\r\n    return Response.json({ message: \"Signature mismatch\" }, { status: 401 });\r\n  }\r\n\r\n  const event = req.headers.get(\"x-github-event\");\r\n  req.headers.forEach((value, key) =>\r\n    console.log(`header:${key}`, `value:${value}`)\r\n  );\r\n  const data = JSON.parse(payload);\r\n  const redis = await connectRedis();\r\n\r\n  const action: \"created\" | \"deleted\" | \"added\" | \"removed\" = data.action;\r\n  const installation: {\r\n    id: number;\r\n    repository_selection: string;\r\n    created_at: Date;\r\n    updated_at: Date;\r\n  } = data.installation;\r\n\r\n  switch (event) {\r\n    case \"push\": {\r\n      console.log(\"Push event:\", data.action);\r\n      break;\r\n    }\r\n    case \"pull_request\": {\r\n      console.log(\"Pull Request event:\", data.action);\r\n      break;\r\n    }\r\n    case \"installation_repositories\": {\r\n      const owner = data.installation.account.login;\r\n      switch (action) {\r\n        case \"added\":\r\n          const added: Repositories[] = data.repositories_added;\r\n          await redis.json.merge(`user:${owner}`, `$`, {\r\n            repositories: added\r\n              .map((repo) => ({\r\n                id: repo.id,\r\n                name: repo.name,\r\n                owner,\r\n                is_batch_api: true,\r\n              }))\r\n              .reduce((acc, curr) => ({ ...acc, [curr.id]: { ...curr } }), {}),\r\n          });\r\n\r\n          break;\r\n        case \"removed\":\r\n          const removed: Repositories[] = data.repositories_removed;\r\n          for (const repo of removed) {\r\n            await redis.json.del(`user:${owner}`, `$.repositories.${repo.id}`);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      break;\r\n    }\r\n    case \"installation\": {\r\n      const owner = data.installation.account.login;\r\n      switch (action) {\r\n        case \"created\":\r\n          const added: Repositories[] = data.repositories;\r\n          await redis.json.set(`user:${owner}`, `$`, {\r\n            installations: {\r\n              [installation.id]: {\r\n                id: installation.id,\r\n                repository_selection: installation.repository_selection,\r\n                created_at: installation.created_at,\r\n                updated_at: installation.updated_at,\r\n              },\r\n            },\r\n            repositories: added\r\n              .map((repo) => ({\r\n                id: repo.id,\r\n                name: repo.name,\r\n                owner,\r\n                is_batch_api: true,\r\n              }))\r\n              .reduce((acc, curr) => ({ ...acc, [curr.id]: { ...curr } }), {}),\r\n          });\r\n          break;\r\n        case \"deleted\":\r\n          const removed: Repositories[] = data.repositories;\r\n          await redis.json.del(\r\n            `user:${owner}`,\r\n            `$.installations.${installation.id}`\r\n          );\r\n          for (const repo of removed) {\r\n            await redis.json.del(`user:${owner}`, `$.repositories.${repo.id}`);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n      break;\r\n    }\r\n    default: {\r\n      console.log(\"Unhandled event type:\", event, data.action);\r\n      break;\r\n    }\r\n  }\r\n\r\n  return Response.json(\r\n    { message: \"Webhook received successfully\" },\r\n    { status: 200 }\r\n  );\r\n}",
              "start": 15,
              "end": 124,
              "dependencies": [
                {
                  "hash": "805b235a700e0befc51eadfbd74d0e50cc0bb5688d0beb2385fc9f436d0ba748",
                  "name": "payload",
                  "kind": "VariableDeclaration",
                  "start": 16,
                  "end": 16,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "6587937baa6c6ea4ceac1ed5203438cc4506292e56b935f6110a45c7f3756dbf",
                  "name": "valid",
                  "kind": "VariableDeclaration",
                  "start": 18,
                  "end": 18,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "0ec7fa5d7f13df9a5c987f6f005cd225e08f0a0c288e9e8e12d5d1e9d9040fff",
                  "name": "validateSignature",
                  "kind": "FunctionDeclaration",
                  "start": 40,
                  "end": 45,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/actions/cypher.actions.ts"
                },
                {
                  "hash": "dff3360d3368c8d2b989771b547c13afcfae3e8295d54383ba809606e23a5d87",
                  "name": "event",
                  "kind": "VariableDeclaration",
                  "start": 23,
                  "end": 23,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "61afd59d154cb0fa1a506052c32650b1e2297bcf8a5822caa362e9e1f1a2c02a",
                  "name": "data",
                  "kind": "VariableDeclaration",
                  "start": 27,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "00ac93d7517260fe965e671c966eab0b30563fa4e7a4768798dae098c95d28c7",
                  "name": "redis",
                  "kind": "VariableDeclaration",
                  "start": 28,
                  "end": 28,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "89223ef8a1478876883543191c72207fb92f756ac68710f6f45311d618b51031",
                  "name": "connectRedis",
                  "kind": "FunctionDeclaration",
                  "start": 5,
                  "end": 27,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/lib/redis.ts"
                },
                {
                  "hash": "4f16049fc1b1c609af513a985ffbf2f73f56bf8c435bac2cc7da1f2421d1a4f5",
                  "name": "action",
                  "kind": "VariableDeclaration",
                  "start": 30,
                  "end": 30,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "69d0cdd226ed57ece4248df369679aa9977bcb9eab802541fa2d03e32314605c",
                  "name": "installation",
                  "kind": "VariableDeclaration",
                  "start": 31,
                  "end": 36,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "8858124438fca8093d7a5faade528b28431bbb3eeee561f56c8b109a76d97f96",
                  "name": "owner",
                  "kind": "VariableDeclaration",
                  "start": 48,
                  "end": 48,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "df0dc446e66d3a371b8d85c0d3efd5a8efc4f377c6a0f1805f1410189ba2c184",
                  "name": "added",
                  "kind": "VariableDeclaration",
                  "start": 51,
                  "end": 51,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "5e1a1b5f3aad108eda7a5a9ba4dcb044c77102810a2fb7f26f5feca1a6d6f205",
                  "name": "Repositories",
                  "kind": "TypeAliasDeclaration",
                  "start": 7,
                  "end": 13,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "3a4a8b7f873612bc3b403546e7c1be994d2188b0e6c0d80a31666c73069f5c9a",
                  "name": "removed",
                  "kind": "VariableDeclaration",
                  "start": 65,
                  "end": 65,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "ade13b114c3fceee07854f8f0fe8ae85c7391b9252162721fcd66e9b6b8b3da9",
                  "name": "repo",
                  "kind": "VariableDeclaration",
                  "start": 66,
                  "end": 66,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "b14e290b0794140423cc0665161b904007fd0a4e877dc18bb23aeea33d94b365",
                  "name": "added",
                  "kind": "VariableDeclaration",
                  "start": 79,
                  "end": 79,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                },
                {
                  "hash": "b5f95e1cb3b35dd77ce17392529fdcad0292281916a0d53735845b65b6da0df3",
                  "name": "removed",
                  "kind": "VariableDeclaration",
                  "start": 100,
                  "end": 100,
                  "path": "D:/Documentos/Pessoal/Github/project-wiz/backend/data/repos/197f5d11f98ea10d74b9be03de2dfe8b4f0c30ae/frontend/src/app/api/webhook/github/route.ts"
                }
              ]
            }
          ]
        }
      ]
    }
  }
]